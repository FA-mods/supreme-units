{"version":3,"file":"igniteui-webcomponents-maps.992f5a4100db0ac78f7f.bundle.js","mappings":"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","sources":["webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMapSeriesHost_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMarkerSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesBase_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImageTilesReadyEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImagesChangedEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapBackgroundTilingMode.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapResizeBehavior.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileSeries_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorVerticalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorHorizontalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/XamGeographicMap_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsImageryStyle.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-sub-domains-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SubDomainsCollection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsMapImageryView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/CustomMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicContourLineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicHighDensityScatterSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ArcGISOnlineMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-core-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-images-changed-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-series-host-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-marker-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicPolylineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicProportionalSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-base-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicTileSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-xy-triangulating-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-image-tiles-ready-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileGeneratorMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-module.ts"],"sourcesContent":["/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Base, Point, Type, typeCast, Number_$type, runOn, delegateRemove, delegateCombine, markType, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { SeriesPointOfInterest } from \"igniteui-charts/SeriesPointOfInterest\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { HighlightingInfo } from \"igniteui-charts/HighlightingInfo\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { RectChangedEventArgs } from \"igniteui-core/RectChangedEventArgs\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { DataContext } from \"igniteui-core/DataContext\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { Visibility } from \"igniteui-core/Visibility\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapSeriesHost extends Series {\r\n\tstatic $t: Type = markType(GeographicMapSeriesHost, 'GeographicMapSeriesHost', (<any>Series).$);\r\n\tln(): void {\r\n\t\tsuper.ln();\r\n\t\tif (this.qa != null) {\r\n\t\t\tthis.qa.ln();\r\n\t\t}\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.qa = this.p9();\r\n\t}\r\n\tprivate p8: Series = null;\r\n\tprotected get_dw(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\thy(a: any, b: string): any {\r\n\t\tlet c = this.js(b);\r\n\t\tif (c == \"LatitudeMemberPath\") {\r\n\t\t\tc = \"YMemberPath\";\r\n\t\t}\r\n\t\tif (c == \"LongitudeMemberPath\") {\r\n\t\t\tc = \"XMemberPath\";\r\n\t\t}\r\n\t\treturn this.qa.hy(a, b);\r\n\t}\r\n\tc1(a: List$1<SeriesPointOfInterest>, b: boolean, c: boolean, d: number): boolean {\r\n\t\treturn this.qa.c1(a, b, c, d);\r\n\t}\r\n\tag(): Axis[] {\r\n\t\treturn this.qa.ag();\r\n\t}\r\n\tbe(): Series {\r\n\t\treturn this.qa;\r\n\t}\r\n\tget qa(): Series {\r\n\t\treturn this.p8;\r\n\t}\r\n\tset qa(a: Series) {\r\n\t\tlet b: boolean = this.qa != a;\r\n\t\tif (b) {\r\n\t\t\tthis.p8 = a;\r\n\t\t\tthis.qf();\r\n\t\t}\r\n\t}\r\n\tprotected get_hasMarkers(): boolean {\r\n\t\treturn this.qa.hasMarkers;\r\n\t}\r\n\tprotected qf(): void {\r\n\t\tif (this.p8 != null) {\r\n\t\t\tlet hostedSeries_ = this.p8;\r\n\t\t\t(<any>hostedSeries_).externalObject = TypeRegistrar.createFromInternal(hostedSeries_, PlatformConstants.Prefix, PlatformConstants.Postfix);\r\n\t\t\t(<any>hostedSeries_).externalObject._implementation = hostedSeries_;\r\n\t\t}\r\n\t\tthis.k5(this.qa);\r\n\t\tthis.qb.b2();\r\n\t}\r\n\taw(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.ay(this.qa, a, b, c);\r\n\t}\r\n\tax(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.az(this.qa, a, b, c);\r\n\t}\r\n\thv(a: Point): any {\r\n\t\treturn this.h0(this.qa, a);\r\n\t}\r\n\thl(a: Point, b: boolean): number {\r\n\t\treturn this.qa.hl(a, b);\r\n\t}\r\n\thj(a: Point, b: boolean): number {\r\n\t\treturn this.qa.hj(a, b);\r\n\t}\r\n\tgl(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qa.gl(a, b, c);\r\n\t}\r\n\tpq(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qa.pq(a, b, c);\r\n\t}\r\n\tpz(a: Point): Rect {\r\n\t\treturn this.qa.pz(a);\r\n\t}\r\n\tak(a: Point): Rect[] {\r\n\t\treturn this.qa.ak(a);\r\n\t}\r\n\tp0(a: Point): Rect {\r\n\t\treturn this.qa.p0(a);\r\n\t}\r\n\tal(a: Point): Rect[] {\r\n\t\treturn this.qa.al(a);\r\n\t}\r\n\tp1(a: Point): Rect {\r\n\t\treturn this.qa.p1(a);\r\n\t}\r\n\tp2(a: Point): Rect {\r\n\t\treturn this.qa.p2(a);\r\n\t}\r\n\tgh(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qa.gh(a, b, c);\r\n\t}\r\n\tpm(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qa.pm(a, b, c);\r\n\t}\r\n\tgj(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.gl(a, b, c);\r\n\t}\r\n\tpo(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qa.po(a, b, c);\r\n\t}\r\n\tpr(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qa.pr(a, b, c);\r\n\t}\r\n\tgm(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qa.gm(a, b, c);\r\n\t}\r\n\tpn(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qa.pn(a, b, c);\r\n\t}\r\n\tgi(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qa.gi(a, b, c);\r\n\t}\r\n\tpp(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qa.pp(a, b, c);\r\n\t}\r\n\tgk(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qa.gk(a, b, c);\r\n\t}\r\n\thg(a: Point): number {\r\n\t\treturn this.qa.hg(a);\r\n\t}\r\n\tgc(): number {\r\n\t\treturn this.qa.gc();\r\n\t}\r\n\tf8(a: Point): number {\r\n\t\treturn this.qa.f8(a);\r\n\t}\r\n\thw(a: Point): any {\r\n\t\treturn this.qa.hw(a);\r\n\t}\r\n\tprotected abstract p9(): Series;\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new HostSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.qb = typeCast<HostSeriesView>((<any>HostSeriesView).$, a);\r\n\t}\r\n\tqb: HostSeriesView;\r\n\tstatic readonly qh: DependencyProperty = DependencyProperty.i(\"VisibleFromScale\", Number_$type, (<any>GeographicMapSeriesHost).$, new PropertyMetadata(2, 1, (a: DependencyObject, b: DependencyPropertyChangedEventArgs) => {\r\n\t\tlet c: GeographicMapSeriesHost = <GeographicMapSeriesHost>a;\r\n\t\tc.raisePropertyChanged(\"VisibleFromScale\", b.oldValue, b.newValue);\r\n\t}));\r\n\tget qc(): number {\r\n\t\treturn <number>this.c(GeographicMapSeriesHost.qh);\r\n\t}\r\n\tset qc(a: number) {\r\n\t\tthis.h(GeographicMapSeriesHost.qh, a);\r\n\t}\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.qa.cd = this.cd;\r\n\t\t\tif (c != null) {\r\n\t\t\t\t(<SeriesViewer>c).op(this.qa);\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.cd.lk(this.qa);\r\n\t\t\t}\r\n\t\t\tthis.qa.ma(this.p3);\r\n\t\t\tthis.qa.index = this.index;\r\n\t\t\tthis.lb(this.qa);\r\n\t\t\tthis.hq = this.qa.hq;\r\n\t\t\tlet e: SeriesViewer = typeCast<SeriesViewer>((<any>SeriesViewer).$, c);\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.actualWindowRectChanged = delegateRemove(e.actualWindowRectChanged, runOn(this, this.qg));\r\n\t\t\t}\r\n\t\t\tif (this.cd != null) {\r\n\t\t\t\tlet f = this.cd;\r\n\t\t\t\tf.actualWindowRectChanged = delegateCombine(f.actualWindowRectChanged, runOn(this, this.qg));\r\n\t\t\t}\r\n\t\t\tthis.qe();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SyncLink\":\r\n\t\t\tthis.qa.b8 = this.b8;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"VisibleFromScale\":\r\n\t\t\tthis.qe();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Index\":\r\n\t\t\tthis.qa.index = this.index;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ItemsSource\":\r\n\t\t\tthis.qb.b3();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Resolution\":\r\n\t\t\tthis.qb.ca();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"TransitionDuration\":\r\n\t\t\tthis.qb.cd();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Opacity\":\r\n\t\t\tthis.qb.b7();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Visibility\":\r\n\t\t\tlet hs_ = this.qa;\r\n\t\t\tlet v_ = this._visibility;\r\n\t\t\ths_.visibility = v_;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MouseOverEnabled\":\r\n\t\t\tthis.qa.em = this.em;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ExpectFunctions\":\r\n\t\t\tthis.qa.expectFunctions = this.expectFunctions;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Thickness\":\r\n\t\t\tthis.qb.cc();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Brush\":\r\n\t\t\tthis.qb.b1();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Outline\":\r\n\t\t\tthis.qb.b9();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\t\t\tthis.qb.by();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\t\t\tthis.qb.bz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerFillOpacity\":\r\n\t\t\tif (!isNaN_(this.gs)) {\r\n\t\t\t\tthis.qb.b6();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"AreaFillOpacity\":\r\n\t\t\tif (!isNaN_(this.f1)) {\r\n\t\t\t\tthis.qb.b0();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"OutlineMode\":\r\n\t\t\tthis.qb.b8();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShowDefaultTooltip\":\r\n\t\t\tthis.qb.cb();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Title\":\r\n\t\t\tthis.qa.title = this.title;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeMode\":\r\n\t\t\tthis.qb.b4();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeShape\":\r\n\t\t\tthis.qb.b5();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Legend\":\r\n\t\t\tthis.qa.legend = this.legend;\r\n\t\t\tthis.b0.at();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate qe(): void {\r\n\t\tif (this.cd == null || this.qa == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!isNaN_(this.qc)) {\r\n\t\t\tif (this.cd.s9.width > this.qc) {\r\n\t\t\t\tlet hs_ = this.qa;\r\n\t\t\t\tlet v_ = 1;\r\n\t\t\t\ths_.visibility = v_;\r\n\t\t\t} else {\r\n\t\t\t\tlet hs2_ = this.qa;\r\n\t\t\t\tlet v2_ = 0;\r\n\t\t\t\ths2_.visibility = v2_;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate qg(a: any, b: RectChangedEventArgs): void {\r\n\t\tthis.qe();\r\n\t}\r\n\tml(a: boolean): void {\r\n\t\tsuper.ml(a);\r\n\t\tif (this.qa != null) {\r\n\t\t\tthis.qa.ml(a);\r\n\t\t}\r\n\t}\r\n\tmk(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tif (this.qa != null) {\r\n\t\t\tthis.qa.mk(a, b, c, d, e);\r\n\t\t}\r\n\t}\r\n\tat(a: Point, b: boolean): DataContext {\r\n\t\treturn this.qa.at(a, b);\r\n\t}\r\n\tmv(): void {\r\n\t\tsuper.mv();\r\n\t\tthis.qa.mv();\r\n\t}\r\n\tprotected get_coercionMethods(): any {\r\n\t\treturn this._coercionMethods;\r\n\t}\r\n\tprotected set_coercionMethods(a: any): void {\r\n\t\tthis._coercionMethods = a;\r\n\t\tthis.qa.coercionMethods = a;\r\n\t}\r\n\tprotected la(a: any): void {\r\n\t\tsuper.la(a);\r\n\t\tif (this.qa != null) {\r\n\t\t\tlet b = this.qa.hu();\r\n\t\t\tthis.k2(a, b);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HostSeriesView extends SeriesView {\r\n\tstatic $t: Type = markType(HostSeriesView, 'HostSeriesView', (<any>SeriesView).$);\r\n\tconstructor(a: GeographicMapSeriesHost) {\r\n\t\tsuper(a);\r\n\t\tthis.bx = a;\r\n\t}\r\n\tprivate bx: GeographicMapSeriesHost = null;\r\n\tar(a: RenderingContext, b: RenderingContext): void {\r\n\t\tsuper.ar(a, b);\r\n\t}\r\n\tb2(): void {\r\n\t\tthis.bx.p7 = 1;\r\n\t\tthis.bx.qa.p7 = 0;\r\n\t\tthis.bx.qa.itemsSource = this.bx.itemsSource;\r\n\t\tthis.bx.qa.index = this.bx.index;\r\n\t\tthis.bx.qa.o7 = this.bx.o7;\r\n\t\tthis.bx.qa.pc = this.bx.o7;\r\n\t\tthis.bx.qa.bt = this.bx.bt;\r\n\t\tthis.bx.qa.gv = this.bx.gv;\r\n\t\tthis.bx.qa.ho = this.bx.ho;\r\n\t\tthis.bx.qa._opacity = this.bx._opacity;\r\n\t\tthis.bx.qa.g1 = this.bx.g1;\r\n\t\tthis.bx.qa.f1 = this.bx.f1;\r\n\t\tthis.bx.qa.gs = this.bx.gs;\r\n\t\tthis.bx.qa.et = this.bx.et;\r\n\t\tthis.bx.qa.legendItemBadgeShape = this.bx.legendItemBadgeShape;\r\n\t\tthis.bx.qa.a9 = this.bx.a9;\r\n\t}\r\n\tb3(): void {\r\n\t\tthis.bx.qa.itemsSource = this.bx.itemsSource;\r\n\t}\r\n\tca(): void {\r\n\t\tthis.bx.qa.gv = this.bx.gv;\r\n\t}\r\n\tcd(): void {\r\n\t\tthis.bx.qa.ho = this.bx.ho;\r\n\t}\r\n\tb7(): void {\r\n\t\tthis.bx.qa._opacity = this.bx._opacity;\r\n\t}\r\n\tcc(): void {\r\n\t\tthis.bx.qa.g1 = this.bx.g1;\r\n\t}\r\n\tb1(): void {\r\n\t\tthis.bx.qa.o7 = this.bx.o7;\r\n\t}\r\n\tb9(): void {\r\n\t\tthis.bx.qa.pc = this.bx.pc;\r\n\t}\r\n\tby(): void {\r\n\t\tthis.bx.qa.o7 = this.bx.o3;\r\n\t}\r\n\tbz(): void {\r\n\t\tthis.bx.qa.pc = this.bx.o6;\r\n\t}\r\n\tb4(): void {\r\n\t\tthis.bx.qa.a9 = this.bx.a9;\r\n\t}\r\n\tb5(): void {\r\n\t\tthis.bx.qa.legendItemBadgeShape = this.bx.legendItemBadgeShape;\r\n\t}\r\n\tb0(): void {\r\n\t\tthis.bx.qa.f1 = this.bx.f1;\r\n\t}\r\n\tb6(): void {\r\n\t\tthis.bx.qa.gs = this.bx.gs;\r\n\t}\r\n\tb8(): void {\r\n\t\tthis.bx.qa.bt = this.bx.bt;\r\n\t}\r\n\tcb(): void {\r\n\t\tthis.bx.qa.et = this.bx.et;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, Type, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, typeGetValue, markType, markDep, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMarkerSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicMarkerSeries, 'GeographicMarkerSeries', (<any>GeographicMapSeriesHost).$);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tlet a = this.qa;\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.qy));\r\n\t}\r\n\tnh(): DataTemplate {\r\n\t\treturn this.qz;\r\n\t}\r\n\tpa(): Brush {\r\n\t\treturn this.rc;\r\n\t}\r\n\tpb(): Brush {\r\n\t\treturn this.rd;\r\n\t}\r\n\tf4(): number {\r\n\t\treturn this.ql;\r\n\t}\r\n\ti0(): string {\r\n\t\tlet a = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.qa);\r\n\t\tif (a == null) {\r\n\t\t\treturn \"Unknown\";\r\n\t\t}\r\n\t\treturn a.i0();\r\n\t}\r\n\tprivate qy(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.qa);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualMarkerTemplate\") {\r\n\t\t\tthis.qz = c.q1;\r\n\t\t} else if (b.propertyName == \"ActualMarkerOutline\") {\r\n\t\t\tthis.rd = c.ri;\r\n\t\t} else if (b.propertyName == \"ActualMarkerBrush\") {\r\n\t\t\tthis.rc = c.rh;\r\n\t\t}\r\n\t}\r\n\tqk: MarkerType;\r\n\tql: number;\r\n\tqj: MarkerOutlineMode;\r\n\tqi: MarkerFillMode;\r\n\tq0: DataTemplate;\r\n\tre: Brush;\r\n\trf: Brush;\r\n\tqm: number;\r\n\tqz: DataTemplate;\r\n\trc: Brush;\r\n\trd: Brush;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicMarkerSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.qa).rj = this.re;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.qa).rk = this.rf;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.qa).qe = this.qj;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.qa).qa = this.qi;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[9]:\r\n\t\t\t(<ScatterBase>this.qa).qh = this.qk;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[7]:\r\n\t\t\t(<ScatterBase>this.qa).q3 = this.q0;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[8]:\r\n\t\t\t(<ScatterBase>this.qa).qm = this.ql;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[10]:\r\n\t\t\t(<ScatterBase>this.qa).s2 = this.qm;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMarkerSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:rc:q1', [ (<any>Brush).$ ], 'ActualMarkerOutline:rd:q2', [ (<any>Brush).$ ], 'ActualMarkerTemplate:qz:q3', [ (<any>DataTemplate).$, null ], 'MarkerBrush:re:q4', [ (<any>Brush).$ ], 'MarkerFillMode:qi:q5', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:qj:q6', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:rf:q7', [ (<any>Brush).$ ], 'MarkerTemplate:q0:q8', [ (<any>DataTemplate).$, null ], 'MarkerThickness:ql:q9', [ 1, DeviceUtils.g(2) ], 'MarkerType:qk:ra', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, Defaults.e) ], 'MaximumMarkers:qm:rb', [ 1, 400 ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from \"igniteui-charts/ShapeItemSearchMode\";\r\nimport { ShapefileConverter } from \"igniteui-core/ShapefileConverter\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Base, IEnumerable, IEnumerable_$type, Type, String_$type, typeCast, Boolean_$type, enumGetBox, EnumUtil, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markType, markDep } from \"igniteui-core/type\";\r\nimport { AssigningShapeStyleEventArgs } from \"igniteui-charts/AssigningShapeStyleEventArgs\";\r\nimport { AssigningShapeMarkerStyleEventArgs } from \"igniteui-charts/AssigningShapeMarkerStyleEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { AsyncCompletedEventArgs } from \"igniteui-core/AsyncCompletedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicShapeSeriesBase extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBase, 'GeographicShapeSeriesBase', (<any>GeographicMapSeriesHost).$);\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesBaseView(this);\r\n\t}\r\n\tql: GeographicShapeSeriesBaseView;\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.ql = <GeographicShapeSeriesBaseView>a;\r\n\t}\r\n\tq3: string;\r\n\tprotected get_dy(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected get_c2(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tqs: boolean;\r\n\tqr: boolean;\r\n\tprotected qq: boolean = false;\r\n\tprotected qp: boolean = false;\r\n\tqk: ShapeItemSearchMode;\r\n\tqv: number;\r\n\tqu: number;\r\n\tassigningShapeStyle: (sender: any, args: AssigningShapeStyleEventArgs) => void = null;\r\n\tassigningShapeMarkerStyle: (sender: any, args: AssigningShapeMarkerStyleEventArgs) => void = null;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.ql.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapeMemberPath\":\r\n\t\t\tthis.ql.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[5]:\r\n\t\t\tthis.ql.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[1]:\r\n\t\t\t(<ShapeSeriesBase>this.qa).q9 = this.qs;\r\n\t\t\tthis.qq = this.qs;\r\n\t\t\tif (this.qs) {\r\n\t\t\t\tlet e = (<ShapeSeriesBase>this.qa);\r\n\t\t\t\te.assigningShapeStyle = delegateCombine(e.assigningShapeStyle, runOn(this, this.q6));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ShapeSeriesBase>this.qa);\r\n\t\t\t\tf.assigningShapeStyle = delegateRemove(f.assigningShapeStyle, runOn(this, this.q6));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[0]:\r\n\t\t\t(<ShapeSeriesBase>this.qa).q8 = this.qr;\r\n\t\t\tthis.qp = this.qr;\r\n\t\t\tif (this.qs) {\r\n\t\t\t\tlet g = (<ShapeSeriesBase>this.qa);\r\n\t\t\t\tg.assigningShapeMarkerStyle = delegateCombine(g.assigningShapeMarkerStyle, runOn(this, this.q5));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ShapeSeriesBase>this.qa);\r\n\t\t\t\th.assigningShapeMarkerStyle = delegateRemove(h.assigningShapeMarkerStyle, runOn(this, this.q5));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[2]:\r\n\t\t\t(<ShapeSeriesBase>this.qa).qv = this.qk;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[3]:\r\n\t\t\t(<ShapeSeriesBase>this.qa).rq = this.qu;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[4]:\r\n\t\t\t(<ShapeSeriesBase>this.qa).rr = this.qv;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapefileDataSource\":\r\n\t\t\tif (c != null) {\r\n\t\t\t\tlet i = <ShapefileConverter>c;\r\n\t\t\t\tif (this.qo) {\r\n\t\t\t\t\ti.importCompleted = delegateRemove(i.importCompleted, runOn(this, this.q7));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tlet j = <ShapefileConverter>d;\r\n\t\t\t\tif (j.count > 0) {\r\n\t\t\t\t\tthis.q8();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.qo = true;\r\n\t\t\t\tj.importCompleted = delegateCombine(j.importCompleted, runOn(this, this.q7));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate q6(a: any, b: AssigningShapeStyleEventArgs): void {\r\n\t\tif (this.assigningShapeStyle != null) {\r\n\t\t\tthis.assigningShapeStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate q5(a: any, b: AssigningShapeMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningShapeMarkerStyle != null) {\r\n\t\t\tthis.assigningShapeMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate q7(a: any, b: AsyncCompletedEventArgs): void {\r\n\t\tthis.q8();\r\n\t}\r\n\tprivate q8(): void {\r\n\t\tlet sds_ = this.qn;\r\n\t\tlet ext_ = (sds_ as any).externalObject;\r\n\t\tthis.itemsSource = <IEnumerable><any><any>(ext_.getPointData());\r\n\t}\r\n\tprivate qm: ShapefileConverter = null;\r\n\tprivate qo: boolean = false;\r\n\tget qn(): ShapefileConverter {\r\n\t\treturn this.qm;\r\n\t}\r\n\tset qn(a: ShapefileConverter) {\r\n\t\tlet b = this.qm;\r\n\t\tthis.qm = a;\r\n\t\tif (b != this.qm) {\r\n\t\t\tthis.raisePropertyChanged(\"ShapefileDataSource\", b, this.qm);\r\n\t\t}\r\n\t}\r\n\tqt: number;\r\n\tprotected get_e5(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_e5(a: boolean): void {\r\n\t\tsuper.set_e5(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeriesBase, 'raisePropertyChanged', [ 'IsCustomShapeMarkerStyleAllowed:qr:q9', [ 0, false ], 'IsCustomShapeStyleAllowed:qs:ra', [ 0, false ], 'ItemSearchMode:qk:rb', [ ShapeItemSearchMode_$type, enumGetBox<ShapeItemSearchMode>(ShapeItemSearchMode_$type, 0) ], 'ItemSearchPointsThreshold:qu:rc', [ 1, 10000 ], 'ItemSearchThreshold:qv:rd', [ 1, 10000 ], 'ShapeFilterResolution:qt:re', [ 1, 2 ], 'ShapeMemberPath:q3:rf', [ 2, \"points\" ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesBaseView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBaseView, 'GeographicShapeSeriesBaseView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicShapeSeriesBase) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicShapeSeriesBase = null;\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\t(<ShapeSeriesBase>this.ce.qa).r1 = this.ce.q3;\r\n\t}\r\n\tcf(): void {\r\n\t\tlet a: ShapeSeriesBase = <ShapeSeriesBase>this.ce.qa;\r\n\t\tif (this.ce.cd == null) {\r\n\t\t\ta.qp = null;\r\n\t\t\ta.qr = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.qp = (<XamGeographicMap>this.ce.cd).tw;\r\n\t\ta.qr = (<XamGeographicMap>this.ce.cd).ty;\r\n\t}\r\n\tch(): void {\r\n\t\t(<ShapeSeriesBase>this.ce.qa).r1 = this.ce.q3;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<ShapeSeriesBase>this.ce.qa).rn = this.ce.qt;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImageTilesReadyEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImageTilesReadyEventArgs, 'ImageTilesReadyEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImagesChangedEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImagesChangedEventArgs, 'ImagesChangedEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapBackgroundTilingMode {\r\n\t/**\r\n\t * Indicates that the map should decide the desired tiling mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will not wrap tiles around the origin.\r\n\t */\r\n\tNonWrapped = 1,\r\n\t/**\r\n\t * Map will wrap tiles around the origin.\r\n\t */\r\n\tWrapped = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapBackgroundTilingMode_$type = markEnum('MapBackgroundTilingMode', 'Auto,0|NonWrapped,1|Wrapped,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapResizeBehavior {\r\n\t/**\r\n\t * Indicates that the map should decide the desired resize mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will attempt to keep the top left position static during resize.\r\n\t */\r\n\tMaintainTopLeftPosition = 1,\r\n\t/**\r\n\t * Map will attempt to keep the center position static during resize.\r\n\t */\r\n\tMaintainCenterPosition = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapResizeBehavior_$type = markEnum('MapResizeBehavior', 'Auto,0|MaintainTopLeftPosition,1|MaintainCenterPosition,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, PropertyChangedEventArgs, EventArgs, runOn, delegateRemove, delegateCombine, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { DomRenderer, DomRenderer_$type, DomWrapper, DomWrapper_$type } from \"igniteui-core/dom\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { Dictionary$2 } from \"igniteui-core/Dictionary$2\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { ShapeSeriesViewBase } from \"igniteui-charts/ShapeSeriesViewBase\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { GeometryGroup } from \"igniteui-core/GeometryGroup\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { PathGeometry } from \"igniteui-core/PathGeometry\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { PathFigure } from \"igniteui-core/PathFigure\";\r\nimport { Geometry } from \"igniteui-core/Geometry\";\r\nimport { PointCollection } from \"igniteui-core/PointCollection\";\r\nimport { CanvasViewRenderer } from \"igniteui-core/CanvasViewRenderer\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { truncate } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeries extends ShapeSeriesBase implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(TileSeries, 'TileSeries', (<any>ShapeSeriesBase).$, [IMapRenderDeferralHandler_$type]);\r\n\tprotected get_ej(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>TileSeries).$;\r\n\t}\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new TileSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.sv = <TileSeriesView>a;\r\n\t}\r\n\tprotected get_rb(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tprotected sv: TileSeriesView;\r\n\tget sz(): GeographicMapImagery {\r\n\t\treturn this.sx;\r\n\t}\r\n\tset sz(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.sz;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.sz;\r\n\t\t\tthis.sx = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate sx: GeographicMapImagery = null;\r\n\tprivate sw: GeographicMapImagery = null;\r\n\tprotected get sy(): GeographicMapImagery {\r\n\t\treturn this.sw;\r\n\t}\r\n\tprotected set sy(a: GeographicMapImagery) {\r\n\t\tlet b = this.sw;\r\n\t\tthis.sw = a;\r\n\t\tthis.raisePropertyChanged(\"ActualTileImagery\", b, this.sw);\r\n\t}\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tlet e: GeographicMapImagery;\r\n\t\tlet f: GeographicMapImagery;\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.propertyChanged = delegateRemove(e.propertyChanged, runOn(this, this.s4));\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.propertyChanged = delegateCombine(f.propertyChanged, runOn(this, this.s4));\r\n\t\t\t}\r\n\t\t\tthis.sv.de(e, f);\r\n\t\t\tthis.ml(false);\r\n\t\t\tthis.ls();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.s5));\r\n\t\t\t\te.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.s5));\r\n\t\t\t\tf.deferralHandler = this;\r\n\t\t\t}\r\n\t\t\tthis.sv.dd(e, f);\r\n\t\t\tif (f != null && typeCast<XamGeographicMap>((<any>XamGeographicMap).$, this.cd) !== null) {\r\n\t\t\t\tf.geographicMap = <XamGeographicMap>this.cd;\r\n\t\t\t\tthis.s7(this.b0);\r\n\t\t\t\tthis.sv.da(this.cd.s9);\r\n\t\t\t}\r\n\t\t\tthis.ls();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.sv.da(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WorldRect\":\r\n\t\t\tthis.sv.dh(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tlet g = <SeriesViewer>c;\r\n\t\t\tlet h = <SeriesViewer>d;\r\n\t\t\tif (g != null && this.sy != null) {\r\n\t\t\t\tthis.sy.be(null);\r\n\t\t\t}\r\n\t\t\tif (h != null && this.sy != null) {\r\n\t\t\t\tthis.sy.be(this.b0.w);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\r\n\t\t\tcase \"ActualThickness\":\r\n\t\t\tthis.lu();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate s4(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tif (b.propertyName == \"MultiScaleImage\") {\r\n\t\t\tthis.s7(this.b0);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: EventArgs) => void = null;\r\n\tprivate s5(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new EventArgs());\r\n\t\t}\r\n\t\tif (!this.s1) {\r\n\t\t\tthis.sv.df();\r\n\t\t}\r\n\t}\r\n\tprivate s0: (arg1: boolean) => void = null;\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.s0 = b;\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.s0 = null;\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.ml(false);\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.hb != null) {\r\n\t\t\tthis.hb.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\tprotected m8(a: Rect, b: Rect): void {\r\n\t\tthis.sv.dg();\r\n\t\tsuper.m8(a, b);\r\n\t}\r\n\tprivate s1: boolean = false;\r\n\tmm(a: boolean): void {\r\n\t\tsuper.mm(a);\r\n\t\tthis.s6(a, this.b0);\r\n\t}\r\n\tprotected s6(a: boolean, b: SeriesView): void {\r\n\t\tlet c: Rect;\r\n\t\tlet d: Rect;\r\n\t\tlet e = <TileSeriesView>b;\r\n\t\tlet f = b.getViewInfo(c, d);\r\n\t\tc = f.p0;\r\n\t\td = f.p1;\r\n\t\tthis.s7(b);\r\n\t\tif (this.s0 != null) {\r\n\t\t\tthis.s1 = true;\r\n\t\t\tthis.s0(a);\r\n\t\t\tthis.s1 = false;\r\n\t\t}\r\n\t\te.df();\r\n\t}\r\n\tmk(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tsuper.mk(a, b, c, d, e);\r\n\t\tlet f = this.fe.item(d);\r\n\t\tf.a1(c);\r\n\t\tif (this.cx(f)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.sf(f);\r\n\t}\r\n\tprivate s7(a: SeriesView): void {\r\n\t\tlet b: Rect;\r\n\t\tlet c: Rect;\r\n\t\tlet d = a.getViewInfo(b, c);\r\n\t\tb = d.p0;\r\n\t\tc = d.p1;\r\n\t\tif (this.sz != null && this.sz.ao != null) {\r\n\t\t\tif (this.sz != this.sy) {\r\n\t\t\t\tthis.sy = this.sz;\r\n\t\t\t}\r\n\t\t\tif (this.sy != null && !b.isEmpty) {\r\n\t\t\t\tif (this.sy.width != b.width) {\r\n\t\t\t\t\tthis.sy.width = b.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.sy.height != b.height) {\r\n\t\t\t\t\tthis.sy.height = b.height;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tk0(a: boolean, b: SeriesView): void {\r\n\t\tsuper.k0(a, b);\r\n\t\t(<TileSeriesView>b).db();\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeriesView extends ShapeSeriesViewBase {\r\n\tstatic $t: Type = markType(TileSeriesView, 'TileSeriesView', (<any>ShapeSeriesViewBase).$);\r\n\tconstructor(a: TileSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.c7 = a;\r\n\t}\r\n\tprotected c7: TileSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.c7.pc = Defaults.ao;\r\n\t\t\tthis.c7.o7 = Defaults.an;\r\n\t\t}\r\n\t}\r\n\tprotected ch(a: FrameworkElement, b: PathGeometry): void {\r\n\t\tif (b.c.count > 0) {\r\n\t\t\tthis.di.d.add(b);\r\n\t\t}\r\n\t}\r\n\tprotected c2(a: number, b: List$1<PointCollection>): PathGeometry {\r\n\t\treturn this.c3(a, b, true);\r\n\t}\r\n\tprotected c1(a: number, b: any): FrameworkElement {\r\n\t\treturn null;\r\n\t}\r\n\tprotected cl(a: FrameworkElement, b: boolean): void {\r\n\t}\r\n\tcj(a: FrameworkElement, b: any, c: boolean): void {\r\n\t}\r\n\tprivate di: GeometryGroup = new GeometryGroup();\r\n\tcr(): void {\r\n\t\tsuper.cr();\r\n\t\tthis.di.d.clear();\r\n\t}\r\n\tcq(): void {\r\n\t\tsuper.cq();\r\n\t\tthis.aq();\r\n\t}\r\n\tda(a: Rect): void {\r\n\t\tif (this.c7.sz != null) {\r\n\t\t\tthis.c7.sz.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tprivate c9: DomWrapper = null;\r\n\tprivate c8: RenderingContext = null;\r\n\tdd(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.c9 == null) {\r\n\t\t\tthis.c9 = this.e.hb.createElement(\"canvas\");\r\n\t\t\tlet c = this.e.hb.get2DCanvasContext(this.c9);\r\n\t\t\tthis.c8 = new RenderingContext(new CanvasViewRenderer(), c);\r\n\t\t\tthis.c9.setAttribute(\"width\", this.bu.width.toString());\r\n\t\t\tthis.c9.setAttribute(\"height\", this.bu.height.toString());\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t\ta.imagesChanged = delegateRemove(a.imagesChanged, runOn(this, this.dc));\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tb.be(this.w);\r\n\t\t\t}\r\n\t\t\tb.bd(this.c8);\r\n\t\t\tb.bf(this.bu);\r\n\t\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.dc));\r\n\t\t}\r\n\t}\r\n\tprivate dc(a: any, b: EventArgs): void {\r\n\t\tthis.aq();\r\n\t}\r\n\tde(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t}\r\n\tdg(): void {\r\n\t\tif (this.c9 != null) {\r\n\t\t\tthis.c9.setAttribute(\"width\", this.bu.width.toString());\r\n\t\t\tthis.c9.setAttribute(\"height\", this.bu.height.toString());\r\n\t\t}\r\n\t\tif (this.c7.sz != null) {\r\n\t\t\tthis.c7.sz.bf(this.bu);\r\n\t\t}\r\n\t}\r\n\tprotected a6(a: RenderingContext, b: boolean): void {\r\n\t\tsuper.a6(a, b);\r\n\t\tif (b) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.c9 == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c: boolean = false;\r\n\t\tif (this.di.d.count > 0) {\r\n\t\t\tc = true;\r\n\t\t\tthis.k.aa();\r\n\t\t\tthis.k.r(this.di);\r\n\t\t\tlet d = <CanvasRenderingContext2D>this.k.h();\r\n\t\t\td.clip();\r\n\t\t}\r\n\t\tlet e: number = <number>truncate(Math.round(this.bu.left));\r\n\t\tlet f: number = <number>truncate(Math.round(this.bu.top));\r\n\t\tlet g: number = <number>truncate(Math.round(this.bu.width));\r\n\t\tlet h: number = <number>truncate(Math.round(this.bu.height));\r\n\t\tthis.k.o(this.c9.getNativeElement(), 1, e, f, g, h, e, f, g, h);\r\n\t\tif (c) {\r\n\t\t\tthis.k.z();\r\n\t\t}\r\n\t}\r\n\tdf(): void {\r\n\t\tthis.aq();\r\n\t}\r\n\tdb(): void {\r\n\t}\r\n\tdh(a: Rect): void {\r\n\t\tif (this.c7.sz != null) {\r\n\t\t\tthis.c7.sz.a6();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { VerticalLinearScaler } from \"igniteui-charts/VerticalLinearScaler\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorVerticalScaler extends VerticalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorVerticalScaler, 'SphericalMercatorVerticalScaler', (<any>VerticalLinearScaler).$);\r\n\tprivate au: Rect = null;\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.height + b.e.top * b.d.height;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.au, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.au, b.c, b.a);\r\n\t\t\tc = (c - (b.e.top * b.d.height)) / b.e.height;\r\n\t\t\treturn c;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.top;\r\n\t\tlet n: number = h.height;\r\n\t\tlet o: number = f.top;\r\n\t\tlet p: number = f.height;\r\n\t\tlet q: number = g.top;\r\n\t\tlet r: number = g.height;\r\n\t\tlet s: number = this.au.top;\r\n\t\tlet t: number = this.au.height;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: number = 0.017453292519943295;\r\n\t\tlet w: number;\r\n\t\tlet x: number;\r\n\t\tlet y: number;\r\n\t\tlet z: number;\r\n\t\tlet aa: number;\r\n\t\tlet ab: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tab = true;\r\n\t\t}\r\n\t\tfor (let ac: number = b; ac < c; ac++) {\r\n\t\t\tif (ab) {\r\n\t\t\t\te = u[ac];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(ac);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * n / this.aj;\r\n\t\t\t\tz = m + z;\r\n\t\t\t\taa = (z - s * n) / t;\r\n\t\t\t\tz = (aa - (o * r)) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * r / this.aj;\r\n\t\t\t\tz = q + z;\r\n\t\t\t\tz = (z - o * r) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = this.ak(a.l3);\r\n\t\te = this.ak(a.l2);\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprotected w(a: string, b: any, c: any): void {\r\n\t\tsuper.w(a, b, c);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"ActualMinimumValue\":\r\n\r\n\t\t\tcase \"ActualMaximumValue\":\r\n\t\t\tthis.ai = SphericalMercatorVerticalScaler.am(this.n);\r\n\t\t\tthis.aj = SphericalMercatorVerticalScaler.am(this.n) - SphericalMercatorVerticalScaler.am(this.o);\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate static ag: number = 85.05112878;\r\n\tprivate static ah: number = -85.05112878;\r\n\tprivate ai: number = 0;\r\n\tprivate aj: number = 0;\r\n\tstatic get as(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t}\r\n\tstatic get at(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.au = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = (a - c.top) * b.width + b.top * c.height;\r\n\t\te = SphericalMercatorVerticalScaler.am(this.n) - e / (c.height / this.aj);\r\n\t\treturn SphericalMercatorVerticalScaler.aq(e);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = c.top + this.getMercatorScaledValue3(a, c.height);\r\n\t\treturn (e - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f = this.getMercatorScaledValue3(a, d.height);\r\n\t\treturn (f - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue3(a: number, b: number): number {\r\n\t\ta = a > SphericalMercatorVerticalScaler.ah ? (a < SphericalMercatorVerticalScaler.ag ? a : SphericalMercatorVerticalScaler.ag) : SphericalMercatorVerticalScaler.ah;\r\n\t\tlet c = SphericalMercatorVerticalScaler.am(a);\r\n\t\tlet d = (this.ai - c) * b / this.aj;\r\n\t\treturn (d);\r\n\t}\r\n\tstatic am(a: number): number {\r\n\t\tlet b: number = a * (0.017453292519943295);\r\n\t\tlet c: number = Math.sin(b);\r\n\t\tlet d: number = 0.5 * Math.log((1 + c) / (1 - c));\r\n\t\treturn d;\r\n\t}\r\n\tstatic aq(a: number): number {\r\n\t\ta = Math.exp(2 * a);\r\n\t\treturn Math.asin((a - 1) / (a + 1)) / 0.017453292519943295;\r\n\t}\r\n\tprivate ak(a: number): number {\r\n\t\tif (a < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t\t}\r\n\t\tif (a > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HorizontalLinearScaler } from \"igniteui-charts/HorizontalLinearScaler\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorHorizontalScaler extends HorizontalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorHorizontalScaler, 'SphericalMercatorHorizontalScaler', (<any>HorizontalLinearScaler).$);\r\n\tprivate aj: Rect = null;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.aj = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.width + b.e.left * b.d.width;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.aj, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.aj, b.c, b.a);\r\n\t\t\tlet d: number = (c - (b.e.left * b.d.width)) / b.e.width;\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.left;\r\n\t\tlet n: number = h.width;\r\n\t\tlet o: number = f.left;\r\n\t\tlet p: number = f.width;\r\n\t\tlet q: number = g.left;\r\n\t\tlet r: number = g.width;\r\n\t\tlet s: number = this.aj.left;\r\n\t\tlet t: number = this.aj.width;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tv = true;\r\n\t\t}\r\n\t\tfor (let w: number = b; w < c; w++) {\r\n\t\t\tif (v) {\r\n\t\t\t\te = u[w];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(w);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tlet x: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tx = 1 - x;\r\n\t\t\t\t}\r\n\t\t\t\tx = m + n * (x - s) / t;\r\n\t\t\t\tlet y: number = (x - (o * r)) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = y;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, y);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet z: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tz = 1 - z;\r\n\t\t\t\t}\r\n\t\t\t\tz = q + r * (z - o) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = a.l3;\r\n\t\te = a.l2;\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = b.left + b.width * (a - c.left) / c.width;\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn this.o + e * (this.m);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = (a - this.o) / (this.m);\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn c.left + c.width * (e - b.left) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f: number = (a - this.o) / (this.m);\r\n\t\tif (e) {\r\n\t\t\tf = 1 - f;\r\n\t\t}\r\n\t\treturn c.left + c.width * (f - b.left) / b.width;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from \"./MapResizeBehavior\";\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from \"./MapBackgroundTilingMode\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { Base, Point, Type, IEnumerator$1, IEnumerator$1_$type, IEnumerator, IEnumerator_$type, IDisposable, IDisposable_$type, EventArgs, Boolean_$type, typeCast, enumGetBox, EnumUtil, Point_$type, fromEnum, Number_$type, runOn, delegateRemove, delegateCombine, markType, markDep, PointUtil, INotifyPropertyChanged, INotifyPropertyChanged_$type, PropertyChangedEventArgs, String_$type, IEnumerable, IEnumerable_$type } from \"igniteui-core/type\";\r\nimport { NumericXAxis } from \"igniteui-charts/NumericXAxis\";\r\nimport { NumericYAxis } from \"igniteui-charts/NumericYAxis\";\r\nimport { SphericalMercatorVerticalScaler } from \"./SphericalMercatorVerticalScaler\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { SphericalMercatorHorizontalScaler } from \"./SphericalMercatorHorizontalScaler\";\r\nimport { StraightNumericAxisBase } from \"igniteui-charts/StraightNumericAxisBase\";\r\nimport { DomRenderer, DomRenderer_$type } from \"igniteui-core/dom\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesViewerView } from \"igniteui-charts/SeriesViewerView\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { Tuple$2 } from \"igniteui-core/Tuple$2\";\r\nimport { MathUtil } from \"igniteui-core/MathUtil\";\r\nimport { ZoomCoercionMode } from \"igniteui-charts/ZoomCoercionMode\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { FontInfo } from \"igniteui-core/FontInfo\";\r\nimport { ItfConverter } from \"igniteui-core/ItfConverter\";\r\nimport { TriangulationSource } from \"igniteui-core/TriangulationSource\";\r\nimport { ChartVisualData } from \"igniteui-charts/ChartVisualData\";\r\nimport { AxisVisualData } from \"igniteui-charts/AxisVisualData\";\r\nimport { SeriesVisualData } from \"igniteui-charts/SeriesVisualData\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RectData } from \"igniteui-core/RectData\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { truncate, intDivide, isNaN_, isInfinity } from \"igniteui-core/number\";\r\nimport { XamMultiScaleImage } from \"igniteui-core/XamMultiScaleImage\";\r\nimport { XamMultiScaleTileSource } from \"igniteui-core/XamMultiScaleTileSource\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { Size } from \"igniteui-core/Size\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { ScatterAreaSeries } from \"igniteui-charts/ScatterAreaSeries\";\r\nimport { InteractionState } from \"igniteui-core/InteractionState\";\r\nimport { SeriesViewerViewManager } from \"igniteui-charts/SeriesViewerViewManager\";\r\nimport { BrushCollection } from \"igniteui-core/BrushCollection\";\r\nimport { DefaultPaletteInfo } from \"igniteui-charts/DefaultPaletteInfo\";\r\nimport { CanvasRenderScheduler } from \"igniteui-core/CanvasRenderScheduler\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Shape } from \"igniteui-core/Shape\";\r\nimport { ModifierKeys } from \"igniteui-core/ModifierKeys\";\r\nimport { OpenStreetMapTileSource } from \"igniteui-core/OpenStreetMapTileSource\";\r\nimport { ColorScale } from \"igniteui-charts/ColorScale\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMap extends SeriesViewer implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(XamGeographicMap, 'XamGeographicMap', (<any>SeriesViewer).$, [IMapRenderDeferralHandler_$type]);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.uh = SphericalMercatorVerticalScaler.am(XamGeographicMap.vt.bottom) - SphericalMercatorVerticalScaler.am(XamGeographicMap.vt.top);\r\n\t\tthis.ab = (<any>XamGeographicMap).$;\r\n\t\tthis.backgroundContent = new OpenStreetMapImagery();\r\n\t\tlet a = ((() => {\r\n\t\t\tlet $ret = new NumericXAxis();\r\n\t\t\t$ret.bh = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\ta.ce = true;\r\n\t\tthis.tw = a;\r\n\t\tthis.tw.nj = new SphericalMercatorHorizontalScaler();\r\n\t\tlet b = ((() => {\r\n\t\t\tlet $ret = new NumericYAxis();\r\n\t\t\t$ret.bh = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\tb.ce = true;\r\n\t\tthis.ty = b;\r\n\t\tthis.ty.nj = new SphericalMercatorVerticalScaler();\r\n\t\tthis.u3();\r\n\t\tthis.va();\r\n\t\tthis.l3();\r\n\t}\r\n\tprivate ul: DomRenderer = null;\r\n\tprovideContainer(a: any): void {\r\n\t\tsuper.provideContainer(a);\r\n\t\tthis.tw.provideRenderer(<DomRenderer><any>a);\r\n\t\tthis.ty.provideRenderer(<DomRenderer><any>a);\r\n\t}\r\n\tl3(): void {\r\n\t\tsuper.l3();\r\n\t\tthis.t8.fv(this.gc);\r\n\t}\r\n\ter(): boolean {\r\n\t\treturn this.ue;\r\n\t}\r\n\tes(): boolean {\r\n\t\treturn this.ue;\r\n\t}\r\n\tue: boolean;\r\n\tstatic t6: MapResizeBehavior = 0;\r\n\tt7: MapResizeBehavior;\r\n\tua: boolean = false;\r\n\tub: boolean;\r\n\tprotected t5(): MapBackgroundTilingMode {\r\n\t\tif (this.t3 == 0) {\r\n\t\t\tif (this.ua) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n\tprivate t2: MapBackgroundTilingMode = 1;\r\n\tget t4(): MapBackgroundTilingMode {\r\n\t\treturn this.t2;\r\n\t}\r\n\tset t4(a: MapBackgroundTilingMode) {\r\n\t\tthis.t2 = a;\r\n\t}\r\n\tt3: MapBackgroundTilingMode;\r\n\tstatic vt: Rect = new Rect(2, <Point>{ $type: Point_$type, x: -180, y: -85.05112878 }, <Point>{ $type: Point_$type, x: 180, y: 85.05112878 });\r\n\tuh: number = 0;\r\n\tud: boolean;\r\n\tuc: boolean;\r\n\tv9: Rect;\r\n\tprivate vs: Rect = null;\r\n\tget vx(): Rect {\r\n\t\treturn this.vs;\r\n\t}\r\n\tset vx(a: Rect) {\r\n\t\tlet b: boolean = Rect.l_op_Inequality(this.vs, a);\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.vs;\r\n\t\t\tthis.vs = a;\r\n\t\t\tthis.n8(\"ActualWorldRect\", c, a);\r\n\t\t}\r\n\t}\r\n\tv1(): Rect {\r\n\t\treturn this.vx;\r\n\t}\r\n\tprivate u3(): void {\r\n\t\tif (this.v9.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.vx = this.v7(this.v9, this.cd == 1);\r\n\t}\r\n\tprivate v7(a: Rect, b: boolean): Rect {\r\n\t\tlet c = a.top;\r\n\t\tlet d = a.left;\r\n\t\tlet e = a.width;\r\n\t\tlet f = a.height;\r\n\t\tlet g = SphericalMercatorVerticalScaler.am(a.bottom);\r\n\t\tlet h = SphericalMercatorVerticalScaler.am(a.top);\r\n\t\tlet i = g - h;\r\n\t\tlet j = a.width / XamGeographicMap.vt.width;\r\n\t\tlet k = SphericalMercatorVerticalScaler.am(XamGeographicMap.vt.top);\r\n\t\tlet l = i / j;\r\n\t\tif (i / j > this.uh) {\r\n\t\t\tlet m = i / this.uh;\r\n\t\t\tlet n = m - j;\r\n\t\t\td = d - (n / 2) * XamGeographicMap.vt.width;\r\n\t\t\te = m * XamGeographicMap.vt.width;\r\n\t\t\tif (b) {\r\n\t\t\t\tif (d < XamGeographicMap.vt.left) {\r\n\t\t\t\t\td += (XamGeographicMap.vt.left - d);\r\n\t\t\t\t} else if ((d + e) > XamGeographicMap.vt.right) {\r\n\t\t\t\t\td -= ((d + e) - XamGeographicMap.vt.right);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (i / j < this.uh) {\r\n\t\t\tlet o = this.uh * j;\r\n\t\t\tlet p = o - i;\r\n\t\t\tlet q = h - (p / 2);\r\n\t\t\tlet r = g + (p / 2);\r\n\t\t\tif (b) {\r\n\t\t\t\tif (q < k) {\r\n\t\t\t\t\tq += (k - q);\r\n\t\t\t\t\tr += (k - q);\r\n\t\t\t\t} else if (r > (k + this.uh)) {\r\n\t\t\t\t\tq -= ((r) - (k + this.uh));\r\n\t\t\t\t\tr -= ((r) - (k + this.uh));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc = SphericalMercatorVerticalScaler.aq(q);\r\n\t\t\tf = SphericalMercatorVerticalScaler.aq(r) - c;\r\n\t\t}\r\n\t\tlet s = new Rect(0, d, c, e, f);\r\n\t\treturn s;\r\n\t}\r\n\tget backgroundContent(): GeographicMapImagery {\r\n\t\treturn this.tz;\r\n\t}\r\n\tset backgroundContent(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.backgroundContent;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.backgroundContent;\r\n\t\t\tthis.tz = a;\r\n\t\t\tthis.n8(\"BackgroundContent\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate tz: GeographicMapImagery = null;\r\n\tget tw(): NumericXAxis {\r\n\t\treturn this.tv;\r\n\t}\r\n\tset tw(a: NumericXAxis) {\r\n\t\tlet b: boolean = a != this.tw;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.tw;\r\n\t\t\tthis.tv = a;\r\n\t\t\tthis.n8(\"XAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate tv: NumericXAxis = null;\r\n\tget ty(): NumericYAxis {\r\n\t\treturn this.tx;\r\n\t}\r\n\tset ty(a: NumericYAxis) {\r\n\t\tlet b: boolean = a != this.ty;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.ty;\r\n\t\t\tthis.tx = a;\r\n\t\t\tthis.n8(\"YAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate tx: NumericYAxis = null;\r\n\tt1: GeographicMapImagery = null;\r\n\tprivate static vw: Rect = new Rect(0, 0, 0, 1, 1);\r\n\tgetZoomRectFromGeoRect(a: Rect): Rect {\r\n\t\treturn this.getZoomFromGeographicRect(a);\r\n\t}\r\n\tvd(a: Rect): void {\r\n\t\tthis.tp = a;\r\n\t}\r\n\tvc(a: Rect): void {\r\n\t\tthis.v9 = a;\r\n\t}\r\n\tgetZoomFromGeographicRect(a: Rect): Rect {\r\n\t\treturn this.vz(a, true, 0);\r\n\t}\r\n\tvy(a: Rect, b: number): Rect {\r\n\t\treturn this.vz(a, false, b);\r\n\t}\r\n\tprivate vz(a: Rect, b: boolean, c: number): Rect {\r\n\t\tlet d = a;\r\n\t\tif (b) {\r\n\t\t\td = this.v7(a, false);\r\n\t\t}\r\n\t\tlet e = this.tw;\r\n\t\tlet f = this.ty;\r\n\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.vw, this.to, e.cg);\r\n\t\tg.c = this.td;\r\n\t\tlet h: ScalerParams = new ScalerParams(1, XamGeographicMap.vw, this.to, f.cg);\r\n\t\th.c = this.td;\r\n\t\tlet i = this.tw.ei(d.left, g);\r\n\t\tlet j = this.tw.ei(d.right, g);\r\n\t\tlet k = this.ty.ei(d.top, h);\r\n\t\tlet l = this.ty.ei(d.bottom, h);\r\n\t\tlet m = (i - c) / this.to.width;\r\n\t\tlet n = (l - c) / this.to.height;\r\n\t\tlet o = (j - i + (c * 2)) / this.to.width;\r\n\t\tlet p = (k - l + (c * 2)) / this.to.height;\r\n\t\tlet q: Rect = new Rect(0, m, n, o, p);\r\n\t\tq.intersect(XamGeographicMap.vw);\r\n\t\tif (q.isEmpty) {\r\n\t\t\tq = XamGeographicMap.vw;\r\n\t\t}\r\n\t\treturn q;\r\n\t}\r\n\tgetZoomFromGeographicPoints(a: Point, b: Point): Rect {\r\n\t\tlet c = a.x;\r\n\t\tlet d = b.y;\r\n\t\tlet e = b.x - a.x;\r\n\t\tlet f = a.y - b.y;\r\n\t\tif (e < 0 || f < 0) {\r\n\t\t\treturn XamGeographicMap.vw;\r\n\t\t} else {\r\n\t\t\tlet g: Rect = new Rect(0, c, d, e, f);\r\n\t\t\treturn this.getZoomFromGeographicRect(g);\r\n\t\t}\r\n\t}\r\n\tv3(a: Rect): Rect {\r\n\t\tlet b = this.tw;\r\n\t\tlet c = this.ty;\r\n\t\tlet d: ScalerParams = new ScalerParams(1, a, this.to, b.cg);\r\n\t\td.c = this.td;\r\n\t\tlet e: ScalerParams = new ScalerParams(1, a, this.to, c.cg);\r\n\t\te.c = this.td;\r\n\t\tlet f = this.tc;\r\n\t\tlet g = b.el(f.left, d);\r\n\t\tlet h = c.el(f.top, e);\r\n\t\tlet i = b.el(f.right, d);\r\n\t\tlet j = c.el(f.bottom, e);\r\n\t\tlet k = i - g;\r\n\t\tlet l = h - j;\r\n\t\tlet m: Rect = new Rect(0, g, j, k, l);\r\n\t\tif (this.cd == 1) {\r\n\t\t\tm.intersect(XamGeographicMap.vt);\r\n\t\t\tif (m.isEmpty) {\r\n\t\t\t\tm = XamGeographicMap.vt;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn m;\r\n\t}\r\n\tvp(a: Point): Point {\r\n\t\tlet b = this.tw.l6(a.x);\r\n\t\tlet c = this.ty.l6(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tvq(a: Point): Point {\r\n\t\tlet b = this.tw.e3(a.x);\r\n\t\tlet c = this.ty.e3(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tvr(a: Point): Point {\r\n\t\treturn this.vq(a);\r\n\t}\r\n\tu0(): void {\r\n\t\tlet a = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\tif (a != null) {\r\n\t\t\ta.clearTileCache();\r\n\t\t}\r\n\t}\r\n\tu6(a: Brush): void {\r\n\t}\r\n\tfg(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tu8(): void {\r\n\t\tthis.t8.ee();\r\n\t\tfor (let a of fromEnum<Series>(this.series)) {\r\n\t\t\ta.mv();\r\n\t\t}\r\n\t}\r\n\tprotected vo: Point = <Point>{ $type: Point_$type, x: NaN, y: NaN };\r\n\tprotected vb(): void {\r\n\t\tif (this.t7 == 2) {\r\n\t\t\tif (!this.to.isEmpty && this.to.width > 0 && this.to.height > 0) {\r\n\t\t\t\tlet a: number = this.tw.l6(this.to.left + (this.to.width / 2));\r\n\t\t\t\tlet b: number = this.ty.l6(this.to.top + (this.to.height / 2));\r\n\t\t\t\tthis.vo = <Point>{ $type: Point_$type, x: a, y: b };\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this.to.isEmpty && this.to.width > 0 && this.to.height > 0) {\r\n\t\t\t\tlet c: number = this.tw.l6(this.to.left);\r\n\t\t\t\tlet d: number = this.ty.l6(this.to.top);\r\n\t\t\t\tthis.vo = <Point>{ $type: Point_$type, x: c, y: d };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprotected u7(): void {\r\n\t\tif (isNaN_(this.vo.x) || isNaN_(this.vo.y)) {\r\n\t\t\tthis.vb();\r\n\t\t}\r\n\t\tlet a: number = this.vo.x;\r\n\t\tlet b: number = this.vo.y;\r\n\t\tif (!isNaN_(a) && !isNaN_(b)) {\r\n\t\t\tlet c: number = this.s9.left;\r\n\t\t\tlet d: number = this.s9.top;\r\n\t\t\tlet e: number = this.s9.width;\r\n\t\t\tlet f: number = this.s9.height;\r\n\t\t\tif (e > this.vv.width) {\r\n\t\t\t} else {\r\n\t\t\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.vw, this.to, this.tw.cg);\r\n\t\t\t\tg.c = this.td;\r\n\t\t\t\tlet h: number = this.tw.ei(a, g);\r\n\t\t\t\tif (this.t7 == 2) {\r\n\t\t\t\t\tlet i = h / this.to.width;\r\n\t\t\t\t\tc = i - (e / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tc = h / this.to.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (c + e > this.vv.right) {\r\n\t\t\t\t\tc = this.vv.right - e;\r\n\t\t\t\t} else if (c < this.vv.left) {\r\n\t\t\t\t\tc = this.vv.left;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (f > this.vv.height) {\r\n\t\t\t} else {\r\n\t\t\t\tlet j: ScalerParams = new ScalerParams(1, XamGeographicMap.vw, this.to, this.ty.cg);\r\n\t\t\t\tj.c = this.td;\r\n\t\t\t\tlet k: number = this.ty.ei(b, j);\r\n\t\t\t\tif (this.t7 == 2) {\r\n\t\t\t\t\tlet l = k / this.to.height;\r\n\t\t\t\t\td = l - (f / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\td = k / this.to.height;\r\n\t\t\t\t}\r\n\t\t\t\tif (d + f > this.vv.bottom) {\r\n\t\t\t\t\td = this.vv.bottom - f;\r\n\t\t\t\t} else if (d < this.vv.top) {\r\n\t\t\t\t\td = this.vv.top;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ph(new Rect(0, c, d, e, f), false);\r\n\t\t}\r\n\t}\r\n\tprotected get_ej(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected vv: Rect = null;\r\n\tprotected ta(): Rect {\r\n\t\tlet a: Rect = super.ta();\r\n\t\tif (this.tw == null || this.ty == null) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tthis.tk();\r\n\t\tlet b: number = a.left;\r\n\t\tlet c: number = a.top;\r\n\t\tif (this.cd == 1) {\r\n\t\t\tif (this.tp.width > this.vv.width) {\r\n\t\t\t\tb = 0.5 - (this.tp.width / 2);\r\n\t\t\t} else if (b + a.width > this.vv.right) {\r\n\t\t\t\tb = this.vv.right - this.tp.width;\r\n\t\t\t} else if (b < this.vv.left) {\r\n\t\t\t\tb = this.vv.left;\r\n\t\t\t}\r\n\t\t\tif (this.tp.height > this.vv.height) {\r\n\t\t\t\tc = 0.5 - (this.tp.height / 2);\r\n\t\t\t} else if (c + this.tp.height > this.vv.bottom) {\r\n\t\t\t\tc = this.vv.bottom - this.tp.height;\r\n\t\t\t} else if (c < this.vv.top) {\r\n\t\t\t\tc = this.vv.top;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet d: boolean = false;\r\n\t\tif (!this.ud && this.cd == 2 && this.ua) {\r\n\t\t\tif (b > 1) {\r\n\t\t\t\tb = (b - Math.floor(b)) + 1;\r\n\t\t\t}\r\n\t\t\tif (b < 0) {\r\n\t\t\t\tb = 0 - (Math.ceil(b) - b);\r\n\t\t\t}\r\n\t\t\tif ((a.right - this.vv.right) > 0 && ((a.right - this.vv.right) / a.width) > 0.8) {\r\n\t\t\t\tb = this.vv.left - (a.width - (a.right - this.vv.right));\r\n\t\t\t\td = true;\r\n\t\t\t} else if (a.left < this.vv.left && (Math.abs(a.left - this.vv.left) / a.width) > 0.8) {\r\n\t\t\t\tb = this.vv.right - (Math.abs(a.left - this.vv.left));\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet e = new Rect(0, b, c, a.width, a.height);\r\n\t\tif (this.ud) {\r\n\t\t\tlet f = this.vy(this.v9, 1);\r\n\t\t\tf = this.v0(f);\r\n\t\t\tlet g = e.left + e.width / 2;\r\n\t\t\tlet h = e.top + e.height / 2;\r\n\t\t\tif (e.width > f.width) {\r\n\t\t\t\tlet i = e.height / e.width;\r\n\t\t\t\tlet j = f.width;\r\n\t\t\t\tlet k = i * j;\r\n\t\t\t\te = new Rect(0, g - j / 2, h - k / 2, j, k);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.height > f.height) {\r\n\t\t\t\tlet l = e.width / e.height;\r\n\t\t\t\tlet m = f.height;\r\n\t\t\t\tlet n = l * m;\r\n\t\t\t\te = new Rect(0, g - n / 2, h - m / 2, n, m);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.left < f.left) {\r\n\t\t\t\te = new Rect(0, f.left, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.top < f.top) {\r\n\t\t\t\te = new Rect(0, e.left, f.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.right > f.right) {\r\n\t\t\t\te = new Rect(0, f.right - e.width, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.bottom > f.bottom) {\r\n\t\t\t\te = new Rect(0, e.left, f.bottom - e.height, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (d) {\r\n\t\t\tthis.d6 = true;\r\n\t\t\tthis.tp = e;\r\n\t\t\tthis.d6 = false;\r\n\t\t}\r\n\t\treturn e;\r\n\t}\r\n\tlh(a: Rect, b: ScalerParams): Tuple$2<boolean, number> {\r\n\t\tlet c: boolean = true;\r\n\t\tlet d: boolean = true;\r\n\t\tlet e: number = 0;\r\n\t\tlet f = this.tk();\r\n\t\tlet g: number = 0;\r\n\t\tlet h: number = 0;\r\n\t\tif ((a.right - f.right) > 0) {\r\n\t\t\tg = ((a.right - f.right) / a.width);\r\n\t\t}\r\n\t\tif (a.left < f.left) {\r\n\t\t\th = (Math.abs(a.left - f.left) / a.width);\r\n\t\t}\r\n\t\tif (h == 0 && g == 0) {\r\n\t\t\tc = false;\r\n\t\t}\r\n\t\tif (h > g) {\r\n\t\t\td = false;\r\n\t\t}\r\n\t\tif (c) {\r\n\t\t\tif (d) {\r\n\t\t\t\tlet i = this.tv.ei(-180, b);\r\n\t\t\t\tlet j = this.tv.ei(180, b);\r\n\t\t\t\te = j - i;\r\n\t\t\t} else {\r\n\t\t\t\tlet k = this.tv.ei(-180, b);\r\n\t\t\t\tlet l = this.tv.ei(180, b);\r\n\t\t\t\te = k - l;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Tuple$2<boolean, number>(Boolean_$type, Number_$type, c, e);\r\n\t}\r\n\ttk(): Rect {\r\n\t\tlet a: ScalerParams = new ScalerParams(1, XamGeographicMap.vw, this.to, this.tw.cg);\r\n\t\ta.c = this.td;\r\n\t\tlet b: ScalerParams = new ScalerParams(1, XamGeographicMap.vw, this.to, this.ty.cg);\r\n\t\tb.c = this.td;\r\n\t\tlet c: number = this.tw.ei(XamGeographicMap.vt.left, a);\r\n\t\tlet d: number = this.tw.ei(XamGeographicMap.vt.right, a);\r\n\t\tlet e: number = this.ty.ei(XamGeographicMap.vt.top, b);\r\n\t\tlet f: number = this.ty.ei(XamGeographicMap.vt.bottom, b);\r\n\t\tthis.vv = new Rect(0, c / this.to.width, f / this.to.height, (d - c) / this.to.width, (e - f) / this.to.height);\r\n\t\treturn this.vv;\r\n\t}\r\n\tprivate v0(a: Rect): Rect {\r\n\t\tlet b: number = this.gg;\r\n\t\tlet c: number = 0.5 * (a.left + a.right);\r\n\t\tlet d: number = 0.5 * (a.top + a.bottom);\r\n\t\tlet e: number = a.width;\r\n\t\tlet f: number = a.height;\r\n\t\tlet g: number = MathUtil.d(a.width, b, 1);\r\n\t\tlet h: number = MathUtil.d(a.height, b, 1);\r\n\t\tlet i: Rect = this.to;\r\n\t\tlet j: number = i.width / i.height;\r\n\t\tlet k: number = g * i.width;\r\n\t\tlet l: number = h * i.height;\r\n\t\tlet m: number = k / l;\r\n\t\tif (m != j) {\r\n\t\t\tif (l * j > k) {\r\n\t\t\t\tk = l * j;\r\n\t\t\t\tg = k / i.width;\r\n\t\t\t} else {\r\n\t\t\t\tl = k / j;\r\n\t\t\t\th = l / i.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet n: boolean = g != e;\r\n\t\tlet o: boolean = h != f;\r\n\t\tlet p: number = n ? c - 0.5 * g : a.left;\r\n\t\tlet q: number = o ? d - 0.5 * h : a.top;\r\n\t\tlet r: number = n ? c + 0.5 * g : a.right;\r\n\t\tlet s: number = o ? d + 0.5 * h : a.bottom;\r\n\t\tif (p < 0) {\r\n\t\t\tp = 0;\r\n\t\t\tr = p + g;\r\n\t\t}\r\n\t\tif (r > 1) {\r\n\t\t\tr = 1;\r\n\t\t\tp = r - g;\r\n\t\t}\r\n\t\tif (q < 0) {\r\n\t\t\tq = 0;\r\n\t\t\ts = q + h;\r\n\t\t}\r\n\t\tif (s > 1) {\r\n\t\t\ts = 1;\r\n\t\t\tq = s - h;\r\n\t\t}\r\n\t\treturn new Rect(0, p, q, r - p, s - q);\r\n\t}\r\n\tprotected tb(a: Rect): Rect {\r\n\t\tsuper.tb(this.to);\r\n\t\tif (a.isEmpty) {\r\n\t\t\treturn Rect.empty;\r\n\t\t}\r\n\t\tlet b: Rect;\r\n\t\tif (a.width > a.height) {\r\n\t\t\tlet c: number = intDivide(<number>truncate((a.width - a.height)), 2);\r\n\t\t\tb = new Rect(0, a.left + c, a.top, a.height, a.height);\r\n\t\t} else {\r\n\t\t\tlet d: number = intDivide(<number>truncate((a.height - a.width)), 2);\r\n\t\t\tb = new Rect(0, a.left, a.top + d, a.width, a.width);\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\tv2(a: Rect): Rect {\r\n\t\treturn this.tb(a);\r\n\t}\r\n\tprotected ct(): SeriesViewerView {\r\n\t\treturn new XamGeographicMapView(this);\r\n\t}\r\n\tprivate u2(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bh = this;\r\n\t\t}\r\n\t}\r\n\tprotected ns(a: SeriesViewerView): void {\r\n\t\tsuper.ns(a);\r\n\t\tthis.t8 = <XamGeographicMapView>a;\r\n\t}\r\n\tn3(a: Rect, b: Rect): void {\r\n\t\tsuper.n3(a, b);\r\n\t\tthis.o4(this.tw);\r\n\t\tthis.o4(this.ty);\r\n\t\tif (Rect.l_op_Inequality(a, b)) {\r\n\t\t\tthis.u7();\r\n\t\t}\r\n\t\tif (this.ud) {\r\n\t\t\tthis.s9 = this.ta();\r\n\t\t}\r\n\t\tthis.ve();\r\n\t}\r\n\tuj: number;\r\n\tprivate ug: number = 1;\r\n\tget ui(): number {\r\n\t\treturn this.ug;\r\n\t}\r\n\tset ui(a: number) {\r\n\t\tlet b = this.ug;\r\n\t\tthis.ug = a;\r\n\t\tthis.n8(\"ActualWindowScale\", b, this.ug);\r\n\t}\r\n\tgm(): number {\r\n\t\treturn this.ui;\r\n\t}\r\n\tgn(): number {\r\n\t\treturn this.ui;\r\n\t}\r\n\tprotected o3(): void {\r\n\t\tsuper.o3();\r\n\t\tlet a = Math.min(this.s9.width, this.s9.height);\r\n\t\tthis.ui = a;\r\n\t}\r\n\te8(): boolean {\r\n\t\treturn this.ua;\r\n\t}\r\n\tce(): ZoomCoercionMode {\r\n\t\tif (this.cf == 0) {\r\n\t\t\tif (this.ub) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.cf;\r\n\t}\r\n\tprotected n4(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.n4(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"ZoomCoercionMode\":\r\n\t\t\tthis.u3();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRect\":\r\n\t\t\tthis.vb();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[0]:\r\n\t\t\tthis.t4 = this.t5();\r\n\t\t\tif (this.t1 != null) {\r\n\t\t\t\tthis.t1.isHorizontalWrappingEnabled = this.t4 == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[1]:\r\n\t\t\tthis.ua = this.ub;\r\n\t\t\tthis.t4 = this.t5();\r\n\t\t\tthis.cd = this.ce();\r\n\t\t\tif (this.t1 != null) {\r\n\t\t\t\tthis.t1.isHorizontalWrappingEnabled = this.t4 == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[4]:\r\n\t\t\tthis.s9 = this.ta();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BackgroundContent\":\r\n\t\t\tif (this.t1 != null) {\r\n\t\t\t\tlet e = this.t1;\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.u4));\r\n\t\t\t\tthis.t1.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tthis.t1 = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\t\tif (this.t1 != null) {\r\n\t\t\t\tlet f = this.t1;\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.u4));\r\n\t\t\t\tthis.t1.deferralHandler = this;\r\n\t\t\t\tthis.t1.isHorizontalWrappingEnabled = this.t4 == 2;\r\n\t\t\t}\r\n\t\t\tthis.t8.fu(typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, c), typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, d));\r\n\t\t\tif (this.t1 != null) {\r\n\t\t\t\tthis.t1.geographicMap = this;\r\n\t\t\t\tthis.t8.fr(this.s9);\r\n\t\t\t\tthis.t8.fv(this.gc);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.u9(<Axis>c);\r\n\t\t\tthis.u2(<Axis>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[6]:\r\n\t\t\tif (!this.uc) {\r\n\t\t\t\tthis.tp = XamGeographicMap.vw;\r\n\t\t\t}\r\n\t\t\tthis.u3();\r\n\t\t\tthis.va();\r\n\t\t\tthis.vb();\r\n\t\t\tthis.s9 = this.ta();\r\n\t\t\tthis.t8.fs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.t8.fr(this.s9);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWorldRect\":\r\n\t\t\tfor (let g of fromEnum<Series>(this.series)) {\r\n\t\t\t\tg.ml(false);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[5]:\r\n\t\t\tthis.ui = this.uj;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowScale\":\r\n\t\t\tif (!this.ff) {\r\n\t\t\t\tthis.pf(this.gm(), this.gn());\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualPixelScalingRatio\":\r\n\t\t\tthis.t8.fv(this.gc);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRectMinWidth\":\r\n\r\n\t\t\tcase \"WindowRectMinHeight\":\r\n\t\t\tlet h = <number>d;\r\n\t\t\tif (isNaN_(h) || isInfinity(h)) {\r\n\t\t\t\tthis.gg = 5E-06;\r\n\t\t\t\tthis.gf = 5E-06;\r\n\t\t\t} else {\r\n\t\t\t\tthis.gg = h;\r\n\t\t\t\tthis.gf = h;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[7]:\r\n\t\t\tthis.pb();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerAutomaticBehavior\":\r\n\t\t\tfor (let i of fromEnum<Series>(this.series)) {\r\n\t\t\t\ti.ln();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate u4(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\tprivate u9(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bh = null;\r\n\t\t}\r\n\t}\r\n\tprivate va(): void {\r\n\t\tif (this.tw != null) {\r\n\t\t\tthis.tw.l3 = this.vx.left;\r\n\t\t\tthis.tw.l2 = this.vx.right;\r\n\t\t}\r\n\t\tif (this.ty != null) {\r\n\t\t\tthis.ty.l3 = this.vx.top;\r\n\t\t\tthis.ty.l2 = this.vx.bottom;\r\n\t\t}\r\n\t\tthis.tw.c1(true);\r\n\t\tthis.ty.c1(true);\r\n\t}\r\n\tt8: XamGeographicMapView;\r\n\tprivate t9: FontInfo = null;\r\n\tgetFontInfo(): FontInfo {\r\n\t\tthis.t9 = this.t8.fo;\r\n\t\treturn this.t9;\r\n\t}\r\n\tse(): Brush {\r\n\t\treturn this.t8.fw;\r\n\t}\r\n\tgetFontBrush(): Brush {\r\n\t\treturn this.t8.fx;\r\n\t}\r\n\tprotected ow(a: Series, b: any): void {\r\n\t\tif (typeCast<ItfConverter>((<any>ItfConverter).$, b) !== null) {\r\n\t\t\tlet c = (<ItfConverter>b);\r\n\t\t\tlet d = (<GeographicScatterAreaSeries>a);\r\n\t\t\td.itemsSource = c.triangulationSource.points;\r\n\t\t\td.qj = c.triangulationSource.triangles;\r\n\t\t} else {\r\n\t\t\tsuper.ow(a, b);\r\n\t\t}\r\n\t}\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.om(a, b);\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.o2(a);\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.lr();\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.ul != null) {\r\n\t\t\tthis.ul.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\tu1(a: boolean): void {\r\n\t\tthis.pa(a);\r\n\t}\r\n\tum(): any {\r\n\t\tlet a = new ChartVisualData();\r\n\t\tlet b = this.tw.fv();\r\n\t\tlet c = this.ty.fv();\r\n\t\ta.axes.add1(b);\r\n\t\ta.axes.add1(c);\r\n\t\tfor (let d = 0; d < this.series.count; d++) {\r\n\t\t\tlet e = this.series._inner[d].hu();\r\n\t\t\ta.series.add1(e);\r\n\t\t}\r\n\t\ta.name = this.name;\r\n\t\ta.contentArea = RectData.b(this.to);\r\n\t\ta.centralArea = RectData.b(this.to);\r\n\t\ta.plotArea = RectData.b(this.to);\r\n\t\treturn a;\r\n\t}\r\n\ttg(a: Rect, b: Rect, c: Rect): Rect {\r\n\t\treturn a;\r\n\t}\r\n\tu5(): void {\r\n\t}\r\n\tprivate vu: Rect = Rect.empty;\r\n\tprotected get v8(): Rect {\r\n\t\treturn this.vu;\r\n\t}\r\n\tprotected set v8(a: Rect) {\r\n\t\tthis.vu = a;\r\n\t}\r\n\tvf(a: Rect): void {\r\n\t\tthis.v8 = a;\r\n\t\tthis.ve();\r\n\t}\r\n\tprivate ve(): void {\r\n\t\tif (this.uf && !this.v8.isEmpty) {\r\n\t\t\tlet a = this.getZoomFromGeographicRect(this.v8);\r\n\t\t\tthis.v8 = Rect.empty;\r\n\t\t\tthis.ph(a, false);\r\n\t\t}\r\n\t}\r\n\tget uf(): boolean {\r\n\t\treturn !this.to.isEmpty && !this.td.isEmpty;\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, XamGeographicMap, 'n8', [ 'BackgroundTilingMode:t3:vg', [ MapBackgroundTilingMode_$type, enumGetBox<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, 0) ], 'IsHorizontalWrappingEnabled:ub:vh', [ 0, false ], 'ResizeBehavior:t7:vi', [ MapResizeBehavior_$type, enumGetBox<MapResizeBehavior>(MapResizeBehavior_$type, XamGeographicMap.t6) ], 'SuppressZoomResetOnWorldRectChange:uc:vj', [ 0, false ], 'UseWorldRectForZoomBounds:ud:vk', [ 0, false ], 'WindowScale:uj:vl', [ 1, NaN ], 'WorldRect:v9:vm', [ (<any>Rect).$, XamGeographicMap.vt ], 'Zoomable:ue:vn', [ 0, true ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapImagery extends Control implements INotifyPropertyChanged {\r\n\tstatic $t: Type = markType(GeographicMapImagery, 'GeographicMapImagery', (<any>Control).$, [INotifyPropertyChanged_$type]);\r\n\tconstructor(a: XamMultiScaleTileSource) {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicMapImagery).$;\r\n\t\tthis.ap = a;\r\n\t\tthis.aj = this.ai();\r\n\t\tthis.bb(this.aj);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new GeographicMapImageryView(this);\r\n\t}\r\n\tprotected aj: GeographicMapImageryView;\r\n\tprivate ak: IMapRenderDeferralHandler = null;\r\n\tget deferralHandler(): IMapRenderDeferralHandler {\r\n\t\treturn this.ak;\r\n\t}\r\n\tset deferralHandler(a: IMapRenderDeferralHandler) {\r\n\t\tthis.ak = a;\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.al = a;\r\n\t\t}\r\n\t}\r\n\tprivate a5(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\ta9(): void {\r\n\t\tlet a = this.ao;\r\n\t\ta.imageTilesReady = delegateCombine(a.imageTilesReady, runOn(this, this.a5));\r\n\t\tthis.ao.al = this.deferralHandler;\r\n\t\tlet b = this.ao;\r\n\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.a4));\r\n\t\tlet c = this.ao;\r\n\t\tc.downloadingImage = delegateCombine(c.downloadingImage, runOn(this, this.a3));\r\n\t\tlet d = this.ao;\r\n\t\td.cancellingImage = delegateCombine(d.cancellingImage, runOn(this, this.a2));\r\n\t\tthis.ao.bf = this.referer;\r\n\t\tthis.ao.bj = this.userAgent;\r\n\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t}\r\n\tprivate a3(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tif (this.downloadingImage != null) {\r\n\t\t\tthis.downloadingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate a2(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tif (this.cancellingImage != null) {\r\n\t\t\tthis.cancellingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate bg(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.aj.e();\r\n\t\t}\r\n\t}\r\n\tprotected ba(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase GeographicMapImagery.$$p[3]:\r\n\t\t\tthis.bg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"GeographicMap\":\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[1]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bf = this.referer;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[2]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bj = this.userAgent;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[0]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(a));\r\n\t\t}\r\n\t}\r\n\twindowRect: Rect;\r\n\tget geographicMap(): XamGeographicMap {\r\n\t\treturn <XamGeographicMap>this.c(GeographicMapImagery.geographicMapProperty);\r\n\t}\r\n\tset geographicMap(a: XamGeographicMap) {\r\n\t\tthis.h(GeographicMapImagery.geographicMapProperty, a);\r\n\t}\r\n\tstatic readonly geographicMapProperty: DependencyProperty = DependencyProperty.i(\"GeographicMap\", (<any>XamGeographicMap).$, (<any>GeographicMapImagery).$, new PropertyMetadata(2, null, GeographicMapImagery.a8));\r\n\tprivate static a8(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<GeographicMapImagery>a).a7(<XamGeographicMap>b.oldValue, <XamGeographicMap>b.newValue);\r\n\t}\r\n\tprivate a7(a: XamGeographicMap, b: XamGeographicMap): void {\r\n\t\tthis.ba(\"GeographicMap\", a, b);\r\n\t}\r\n\tclearTileCache(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.bs(0, 0, 0, 0);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate an: XamMultiScaleImage = null;\r\n\tget ao(): XamMultiScaleImage {\r\n\t\treturn this.an;\r\n\t}\r\n\tset ao(a: XamMultiScaleImage) {\r\n\t\tthis.an = a;\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(\"MultiScaleImage\"));\r\n\t\t}\r\n\t}\r\n\tap: XamMultiScaleTileSource = null;\r\n\tpropertyChanged: (sender: any, e: PropertyChangedEventArgs) => void = null;\r\n\tbn(a: Size): Size {\r\n\t\tif (this.geographicMap == null || a.width < 1 || a.height < 1) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tlet b = new Rect(0, 0, 0, a.width, a.height);\r\n\t\tlet c = this.geographicMap.v2(b);\r\n\t\tlet d: Rect = XamGeographicMap.vt;\r\n\t\tlet e: Rect = this.geographicMap.vx;\r\n\t\tlet f: number = Math.min(this.windowRect.height, this.windowRect.width);\r\n\t\tlet g: number = e.width / d.width;\r\n\t\tthis.ao.a5 = (b.width / c.width) * f * g;\r\n\t\tlet h: NumericXAxis = this.geographicMap.tw;\r\n\t\tlet i: NumericYAxis = this.geographicMap.ty;\r\n\t\tlet j: ScalerParams = new ScalerParams(1, this.windowRect, b, h.cg);\r\n\t\tj.c = c;\r\n\t\tlet k: ScalerParams = new ScalerParams(1, this.windowRect, b, i.cg);\r\n\t\tk.c = c;\r\n\t\tlet l: number = h.ei(d.left, j);\r\n\t\tlet m: number = i.ei(d.bottom, k);\r\n\t\tlet n: number = (-l / b.width) * this.ao.a5;\r\n\t\tlet o: number = (-m / b.height) * this.ao.a5 * (b.height / b.width);\r\n\t\tthis.ao.cm = <Point>{ $type: Point_$type, x: n, y: o };\r\n\t\treturn a;\r\n\t}\r\n\tbd(a: RenderingContext): void {\r\n\t\tthis.aj.f(a);\r\n\t}\r\n\tbf(a: Rect): void {\r\n\t\tthis.aj.h(a);\r\n\t}\r\n\tbe(a: DomRenderer): void {\r\n\t\tthis.aj.g(a);\r\n\t}\r\n\timagesChanged: (sender: any, e: ImagesChangedEventArgs) => void = null;\r\n\tprivate a4(a: any, b: EventArgs): void {\r\n\t\tif (this.imagesChanged != null) {\r\n\t\t\tthis.imagesChanged(this, new ImagesChangedEventArgs());\r\n\t\t}\r\n\t}\r\n\ta6(): void {\r\n\t\tthis.aj.e();\r\n\t}\r\n\tbc(a: number): void {\r\n\t\tthis.aj.i(a);\r\n\t}\r\n\tprotected v(): void {\r\n\t\tsuper.v();\r\n\t\tthis.ap.o = this._opacity;\r\n\t}\r\n\tcancellingImage: (sender: any, args: CancellingMultiScaleImageEventArgs) => void = null;\r\n\tdownloadingImage: (sender: any, args: DownloadingMultiScaleImageEventArgs) => void = null;\r\n\treferer: string;\r\n\tisHorizontalWrappingEnabled: boolean;\r\n\tuserAgent: string;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMapImagery, 'ba', [ 'IsHorizontalWrappingEnabled', [ 0, false ], 'Referer', [ 2, null ], 'UserAgent', [ 2, null ], 'WindowRect', [ (<any>Rect).$, Rect.empty ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicMapImageryView extends Base {\r\n\tstatic $t: Type = markType(GeographicMapImageryView, 'GeographicMapImageryView');\r\n\tconstructor(a: GeographicMapImagery) {\r\n\t\tsuper();\r\n\t\tthis.j = Rect.empty;\r\n\t\tthis.a = a;\r\n\t\tthis.a.ao = new XamMultiScaleImage();\r\n\t\tthis.a.ao.ao = this.a.ap;\r\n\t\tthis.a.a9();\r\n\t}\r\n\tprotected a: GeographicMapImagery = null;\r\n\te(): void {\r\n\t\tif (this.j.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.a.bn(new Size(1, this.j.width, this.j.height));\r\n\t}\r\n\tprotected j: Rect = null;\r\n\tf(a: RenderingContext): void {\r\n\t\tthis.a.ao.b1(a);\r\n\t}\r\n\tprivate d: DomRenderer = null;\r\n\tg(a: DomRenderer): void {\r\n\t\tthis.d = a;\r\n\t\tthis.a.ao.b2(a);\r\n\t}\r\n\th(a: Rect): void {\r\n\t\tthis.j = a;\r\n\t\tthis.a.ao.b3(a);\r\n\t\tthis.a.a6();\r\n\t}\r\n\tprivate b: number = 1;\r\n\tget c(): number {\r\n\t\treturn this.b;\r\n\t}\r\n\ti(a: number): void {\r\n\t\tthis.b = a;\r\n\t\tthis.a.ao.bz(a);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicXYTriangulatingSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeriesView, 'GeographicXYTriangulatingSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicXYTriangulatingSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprotected ce: GeographicXYTriangulatingSeries = null;\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tlet a = <ScatterTriangulationSeries>this.ce.qa;\r\n\t\ta.ra = this.ce.qm;\r\n\t\ta.ri = this.ce.qk;\r\n\t\ta.trianglesSource = this.ce.qj;\r\n\t\ta.qy = this.ce.qp;\r\n\t\ta.q0 = this.ce.qr;\r\n\t\ta.q2 = this.ce.qt;\r\n\t}\r\n\tch(): void {\r\n\t\tlet a = <ScatterTriangulationSeries>this.ce.qa;\r\n\t\tif (this.ce.cd == null) {\r\n\t\t\ta.p8 = null;\r\n\t\t\ta.p9 = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.p8 = (<XamGeographicMap>this.ce.cd).tw;\r\n\t\ta.p9 = (<XamGeographicMap>this.ce.cd).ty;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qa).ra = this.ce.qm;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qa).ri = this.ce.qk;\r\n\t}\r\n\tci(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qa).trianglesSource = this.ce.qj;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qa).qy = this.ce.qp;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qa).q0 = this.ce.qr;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qa).q2 = this.ce.qt;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeriesView, 'GeographicScatterAreaSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicScatterAreaSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cm = a;\r\n\t}\r\n\tprivate cm: GeographicScatterAreaSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tif (this.cm.q4 != null) {\r\n\t\t\tthis.cm.q4.sh = this.cm.q8;\r\n\t\t\tthis.cm.q4.r5 = this.cm.q3;\r\n\t\t}\r\n\t}\r\n\tcn(): void {\r\n\t\tif (this.cm.q4 != null) {\r\n\t\t\tthis.cm.q4.sh = this.cm.q8;\r\n\t\t}\r\n\t}\r\n\tco(): void {\r\n\t\tif (this.cm.q4 != null) {\r\n\t\t\tthis.cm.q4.r5 = this.cm.q3;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMapView extends SeriesViewerView {\r\n\tstatic $t: Type = markType(XamGeographicMapView, 'XamGeographicMapView', (<any>SeriesViewerView).$);\r\n\tconstructor(a: XamGeographicMap) {\r\n\t\tsuper(a);\r\n\t\tthis.fz = Rect.empty;\r\n\t\tthis.fn = a;\r\n\t\tthis.fn.r9 = 2;\r\n\t\tthis.fn.hl = 5E-06;\r\n\t}\r\n\tm(a: boolean): InteractionState {\r\n\t\treturn 2;\r\n\t}\r\n\tbk(a: boolean): void {\r\n\t\tthis.j.bv(a);\r\n\t\tthis.fn.u1(a);\r\n\t\tthis.el();\r\n\t}\r\n\tprotected fn: XamGeographicMap = null;\r\n\tprotected get_ap(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\td4(): void {\r\n\t\tlet a: BrushCollection;\r\n\t\tlet b: BrushCollection;\r\n\t\tlet c: Brush;\r\n\t\tlet d: FontInfo;\r\n\t\tlet e: Brush;\r\n\t\tlet f = this.j.a7(a, b, c, d, e);\r\n\t\ta = f.p0;\r\n\t\tb = f.p1;\r\n\t\tc = f.p2;\r\n\t\td = f.p3;\r\n\t\te = f.p4;\r\n\t\tthis.fx = c;\r\n\t\tthis.fo = d;\r\n\t\tthis.fw = e;\r\n\t\tlet g = this.j.e();\r\n\t\tthis.fn.ag = g.a;\r\n\t\tthis.fn.aj = g.f;\r\n\t\tthis.fn.ah = g.b != null ? g.b : new BrushCollection();\r\n\t\tthis.fn.ai = g.c != null ? g.c : new BrushCollection();\r\n\t\tif (this.fn.ah.count == 0) {\r\n\t\t\tfor (let h = 0; h < g.a.count; h++) {\r\n\t\t\t\tthis.fn.ah.add(g.a.item(h));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (g.c.count == 0) {\r\n\t\t\tfor (let i = 0; i < g.f.count; i++) {\r\n\t\t\t\tthis.fn.ai.add(g.f.item(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdu(a: RenderingContext): void {\r\n\t\tsuper.du(a);\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.be(this.j.ae);\r\n\t\t\tb.bd(a);\r\n\t\t}\r\n\t}\r\n\tprotected fz: Rect = null;\r\n\tprotected dv(a: Rect): void {\r\n\t\tsuper.dv(a);\r\n\t\tthis.fz = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.bf(this.fz);\r\n\t\t}\r\n\t}\r\n\tfy(): Rect {\r\n\t\treturn new Rect(0, 0, 0, this.fz.width, this.fz.height);\r\n\t}\r\n\tfs(): void {\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet a: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\ta.a6();\r\n\t\t}\r\n\t}\r\n\tfx: Brush = null;\r\n\tfw: Brush = null;\r\n\tfo: FontInfo = null;\r\n\tfr(a: Rect): void {\r\n\t\tif (this.fn.t1 != null) {\r\n\t\t\tthis.fn.t1.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tfu(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.fn.t1 != null) {\r\n\t\t\tthis.fn.t1.windowRect = this.fn.s9;\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\tlet c = a.ao;\r\n\t\t\tif (c != null) {\r\n\t\t\t\tthis.fn.al.e.remove(c.ag);\r\n\t\t\t}\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tlet d = b.ao;\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.fn.al.e.add(d.ag);\r\n\t\t\t}\r\n\t\t\tif (!this.fz.isEmpty) {\r\n\t\t\t\tthis.dv(this.fz);\r\n\t\t\t}\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tthis.du(this.w);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.ft(this.w);\r\n\t\t}\r\n\t}\r\n\tprivate ft(a: RenderingContext): void {\r\n\t\tlet b = this.fn.gc;\r\n\t\tif (b != 1) {\r\n\t\t\ta.aa();\r\n\t\t\ta.ab(b, b);\r\n\t\t}\r\n\t\ta.l(this.fz.left, this.fz.top, this.fz.width, this.fz.height);\r\n\t\tif (b != 1) {\r\n\t\t\ta.z();\r\n\t\t}\r\n\t}\r\n\tprotected d1(): void {\r\n\t\tthis.fd.ac = Defaults.j;\r\n\t\tthis.fe.ac = Defaults.j;\r\n\t\tthis.fd._stroke = Defaults.ae;\r\n\t\tthis.fe._stroke = Defaults.ae;\r\n\t\tsuper.d1();\r\n\t}\r\n\tfv(a: number): void {\r\n\t\tthis.fp = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\t(<GeographicMapImagery>this.fn.backgroundContent).bc(a);\r\n\t\t}\r\n\t}\r\n\tprivate fp: number = NaN;\r\n\tget fq(): number {\r\n\t\treturn this.fp;\r\n\t}\r\n\tset fq(a: number) {\r\n\t\tthis.fp = a;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class OpenStreetMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(OpenStreetMapImagery, 'OpenStreetMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new OpenStreetMapTileSource());\r\n\t}\r\n\tget tilePath(): string {\r\n\t\treturn <string>this.c(OpenStreetMapImagery.tilePathProperty);\r\n\t}\r\n\tset tilePath(a: string) {\r\n\t\tthis.h(OpenStreetMapImagery.tilePathProperty, a);\r\n\t}\r\n\tstatic readonly tilePathProperty: DependencyProperty = DependencyProperty.i(\"TilePath\", String_$type, (<any>OpenStreetMapImagery).$, new PropertyMetadata(2, null, OpenStreetMapImagery.br));\r\n\tprivate static br(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<OpenStreetMapImagery>a).bq(\"TilePath\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bq(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase \"TilePath\":\r\n\t\t\t(<OpenStreetMapTileSource>this.ap).setTilePathUrl(c == null ? null : <string>c);\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicXYTriangulatingSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeries, 'GeographicXYTriangulatingSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicXYTriangulatingSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.qi = <GeographicXYTriangulatingSeriesView>a;\r\n\t}\r\n\tqi: GeographicXYTriangulatingSeriesView;\r\n\tqm: string;\r\n\tqk: string;\r\n\tqj: IEnumerable;\r\n\tqp: string;\r\n\tqr: string;\r\n\tqt: string;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.qi.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[1]:\r\n\t\t\tthis.qi.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[0]:\r\n\t\t\tthis.qi.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[2]:\r\n\t\t\tthis.qi.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[3]:\r\n\t\t\tthis.qi.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[4]:\r\n\t\t\tthis.qi.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[5]:\r\n\t\t\tthis.qi.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicXYTriangulatingSeries, 'raisePropertyChanged', [ 'LatitudeMemberPath:qk:qv', [ 2, \"pointY\" ], 'LongitudeMemberPath:qm:qw', [ 2, \"pointX\" ], 'TrianglesSource:qj:qx', [ IEnumerable_$type, null ], 'TriangleVertexMemberPath1:qp:qy', [ 2, \"v1\" ], 'TriangleVertexMemberPath2:qr:qz', [ 2, \"v2\" ], 'TriangleVertexMemberPath3:qt:q0', [ 2, \"v3\" ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeries, 'GeographicScatterAreaSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected get_dd(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicScatterAreaSeries).$;\r\n\t}\r\n\tq8: string;\r\n\tprivate q1: ColorScale = null;\r\n\tget q3(): ColorScale {\r\n\t\treturn this.q1;\r\n\t}\r\n\tset q3(a: ColorScale) {\r\n\t\tlet b: boolean = this.q1 != a;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.q1;\r\n\t\t\tif (this.q1 != null) {\r\n\t\t\t\tlet d = this.q1;\r\n\t\t\t\td.propertyChanged = delegateRemove(d.propertyChanged, runOn(this, this.rb));\r\n\t\t\t}\r\n\t\t\tthis.q1 = a;\r\n\t\t\tif (this.q1 != null) {\r\n\t\t\t\tlet e = this.q1;\r\n\t\t\t\te.propertyChanged = delegateCombine(e.propertyChanged, runOn(this, this.rb));\r\n\t\t\t}\r\n\t\t\tthis.raisePropertyChanged(\"ColorScale\", c, this.q1);\r\n\t\t\tif (this.q4 != null) {\r\n\t\t\t\tthis.q4.r5 = a;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate rb(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tthis.q6.co();\r\n\t\tthis.rd();\r\n\t\tthis.ml(false);\r\n\t}\r\n\trd(): void {\r\n\t\tif (this.q4 != null) {\r\n\t\t\tthis.q2 = this.q4.r4;\r\n\t\t}\r\n\t}\r\n\tq2: ColorScale;\r\n\tprotected mz(): void {\r\n\t\tsuper.mz();\r\n\t\tthis.rd();\r\n\t}\r\n\tq4: ScatterAreaSeries;\r\n\tprotected p9(): Series {\r\n\t\tthis.q4 = new ScatterAreaSeries();\r\n\t\tlet a = this.q4;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.rc));\r\n\t\treturn this.q4;\r\n\t}\r\n\tprivate rc(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicScatterAreaSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.q6 = <GeographicScatterAreaSeriesView>a;\r\n\t}\r\n\tq6: GeographicScatterAreaSeriesView;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicScatterAreaSeries.$$p[1]:\r\n\t\t\tthis.q6.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ColorScale\":\r\n\t\t\tthis.q6.co();\r\n\t\t\tthis.rd();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tprotected get_e5(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_e5(a: boolean): void {\r\n\t\tsuper.set_e5(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicScatterAreaSeries, 'raisePropertyChanged', [ 'ActualColorScale:q2:re', [ (<any>ColorScale).$, null ], 'ColorMemberPath:q8:rf', [ 2, \"value\" ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Describes available map styles for the Bing Maps imagery.\r\n */\r\nexport enum BingMapsImageryStyle {\r\n\t/**\r\n\t * Specifies the Aerial map style without road or labels overlay.\r\n\t */\r\n\tAerial = 0,\r\n\t/**\r\n\t * Specifies the Aerial map style with road and labels overlay.\r\n\t */\r\n\tAerialWithLabels = 1,\r\n\t/**\r\n\t * Specifies the Roads map style without aerial overlay.\r\n\t */\r\n\tRoad = 2,\r\n\t/**\r\n\t * Specifies a dark version of the Roads maps.\r\n\t */\r\n\tCanvasDark = 3,\r\n\t/**\r\n\t * Specifies a lighter version of the Roads maps.\r\n\t */\r\n\tCanvasLight = 4,\r\n\t/**\r\n\t * Specifies a grayscale version of the Roads maps.\r\n\t */\r\n\tCanvasGray = 5\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let BingMapsImageryStyle_$type = markEnum('BingMapsImageryStyle', 'Aerial,0|AerialWithLabels,1|Road,2|CanvasDark,3|CanvasLight,4|CanvasGray,5');\r\n\r\n\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\nimport { markType } from 'igniteui-core/type';\r\n\r\n\r\nimport { String_$type } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcSubDomainsCollection extends IgCollection<string, string> {\r\n    constructor(list?: string[]) {\r\n        super();\r\n        \r\n   \r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<string, string> {\r\n        \r\n \r\n        let coll = new SyncableObservableCollection$2<string, string>(String_$type, String_$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return ext;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            return int;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { IEnumerable$1, IEnumerable$1_$type, Base, String_$type, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SubDomainsCollection extends ObservableCollection$1<string> {\r\n\tstatic $t: Type = markType(SubDomainsCollection, 'SubDomainsCollection', (<any>ObservableCollection$1).$.specialize(String_$type));\r\n\tconstructor(a: number);\r\n\tconstructor(a: number, b: IEnumerable$1<string>);\r\n\tconstructor(a: number, ..._rest: any[]);\r\n\tconstructor(a: number, ..._rest: any[]) {\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tsuper(String_$type, 0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: IEnumerable$1<string> = <IEnumerable$1<string>>_rest[0];\r\n\t\t\t\tsuper(String_$type, 1, c);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImageryView } from \"./GeographicMapImageryView\";\r\nimport { SubDomainsCollection } from \"./SubDomainsCollection\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { BingMapsTileSource } from \"igniteui-core/BingMapsTileSource\";\r\nimport { Base, Type, markType, Boolean_$type, typeCast, String_$type, enumGetBox, EnumUtil, runOn, delegateRemove, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { NotifyCollectionChangedEventArgs } from \"igniteui-core/NotifyCollectionChangedEventArgs\";\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { stringEmpty, stringIsNullOrEmpty } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImageryView extends GeographicMapImageryView {\r\n\tstatic $t: Type = markType(BingMapsMapImageryView, 'BingMapsMapImageryView', (<any>GeographicMapImageryView).$);\r\n\tconstructor(a: BingMapsMapImagery) {\r\n\t\tsuper(a);\r\n\t\tthis.k = a;\r\n\t}\r\n\tprotected k: BingMapsMapImagery;\r\n\tm(): void {\r\n\t\tif (this.k.subDomains == null) {\r\n\t\t\tthis.k.subDomains = new SubDomainsCollection(0);\r\n\t\t}\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\to(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t}\r\n\tl(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\tn(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(BingMapsMapImagery, 'BingMapsMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate _pendingBingRequest_: any = null;\r\n\tprivate static readonly cc: string = \"http://dev.virtualearth.net/REST/v1/Imagery/Metadata/\";\r\n\tconstructor() {\r\n\t\tsuper(new BingMapsTileSource(0));\r\n\t\tthis.getResponseCompleted = this.getResponseCompleted.bind(this);\r\n\t\tthis.bp.m();\r\n\t\tthis.actualBingImageryRestUri = BingMapsMapImagery.cc;\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new BingMapsMapImageryView(this);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t\tsuper.bb(a);\r\n\t\tthis.bp = <BingMapsMapImageryView>a;\r\n\t}\r\n\tbp: BingMapsMapImageryView;\r\n\tprivate _isInitialized: boolean = false;\r\n\tget isInitialized(): boolean {\r\n\t\treturn this._isInitialized;\r\n\t}\r\n\tset isInitialized(a: boolean) {\r\n\t\tthis._isInitialized = a;\r\n\t}\r\n\tisDeferredLoad: boolean;\r\n\ttilePath: string;\r\n\tprivate bz: string = null;\r\n\tget actualTilePath(): string {\r\n\t\treturn this.bz;\r\n\t}\r\n\tset actualTilePath(a: string) {\r\n\t\tlet b = this.bz;\r\n\t\tthis.bz = a;\r\n\t\tthis.cm(\"ActualTilePath\", b, this.bz);\r\n\t}\r\n\tsubDomains: SubDomainsCollection;\r\n\tprivate bq: SubDomainsCollection = null;\r\n\tget actualSubDomains(): SubDomainsCollection {\r\n\t\treturn this.bq;\r\n\t}\r\n\tset actualSubDomains(a: SubDomainsCollection) {\r\n\t\tlet b = this.bq;\r\n\t\tthis.bq = a;\r\n\t\tthis.cm(\"ActualSubDomains\", b, this.bq);\r\n\t}\r\n\tprivate b0: string = null;\r\n\tget bingImageryRestUri(): string {\r\n\t\treturn this.b0;\r\n\t}\r\n\tset bingImageryRestUri(a: string) {\r\n\t\tlet b = this.b0;\r\n\t\tthis.b0 = a;\r\n\t\tthis.cm(\"BingImageryRestUri\", b, this.b0);\r\n\t}\r\n\tprivate by: string = null;\r\n\tget actualBingImageryRestUri(): string {\r\n\t\treturn this.by;\r\n\t}\r\n\tset actualBingImageryRestUri(a: string) {\r\n\t\tlet b = this.by;\r\n\t\tthis.by = a;\r\n\t\tthis.ba(\"ActualBingImageryRestUri\", b, this.by);\r\n\t}\r\n\tcultureName: string;\r\n\tapiKey: string;\r\n\timageryStyle: BingMapsImageryStyle;\r\n\trequestMapSettings(): void {\r\n\t\tthis.co(true);\r\n\t}\r\n\tprivate co(a: boolean): void {\r\n\t\tthis.cl(a);\r\n\t}\r\n\tprivate bw(): boolean {\r\n\t\tif ((this.tilePath == null) && (this.subDomains == null)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tprivate cq(): void {\r\n\t\tthis.isInitialized = false;\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.isDeferredLoad) {\r\n\t\t\tthis.co(false);\r\n\t\t}\r\n\t}\r\n\tprivate bv(): boolean {\r\n\t\tif (stringIsNullOrEmpty(this.apiKey) || this.apiKey.length < 20) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate cj(): void {\r\n\t}\r\n\tprivate cp(a: string, b: List$1<string>): void {\r\n\t\tif (a != this.actualTilePath) {\r\n\t\t\tthis.actualTilePath = a;\r\n\t\t}\r\n\t\tlet c = b == null ? null : new SubDomainsCollection(1, b);\r\n\t\tif (this.actualSubDomains != c) {\r\n\t\t\tthis.actualSubDomains = c;\r\n\t\t}\r\n\t\tthis.bp.m();\r\n\t}\r\n\tprivate cl(a: boolean): void {\r\n\t\tif ((!a) && (this.isDeferredLoad)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.isInitialized = false;\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.isInitialized = true;\r\n\t\tlet b: string = null;\r\n\t\tif (this.bingImageryRestUri != null) {\r\n\t\t\tif (Uri.isWellFormedUriString(this.bingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.bingImageryRestUri;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (Uri.isWellFormedUriString(this.actualBingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.actualBingImageryRestUri;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.imageryStyle;\r\n\t\tb += enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, c);\r\n\t\tlet d = \"key=\" + this.apiKey + \"&include=ImageryProviders\";\r\n\t\tlet url_ = b + \"?\" + d;\r\n\t\tthis._pendingBingRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted, null );\r\n\t}\r\n\tprivate getResponseCompleted(a: any, b: any): void {\r\n\t\tif (b != this._pendingBingRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingBingRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet resourceSets_ =  (<any>JSON.parse(data_)).resourceSets;\r\n\t\tif (resourceSets_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet resources_ = resourceSets_.length > 0 ? resourceSets_[0].resources : null;\r\n\t\tif (resources_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (resources_.length == 0) { return; };\r\n\t\tlet imageUrl_: string = <string>(resources_[0].imageUrl);\r\n\t\tlet subDomains_: List$1<string> = new List$1<string>(String_$type, 0);\r\n\t\tfor (var i = 0; i < resources_[0].imageUrlSubdomains.length; i++) { subDomains_.add(resources_[0].imageUrlSubdomains[i]); };\r\n\t\tthis.cp(imageUrl_, subDomains_);\r\n\t}\r\n\tprivate ci(a: any, b: NotifyCollectionChangedEventArgs): void {\r\n\t\tthis.aj.e();\r\n\t\tthis.cq();\r\n\t\tthis.cm(BingMapsMapImagery.$$p[4], this.actualSubDomains, this.actualSubDomains);\r\n\t}\r\n\tprivate cm(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase BingMapsMapImagery.$$p[0]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[3]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[5]:\r\n\t\t\tthis.cj();\r\n\t\t\tthis.actualTilePath = <string>c;\r\n\t\t\tthis.bp.o();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[1]:\r\n\t\t\tthis.bp.l();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[2]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[4]:\r\n\t\t\tthis.cj();\r\n\t\t\tlet d = <SubDomainsCollection>b;\r\n\t\t\tlet e = <SubDomainsCollection>c;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\tlet f = this.actualSubDomains;\r\n\t\t\t\tf.collectionChanged = delegateRemove(f.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.actualSubDomains = e;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\te.collectionChanged = delegateCombine(e.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.bp.n();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTilePath\":\r\n\t\t\tlet g = <string>c;\r\n\t\t\tif (stringIsNullOrEmpty(g)) {\r\n\t\t\t\tthis.cq();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BingImageryRestUri\":\r\n\t\t\tthis.actualBingImageryRestUri = <string>c;\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBingImageryRestUri\":\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, BingMapsMapImagery, 'cm', [ 'ApiKey', [ 2, stringEmpty() ], 'CultureName', [ 2, \"en-US\" ], 'ImageryStyle', [ BingMapsImageryStyle_$type, enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, 1) ], 'IsDeferredLoad', [ 0, false ], 'SubDomains', [ (<any>SubDomainsCollection).$, null ], 'TilePath', [ 2, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSubDomainsCollection } from \"./igc-sub-domains-collection\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { BingMapsMapImagery as BingMapsMapImagery_internal } from \"./BingMapsMapImagery\";\r\nimport { ensureBool, ensureEnum } from \"igniteui-core/componentUtil\";\r\nimport { SubDomainsCollection as SubDomainsCollection_internal } from \"./SubDomainsCollection\";\r\nimport { String_$type } from \"igniteui-core/type\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\n/**\r\n * UI element class used to display BingMapsMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcBingMapsMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : BingMapsMapImagery_internal\r\n{\r\n\treturn new BingMapsMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : BingMapsMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets a status whether the Bing Maps service is initialized.\r\n\t*/\r\n\tget isInitialized() : boolean {\r\n\t\treturn (this.i.isInitialized as boolean);\r\n\t}\r\n\tset isInitialized(v: boolean) {\r\n\t\tthis.i.isInitialized = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the Bing Maps service should be auto-initialized upon valid property values.\r\n\t*/\r\n\tget isDeferredLoad() : boolean {\r\n\t\treturn (this.i.isDeferredLoad as boolean);\r\n\t}\r\n\tset isDeferredLoad(v: boolean) {\r\n\t\tthis.i.isDeferredLoad = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile image uri.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the actual map tile image uri.\r\n\t*/\r\n\tget actualTilePath() : string {\r\n\t\treturn (this.i.actualTilePath as string);\r\n\t}\r\n\tset actualTilePath(v: string) {\r\n\t\tthis.i.actualTilePath = v;\r\n\t}\r\n\tprivate _subDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the collection of image uri subdomains.\r\n\t*/\r\n\tget subDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._subDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.subDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._subDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.subDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._subDomains;\r\n\t}\r\n\tset subDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._subDomains !== null) {\r\n\t                                            (this._subDomains as any)._setSyncTarget(null);\r\n\t                                            this._subDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._subDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.subDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._subDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.subDomains = innerColl;\r\n\t\r\n\t}\r\n\tprivate _actualSubDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the actual collection of image uri subdomains.\r\n\t*/\r\n\tget actualSubDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._actualSubDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.actualSubDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._actualSubDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.actualSubDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._actualSubDomains;\r\n\t}\r\n\tset actualSubDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._actualSubDomains !== null) {\r\n\t                                            (this._actualSubDomains as any)._setSyncTarget(null);\r\n\t                                            this._actualSubDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._actualSubDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.actualSubDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._actualSubDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.actualSubDomains = innerColl;\r\n\t\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Bing Imagery Rest Uri.\r\n\t*/\r\n\tget bingImageryRestUri() : string {\r\n\t\treturn (this.i.bingImageryRestUri as string);\r\n\t}\r\n\tset bingImageryRestUri(v: string) {\r\n\t\tthis.i.bingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Actual Bing Imagery Rest Uri.\r\n\t*/\r\n\tget actualBingImageryRestUri() : string {\r\n\t\treturn (this.i.actualBingImageryRestUri as string);\r\n\t}\r\n\tset actualBingImageryRestUri(v: string) {\r\n\t\tthis.i.actualBingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget cultureName() : string {\r\n\t\treturn (this.i.cultureName as string);\r\n\t}\r\n\tset cultureName(v: string) {\r\n\t\tthis.i.cultureName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets an API key required by the Bing Maps imagery service.\r\n\t * This key must be obtained from the http://www.bingmapsportal.com website.\r\n\t*/\r\n\tget apiKey() : string {\r\n\t\treturn (this.i.apiKey as string);\r\n\t}\r\n\tset apiKey(v: string) {\r\n\t\tthis.i.apiKey = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets a map style of the Bing Maps imagery tiles. \r\n\t * For example: Aerial, AerialWithLabels, or Road map style.\r\n\t*/\r\n\tget imageryStyle() : BingMapsImageryStyle {\r\n\t\treturn this.i.imageryStyle;\r\n\t}\r\n\tset imageryStyle(v: BingMapsImageryStyle) {\r\n\t\tthis.i.imageryStyle = ensureEnum<BingMapsImageryStyle>(BingMapsImageryStyle_$type, v);\r\n\t}\r\n\t/**\r\n\t * Will Connect to the Bing Rest API and retrieve the required TilePath and Subdomains from the service.  This requires a valid API key to already be set.\r\n\t\r\n\t*/\r\n\tpublic requestMapSettings() {\r\n\t\tthis.i.requestMapSettings();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcBingMapsMapImagery } from './igc-bing-maps-map-imagery';\r\nimport { BingMapsMapImagery } from './BingMapsMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcBingMapsMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcBingMapsMapImagery\", IgcBingMapsMapImagery);\r\n        TypeRegistrar.register(\"BingMapsMapImagery\", (<any>BingMapsMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGetTileImageUriArgs } from \"igniteui-core/igc-get-tile-image-uri-args\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { CustomMapImagery as CustomMapImagery_internal } from \"./CustomMapImagery\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcCustomMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : CustomMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t    private _getTileImageUri: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void = null;\r\n\t    private _getTileImageUri_wrapped: any = null;\r\n\t/**\r\n\t * Raised when URI for tiles should be provided\r\n\t*/\r\n\t\r\n\tpublic get getTileImageUri(): (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void {\r\n\treturn this._getTileImageUri;\r\n\t}\r\n\t    public set getTileImageUri(ev: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void) {\r\n\t        if (this._getTileImageUri_wrapped !== null) {\r\n\t            this.i.getTileImageUri = delegateRemove(this.i.getTileImageUri, this._getTileImageUri_wrapped);\r\n\t            this._getTileImageUri_wrapped = null;\r\n\t            this._getTileImageUri = null;\r\n\t        }\r\n\t\r\n\t        this._getTileImageUri = ev;\r\n\t        this._getTileImageUri_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcGetTileImageUriArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeGetTileImageUri) {\r\n\t                        (this as any).beforeGetTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._getTileImageUri) {\r\n\t    this._getTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.getTileImageUri = delegateCombine(this.i.getTileImageUri, this._getTileImageUri_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { CustomMapTileSource } from \"igniteui-core/CustomMapTileSource\";\r\nimport { Base, runOn, delegateCombine, Type, markType } from \"igniteui-core/type\";\r\nimport { GetTileImageUriArgs } from \"igniteui-core/GetTileImageUriArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class CustomMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(CustomMapImagery, 'CustomMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor(a: CustomMapTileSource) {\r\n\t\tsuper(a);\r\n\t\ta.getTileImageUri = delegateCombine(a.getTileImageUri, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: GetTileImageUriArgs): void {\r\n\t\tthis.bp(b);\r\n\t}\r\n\tprotected bp(a: GetTileImageUriArgs): void {\r\n\t\tif (this.getTileImageUri != null) {\r\n\t\t\tthis.getTileImageUri(this, a);\r\n\t\t}\r\n\t}\r\n\tgetTileImageUri: (sender: any, e: GetTileImageUriArgs) => void = null;\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcCustomMapImagery } from './igc-custom-map-imagery';\r\nimport { CustomMapImagery } from './CustomMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcCustomMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcCustomMapImagery\", IgcCustomMapImagery);\r\n        TypeRegistrar.register(\"CustomMapImagery\", (<any>CustomMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicXYTriangulatingSeriesView } from \"./GeographicXYTriangulatingSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterContourSeries } from \"igniteui-charts/ScatterContourSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, String_$type, markDep } from \"igniteui-core/type\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ValueBrushScale } from \"igniteui-charts/ValueBrushScale\";\r\nimport { ContourValueResolver } from \"igniteui-charts/ContourValueResolver\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicContourLineSeriesView, 'GeographicContourLineSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicContourLineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cm = a;\r\n\t}\r\n\tprivate cm: GeographicContourLineSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cm.g1 = Defaults.m;\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tif (this.cm.qa != null) {\r\n\t\t\tthis.cm.q2.r5 = this.cm.q5;\r\n\t\t\tthis.cm.q2.sf = this.cm.q9;\r\n\t\t}\r\n\t}\r\n\tcn(): void {\r\n\t\tif (this.cm.q2 != null) {\r\n\t\t\tthis.cm.q2.r5 = this.cm.q5;\r\n\t\t}\r\n\t}\r\n\tco(): void {\r\n\t\tif (this.cm.q2 != null) {\r\n\t\t\tthis.cm.q2.sf = this.cm.q9;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicContourLineSeries, 'GeographicContourLineSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected get_d1(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicContourLineSeries).$;\r\n\t}\r\n\tprotected qf(): void {\r\n\t\tsuper.qf();\r\n\t}\r\n\tq2: ScatterContourSeries;\r\n\tprotected p9(): Series {\r\n\t\tthis.q2 = new ScatterContourSeries();\r\n\t\tlet a = this.q2;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.rc));\r\n\t\tlet b = this.q2;\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.rd));\r\n\t\treturn this.q2;\r\n\t}\r\n\tprivate rc(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate rd(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterContourSeries>((<any>ScatterContourSeries).$, this.qa);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualFillScale\") {\r\n\t\t\tthis.q4 = c.r4;\r\n\t\t}\r\n\t}\r\n\tq9: string;\r\n\tq5: ValueBrushScale;\r\n\tq4: ValueBrushScale;\r\n\tprotected mz(): void {\r\n\t\tsuper.mz();\r\n\t}\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicContourLineSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.q6 = <GeographicContourLineSeriesView>a;\r\n\t}\r\n\tq6: GeographicContourLineSeriesView;\r\n\tq1: ContourValueResolver;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicContourLineSeries.$$p[1]:\r\n\t\t\tthis.q6.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[2]:\r\n\t\t\tthis.q6.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[3]:\r\n\t\t\tthis.q2.r2 = this.q1;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashArray\":\r\n\t\t\tthis.q2.pg = this.pg;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashCap\":\r\n\t\t\tthis.q2.ph = this.ph;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MiterLimit\":\r\n\t\t\tthis.q2.gt = this.gt;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicContourLineSeries, 'raisePropertyChanged', [ 'ActualFillScale:q4:re', [ (<any>ValueBrushScale).$, null ], 'FillScale:q5:rf', [ (<any>ValueBrushScale).$, null ], 'ValueMemberPath:q9:rg', [ 2, \"value\" ], 'ValueResolver:q1:rh', [ (<any>ContourValueResolver).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcValueBrushScaleComponent } from \"igniteui-charts/igc-value-brush-scale-component\";\r\nimport { IgcContourValueResolverComponent } from \"igniteui-charts/igc-contour-value-resolver-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicContourLineSeries } from \"./GeographicContourLineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a class for Geographic Contour Series displayed on a map.\r\n*/\r\nexport class IgcGeographicContourLineSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicContourLineSeries\r\n{\r\n\treturn new GeographicContourLineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicContourLineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicContourLineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicContourLineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-contour-line-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicContourLineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicContourLineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicContourLineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicContourLineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a line contour shape.\r\n\t*/\r\n\tget isLineContour() : boolean {\r\n\t\treturn (this.i.d1 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to retrieve the numeric values from the ItemsSource items.\r\n\t*/\r\n\tget valueMemberPath() : string {\r\n\t\treturn (this.i.q9 as string);\r\n\t}\r\n\tset valueMemberPath(v: string) {\r\n\t\tthis.i.q9 = v;\r\n\t}\r\n\t/**\r\n\t * The ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.\r\n\t*/\r\n\tget fillScale() : IgcValueBrushScaleComponent {\r\n\t                                        const r = this.i.q5;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q5 = null : this.i.q5 = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual fill scale that is set on the FillScale property or default FillScale\r\n\t*/\r\n\tget actualFillScale() : IgcValueBrushScaleComponent {\r\n\t                                        const r = this.i.q4;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset actualFillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q4 = null : this.i.q4 = v.i;\r\n\t}\r\n\t/**\r\n\t * The ContourValueResolver used to determine the numeric values of contours.\r\n\t*/\r\n\tget valueResolver() : IgcContourValueResolverComponent {\r\n\t                                        const r = this.i.q1;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcContourValueResolverComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset valueResolver(v: IgcContourValueResolverComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q1 = null : this.i.q1 = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\tif (this.actualFillScale && (this.actualFillScale as any).name && (this.actualFillScale as any).name == name) { return this.actualFillScale; }\r\n\tif (this.valueResolver && (this.valueResolver as any).name && (this.valueResolver as any).name == name) { return this.valueResolver; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualFillScale && (this.actualFillScale as any)._styling) {\r\n\t    (this.actualFillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.valueResolver && (this.valueResolver as any)._styling) {\r\n\t    (this.valueResolver as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterContourSeriesModule } from 'igniteui-charts/igc-scatter-contour-series-module';\r\n\r\nimport { IgcGeographicContourLineSeriesComponent } from './igc-geographic-contour-line-series-component';\r\nimport { GeographicContourLineSeries } from './GeographicContourLineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicContourLineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterContourSeriesModule.register();\r\n        IgcGeographicContourLineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicContourLineSeriesComponent\", IgcGeographicContourLineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicContourLineSeries\", (<any>GeographicContourLineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { HighDensityScatterSeries } from \"igniteui-charts/HighDensityScatterSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Color } from \"igniteui-core/Color\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, typeCast, Type, markType, String_$type, Boolean_$type, Number_$type, typeGetValue, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { ProgressiveLoadStatusEventArgs } from \"igniteui-charts/ProgressiveLoadStatusEventArgs\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeriesView, 'GeographicHighDensityScatterSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicHighDensityScatterSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicHighDensityScatterSeries = null;\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.ce.qa);\r\n\t\ta.si = this.ce.qz;\r\n\t\ta.sq = this.ce.qx;\r\n\t\ta.qv = this.ce.qm;\r\n\t\ta.qu = this.ce.ql;\r\n\t\ta.em = this.ce.qk;\r\n\t\ta.rq = this.ce.qo;\r\n\t\ta.rp = this.ce.qn;\r\n\t\ta.to = this.ce.ri;\r\n\t\ta.tn = this.ce.rh;\r\n\t\ta.r2 = this.ce.qr;\r\n\t}\r\n\tck(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).si = this.ce.qz;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).sq = this.ce.qx;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).qv = this.ce.qm;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).qu = this.ce.ql;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).em = this.ce.qk;\r\n\t}\r\n\tci(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).rq = this.ce.qo;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).rp = this.ce.qn;\r\n\t}\r\n\tco(): void {\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.ce.qa);\r\n\t\tif (this.ce.cd == null) {\r\n\t\t\ta.qf = null;\r\n\t\t\ta.qh = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.qf = (<XamGeographicMap>this.ce.cd).tw;\r\n\t\ta.qh = (<XamGeographicMap>this.ce.cd).ty;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).qf = (<XamGeographicMap>this.ce.cd).tw;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).qh = (<XamGeographicMap>this.ce.cd).ty;\r\n\t}\r\n\tch(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).to = this.ce.ri;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).tn = this.ce.rh;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).r2 = this.ce.qr;\r\n\t}\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ce.ri = Defaults.aq;\r\n\t\t\tthis.ce.rh = Defaults.ap;\r\n\t\t\tthis.ce.o7 = Defaults.al;\r\n\t\t\tthis.ce.pc = Defaults.ak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeries, 'GeographicHighDensityScatterSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected gw(): number {\r\n\t\tif (!isNaN_(this.gv)) {\r\n\t\t\treturn super.gw();\r\n\t\t}\r\n\t\treturn Defaults.q;\r\n\t}\r\n\tprotected get_d6(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicHighDensityScatterSeries).$;\r\n\t}\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicHighDensityScatterSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.qj = <GeographicHighDensityScatterSeriesView>a;\r\n\t}\r\n\tqj: GeographicHighDensityScatterSeriesView;\r\n\tprotected p9(): Series {\r\n\t\tthis.qi = new HighDensityScatterSeries();\r\n\t\treturn this.qi;\r\n\t}\r\n\tprivate qi: HighDensityScatterSeries = null;\r\n\tqx: string;\r\n\tqz: string;\r\n\tqm: boolean;\r\n\tql: boolean;\r\n\tqk: boolean;\r\n\tqo: number;\r\n\tqn: number;\r\n\tri: Color;\r\n\trh: Color;\r\n\tqr: number;\r\n\tprogressiveLoadStatusChanged: (sender: any, e: ProgressiveLoadStatusEventArgs) => void = null;\r\n\tprivate qq: number = 0;\r\n\tget qs(): number {\r\n\t\treturn this.qq;\r\n\t}\r\n\tset qs(a: number) {\r\n\t\tlet b = this.qq;\r\n\t\tthis.qq = a;\r\n\t\tthis.raisePropertyChanged(\"ProgressiveStatus\", b, this.qq);\r\n\t}\r\n\tprotected qf(): void {\r\n\t\tsuper.qf();\r\n\t\tlet a = (<HighDensityScatterSeries>this.qa);\r\n\t\ta.progressiveLoadStatusChanged = delegateCombine(a.progressiveLoadStatusChanged, runOn(this, this.q6));\r\n\t\tlet b = (<HighDensityScatterSeries>this.qa);\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.q5));\r\n\t}\r\n\tprivate q6(a: any, b: ProgressiveLoadStatusEventArgs): void {\r\n\t\tthis.qs = b.currentStatus;\r\n\t\tif (this.progressiveLoadStatusChanged != null) {\r\n\t\t\tthis.progressiveLoadStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate q5(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tif (this.qi == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.qj.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[5]:\r\n\t\t\tthis.qj.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[4]:\r\n\t\t\tthis.qj.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[9]:\r\n\t\t\tthis.qj.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[8]:\r\n\t\t\tthis.qj.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[6]:\r\n\t\t\tthis.qj.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.qj.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.qj.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[3]:\r\n\t\t\tthis.qj.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[1]:\r\n\t\t\tthis.qj.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[2]:\r\n\t\t\tthis.qj.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[0]:\r\n\t\t\tthis.qj.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[7]:\r\n\t\t\tthis.qj.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected get_e5(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_e5(a: boolean): void {\r\n\t\tsuper.set_e5(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicHighDensityScatterSeries, 'raisePropertyChanged', [ 'HeatMaximumColor:rh:q7', [ (<any>Color).$, Defaults.ap ], 'HeatMaximum:qn:q8', [ 1, 50 ], 'HeatMinimumColor:ri:q9', [ (<any>Color).$, Defaults.aq ], 'HeatMinimum:qo:ra', [ 1, 0 ], 'LatitudeMemberPath:qx:rb', [ 2, null ], 'LongitudeMemberPath:qz:rc', [ 2, null ], 'MouseOverEnabled:qk:rd', [ 0, false ], 'PointExtent:qr:re', [ 1, 1 ], 'ProgressiveLoad:ql:rf', [ 0, true ], 'UseBruteForce:qm:rg', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcProgressiveLoadStatusEventArgs } from \"igniteui-charts/igc-progressive-load-status-event-args\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicHighDensityScatterSeries } from \"./GeographicHighDensityScatterSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, colorToString, stringToColor } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a HighDensityScatterSeries.\r\n*/\r\nexport class IgcGeographicHighDensityScatterSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicHighDensityScatterSeries\r\n{\r\n\treturn new GeographicHighDensityScatterSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicHighDensityScatterSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicHighDensityScatterSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicHighDensityScatterSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-high-density-scatter-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows pixels.\r\n\t*/\r\n\tget isPixel() : boolean {\r\n\t\treturn (this.i.d6 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.qx as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.qx = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.qz as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.qz = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to use use brute force mode.\r\n\t*/\r\n\tget useBruteForce() : boolean {\r\n\t\treturn (this.i.qm as boolean);\r\n\t}\r\n\tset useBruteForce(v: boolean) {\r\n\t\tthis.i.qm = ensureBool(v);\r\n\t                                        this._a(\"useBruteForce\", this.i.qm);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to progressively load the data into the chart.\r\n\t*/\r\n\tget progressiveLoad() : boolean {\r\n\t\treturn (this.i.ql as boolean);\r\n\t}\r\n\tset progressiveLoad(v: boolean) {\r\n\t\tthis.i.ql = ensureBool(v);\r\n\t                                        this._a(\"progressiveLoad\", this.i.ql);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether the chart reacts to mouse move events.\r\n\t*/\r\n\tget mouseOverEnabled() : boolean {\r\n\t\treturn (this.i.qk as boolean);\r\n\t}\r\n\tset mouseOverEnabled(v: boolean) {\r\n\t\tthis.i.qk = ensureBool(v);\r\n\t                                        this._a(\"mouseOverEnabled\", this.i.qk);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the density value that maps to the minimum heat color.\r\n\t*/\r\n\tget heatMinimum() : number {\r\n\t\treturn (this.i.qo as number);\r\n\t}\r\n\tset heatMinimum(v: number) {\r\n\t\tthis.i.qo = +v;\r\n\t                                        this._a(\"heatMinimum\", this.i.qo);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the value that maps to the maximum heat color.\r\n\t*/\r\n\tget heatMaximum() : number {\r\n\t\treturn (this.i.qn as number);\r\n\t}\r\n\tset heatMaximum(v: number) {\r\n\t\tthis.i.qn = +v;\r\n\t                                        this._a(\"heatMaximum\", this.i.qn);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the minimum end of the scale.\r\n\t*/\r\n\tget heatMinimumColor() : string {\r\n\t\treturn colorToString(this.i.ri);\r\n\t}\r\n\tset heatMinimumColor(v: string) {\r\n\t\tthis.i.ri = stringToColor(v);\r\n\t                                        this._a(\"heatMinimumColor\", colorToString(this.i.ri));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the maximum end of the scale.\r\n\t*/\r\n\tget heatMaximumColor() : string {\r\n\t\treturn colorToString(this.i.rh);\r\n\t}\r\n\tset heatMaximumColor(v: string) {\r\n\t\tthis.i.rh = stringToColor(v);\r\n\t                                        this._a(\"heatMaximumColor\", colorToString(this.i.rh));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the the pixel extent of the square data points that are rendered.\r\n\t*/\r\n\tget pointExtent() : number {\r\n\t\treturn (this.i.qr as number);\r\n\t}\r\n\tset pointExtent(v: number) {\r\n\t\tthis.i.qr = +v;\r\n\t                                        this._a(\"pointExtent\", this.i.qr);\r\n\t}\r\n\t/**\r\n\t * Represents the current status of the progressive load of the series. It will range from 0 to 100, where 100 is fully loaded.\r\n\t*/\r\n\tget progressiveStatus() : number {\r\n\t\treturn (this.i.qs as number);\r\n\t}\r\n\tset progressiveStatus(v: number) {\r\n\t\tthis.i.qs = +v;\r\n\t                                        this._a(\"progressiveStatus\", this.i.qs);\r\n\t}\r\n\t\r\n\t    private _progressiveLoadStatusChanged: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void = null;\r\n\t    private _progressiveLoadStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the progressive loading state of the series has changed.\r\n\t*/\r\n\t\r\n\tpublic get progressiveLoadStatusChanged(): (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void {\r\n\treturn this._progressiveLoadStatusChanged;\r\n\t}\r\n\t    public set progressiveLoadStatusChanged(ev: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void) {\r\n\t        if (this._progressiveLoadStatusChanged_wrapped !== null) {\r\n\t            this.i.progressiveLoadStatusChanged = delegateRemove(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);\r\n\t            this._progressiveLoadStatusChanged_wrapped = null;\r\n\t            this._progressiveLoadStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._progressiveLoadStatusChanged = ev;\r\n\t        this._progressiveLoadStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcProgressiveLoadStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeProgressiveLoadStatusChanged) {\r\n\t                        (this as any).beforeProgressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._progressiveLoadStatusChanged) {\r\n\t    this._progressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.progressiveLoadStatusChanged = delegateCombine(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcHighDensityScatterSeriesModule } from 'igniteui-charts/igc-high-density-scatter-series-module';\r\n\r\nimport { IgcGeographicHighDensityScatterSeriesComponent } from './igc-geographic-high-density-scatter-series-component';\r\nimport { GeographicHighDensityScatterSeries } from './GeographicHighDensityScatterSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicHighDensityScatterSeriesModule {\r\n    public static register(): void {\r\nIgcHighDensityScatterSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicHighDensityScatterSeriesComponent\", IgcGeographicHighDensityScatterSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicHighDensityScatterSeries\", (<any>GeographicHighDensityScatterSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ArcGISOnlineTileSource } from \"igniteui-core/ArcGISOnlineTileSource\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { Base, Type, String_$type, Boolean_$type, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { TokenResponseModel } from \"./TokenResponseModel\";\r\nimport { MapServerResponseModel } from \"./MapServerResponseModel\";\r\nimport { TileInfoResponseModel } from \"./TileInfoResponseModel\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { stringIsNullOrEmpty, stringRemove } from \"igniteui-core/string\";\r\nimport { stringFormat1, stringFormat } from \"igniteui-core/stringExtended\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ArcGISOnlineMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(ArcGISOnlineMapImagery, 'ArcGISOnlineMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate static readonly bv: string = \"generateToken?username={0}&password={1}&client=referer&referer={2}&expiration={3}&f=pjson\";\r\n\tconstructor() {\r\n\t\tsuper(new ArcGISOnlineTileSource());\r\n\t\tthis.bt = \"localhost\";\r\n\t\tthis.bu = \"https://www.arcgis.com/sharing/\";\r\n\t\tthis.bp = 60;\r\n\t\tthis.userToken = null;\r\n\t\tthis.getResponseCompleted_MapServerResponse = this.getResponseCompleted_MapServerResponse.bind(this);\r\n\t\tthis.getResponseCompleted_TokenResponse = this.getResponseCompleted_TokenResponse.bind(this);\r\n\t}\r\n\tstatic readonly mapServerUriProperty: DependencyProperty = DependencyProperty.i(\"MapServerUri\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cd));\r\n\tget mapServerUri(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.mapServerUriProperty);\r\n\t}\r\n\tset mapServerUri(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.mapServerUriProperty, a);\r\n\t}\r\n\tprivate static cd(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"MapServerUri\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userNameProperty: DependencyProperty = DependencyProperty.i(\"UserName\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cg));\r\n\tget userName(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userNameProperty);\r\n\t}\r\n\tset userName(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userNameProperty, a);\r\n\t}\r\n\tprivate static cg(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserName\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly passwordProperty: DependencyProperty = DependencyProperty.i(\"Password\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ce));\r\n\tget password(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.passwordProperty);\r\n\t}\r\n\tset password(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.passwordProperty, a);\r\n\t}\r\n\tprivate static ce(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"Password\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userTokenProperty: DependencyProperty = DependencyProperty.i(\"UserToken\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ch));\r\n\tget userToken(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userTokenProperty);\r\n\t}\r\n\tset userToken(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userTokenProperty, a);\r\n\t}\r\n\tprivate static ch(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserToken\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly isMapPublicProperty: DependencyProperty = DependencyProperty.i(\"IsMapPublic\", Boolean_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, true, ArcGISOnlineMapImagery.cc));\r\n\tget isMapPublic(): boolean {\r\n\t\treturn <boolean>this.c(ArcGISOnlineMapImagery.isMapPublicProperty);\r\n\t}\r\n\tset isMapPublic(a: boolean) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.isMapPublicProperty, a);\r\n\t}\r\n\tprivate static cc(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"IsMapPublic\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bp: number = 0;\r\n\tget defaultTokenTimeout(): number {\r\n\t\treturn this.bp;\r\n\t}\r\n\tset defaultTokenTimeout(a: number) {\r\n\t\tthis.bp = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bu: string = null;\r\n\tget tokenGenerationEndPoint(): string {\r\n\t\treturn this.bu;\r\n\t}\r\n\tset tokenGenerationEndPoint(a: string) {\r\n\t\tthis.bu = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bt: string = null;\r\n\tget refererUri(): string {\r\n\t\treturn this.bt;\r\n\t}\r\n\tset refererUri(a: string) {\r\n\t\tthis.bt = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tacquireNewToken(): void {\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate b9(a: () => void): void {\r\n\t\ta();\r\n\t}\r\n\tprivate b8(a: boolean): void {\r\n\t\tif (stringIsNullOrEmpty(this.userToken) && a == false) {\r\n\t\t\tthis.ci();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet b = this.tokenGenerationEndPoint;\r\n\t\tif (stringIsNullOrEmpty(b)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.substr(b.length - 1, 1) != \"/\") {\r\n\t\t\tb += \"/\";\r\n\t\t}\r\n\t\tif (stringIsNullOrEmpty(this.refererUri)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.defaultTokenTimeout;\r\n\t\tif (c < 1) {\r\n\t\t\tc = 1;\r\n\t\t}\r\n\t\tb += stringFormat1(ArcGISOnlineMapImagery.bv, this.userName, this.password, this.refererUri, c);\r\n\t\tif (!Uri.isWellFormedUriString(b, 1)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = b;\r\n\t\tthis._pendingTokenRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_TokenResponse, null );\r\n\t}\r\n\tprivate ci(): void {\r\n\t\tif (stringIsNullOrEmpty(this.mapServerUri)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet a = this.mapServerUri;\r\n\t\tif (a.substr(a.length - 1, 1) == \"/\") {\r\n\t\t\tstringRemove(a, a.length - 1, 1);\r\n\t\t}\r\n\t\tif (!this.isMapPublic) {\r\n\t\t\tif (stringIsNullOrEmpty(this.userToken)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ta = stringFormat(\"{0}?f=json&token={1}\", a, this.userToken);\r\n\t\t} else {\r\n\t\t\ta = stringFormat(\"{0}?f=json\", a);\r\n\t\t}\r\n\t\tif (!Uri.isWellFormedUriString(a, 1)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = a;\r\n\t\tthis._pendingMapServerRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_MapServerResponse, null );\r\n\t}\r\n\tprivate _pendingTokenRequest_: any = null;\r\n\tprivate _pendingMapServerRequest_: any = null;\r\n\tprivate getResponseCompleted_TokenResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingTokenRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingTokenRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: TokenResponseModel = <TokenResponseModel>( JSON.parse(data_));\r\n\t\tif (c != null) {\r\n\t\t\tlet d: string = \"\";\r\n\t\t\tif (c.token != null) {\r\n\t\t\t\td = c.token;\r\n\t\t\t}\r\n\t\t\tthis.userToken = d;\r\n\t\t}\r\n\t}\r\n\tprivate getResponseCompleted_MapServerResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingMapServerRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingMapServerRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: MapServerResponseModel = <MapServerResponseModel>( JSON.parse(data_));\r\n\t\tif ((c != null) && (c.tileInfo != null)) {\r\n\t\t\t(<ArcGISOnlineTileSource>this.ap).levelOfDetail = c.tileInfo.lods.length;\r\n\t\t}\r\n\t}\r\n\tprivate cf(a: string, b: any, c: any): void {\r\n\t\tlet d = typeCast<ArcGISOnlineTileSource>((<any>ArcGISOnlineTileSource).$, this.ap);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"MapServerUri\":\r\n\t\t\tif (d != null) {\r\n\t\t\t\td.mapServerUri = typeCast<string>(String_$type, c);\r\n\t\t\t}\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserName\":\r\n\r\n\t\t\tcase \"Password\":\r\n\t\t\tif (stringIsNullOrEmpty(this.userName) || stringIsNullOrEmpty(this.password)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.b8(true);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserToken\":\r\n\t\t\tthis.b9(() => d.userToken = this.userToken);\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"IsMapPublic\":\r\n\t\t\td.isMapPublic = this.isMapPublic;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { ArcGISOnlineMapImagery as ArcGISOnlineMapImagery_internal } from \"./ArcGISOnlineMapImagery\";\r\nimport { ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * UI element class used to display ArcGIS Online Map imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcArcGISOnlineMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : ArcGISOnlineMapImagery_internal\r\n{\r\n\treturn new ArcGISOnlineMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : ArcGISOnlineMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile server uri.\r\n\t*/\r\n\tget mapServerUri() : string {\r\n\t\treturn (this.i.mapServerUri as string);\r\n\t}\r\n\tset mapServerUri(v: string) {\r\n\t\tthis.i.mapServerUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserName.\r\n\t*/\r\n\tget userName() : string {\r\n\t\treturn (this.i.userName as string);\r\n\t}\r\n\tset userName(v: string) {\r\n\t\tthis.i.userName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Password.\r\n\t*/\r\n\tget password() : string {\r\n\t\treturn (this.i.password as string);\r\n\t}\r\n\tset password(v: string) {\r\n\t\tthis.i.password = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserToken.\r\n\t*/\r\n\tget userToken() : string {\r\n\t\treturn (this.i.userToken as string);\r\n\t}\r\n\tset userToken(v: string) {\r\n\t\tthis.i.userToken = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the IsMapPublic variable.  A value of false requires authentication parameters.\r\n\t*/\r\n\tget isMapPublic() : boolean {\r\n\t\treturn (this.i.isMapPublic as boolean);\r\n\t}\r\n\tset isMapPublic(v: boolean) {\r\n\t\tthis.i.isMapPublic = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the Default Token Timeout before the Token Expires, this value is in Minutes\r\n\t*/\r\n\tget defaultTokenTimeout() : number {\r\n\t\treturn (this.i.defaultTokenTimeout as number);\r\n\t}\r\n\tset defaultTokenTimeout(v: number) {\r\n\t\tthis.i.defaultTokenTimeout = +v;\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the current endpoint to retrieve the token.\r\n\t*/\r\n\tget tokenGenerationEndPoint() : string {\r\n\t\treturn (this.i.tokenGenerationEndPoint as string);\r\n\t}\r\n\tset tokenGenerationEndPoint(v: string) {\r\n\t\tthis.i.tokenGenerationEndPoint = v;\r\n\t}\r\n\t/**\r\n\t * Contains the User Supplied Referer Uri to be used in Token Generation.\r\n\t*/\r\n\tget refererUri() : string {\r\n\t\treturn (this.i.refererUri as string);\r\n\t}\r\n\tset refererUri(v: string) {\r\n\t\tthis.i.refererUri = v;\r\n\t}\r\n\t/**\r\n\t * Retreives a new token based on the preconfigured parameters and updates the UserToken field, Normal this is called automatically.\r\n\t * The is provided to the end-user to allow them to reteive tokens on their onw.\r\n\t\r\n\t*/\r\n\tpublic acquireNewToken() {\r\n\t\tthis.i.acquireNewToken();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcSeriesComponent } from 'igniteui-charts/igc-series-component';\r\nimport { GridMode, GridMode_$type } from 'igniteui-charts/GridMode';\r\nimport { IgcSeriesViewerComponent } from 'igniteui-charts/igc-series-viewer-component';\r\nimport { WebComponentRenderer, WebComponentWrapper } from 'igniteui-core/web-component-renderer';\r\nimport { Visibility, Visibility_$type } from 'igniteui-core/Visibility';\r\nimport { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { PointUtil, IEnumerable, TypeRegistrar, delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { Brush } from 'igniteui-core/Brush';\r\nimport { Color } from 'igniteui-core/Color';\r\nimport { Series } from 'igniteui-charts/Series';\r\nimport { Rect } from 'igniteui-core/Rect';\r\nimport { DataTemplate } from 'igniteui-core/DataTemplate';\r\nimport { BrushCollection } from 'igniteui-core/BrushCollection';\r\nimport { XamGeographicMap } from './XamGeographicMap';\r\nimport { CollectionAdapter, brushToString, stringToBrush, toPoint, fromPoint, toRect, fromRect, fromBrushCollection, toBrushCollection, ensureBool, ensureEnum, initializePropertiesFromCss, NamePatcher, enumToString, brushCollectionToString, rectToString, toSpinal } from \"igniteui-core/componentUtil\";\r\nimport { DataChartStylingDefaults } from 'igniteui-charts/DataChartStylingDefaults';\r\nimport { IgcDataContext } from 'igniteui-core/igc-data-context';\r\nimport { IgcSeriesCollection } from 'igniteui-charts/igc-series-collection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { NotifyCollectionChangedAction } from 'igniteui-core/NotifyCollectionChangedAction';\r\nimport { getAllPropertyNames, fromSpinal } from \"igniteui-core/componentUtil\";\r\nimport { IgEvent } from 'igniteui-core/IgEvent';\r\n\r\nimport { IgcNumericXAxisComponent } from 'igniteui-charts/igc-numeric-x-axis-component';\r\nimport { IgcNumericYAxisComponent } from 'igniteui-charts/igc-numeric-y-axis-component';\r\nimport { IgcImageTilesReadyEventArgs } from './igc-image-tiles-ready-event-args';\r\nimport { IgcGeographicMapImagery } from './igc-geographic-map-imagery';\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from './MapResizeBehavior';\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from './MapBackgroundTilingMode';\r\n\r\nexport class IgcGeographicMapComponent extends IgcSeriesViewerComponent {\r\n\r\n    contentSeries: IgcSeriesComponent[] = [];\r\n\r\n\tprivate _height: string;\r\n    private _width: string;\r\n\r\n    set height(value: string) {\r\n        this._height = value;\r\n        this.style.height = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get height(): string {\r\n        return this._height;\r\n    }\r\n\r\n    set width(value: string) {\r\n        this._width = value;\r\n        this.style.width = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get width(): string {\r\n        return this._width;\r\n    }\r\n\r\n    public notifyContainerResized() {\r\n        this._chart.notifyContainerResized();\r\n    }\r\n\r\n    /**\r\n\t * Gets or sets the legend used for the current chart.\r\n\t*/\r\n    get legend(): any {\r\n        if (this.i.legend != null)\r\n            return (<any>this.i.legend).externalObject;\r\n    }\r\n    set legend(v: any) {\r\n        if (v != undefined && v != null)\r\n            this.i.legend = v.i;\r\n    }\r\n\r\n\t/**\r\n\t * The series actually present in the chart. Do not directly modify this array.\r\n\t * This array's contents can be modified by causing Angular to reproject the child content.\r\n\t * Or adding and removing series from the manual series collection on the series property.\r\n\t */\r\n\tactualSeries: IgcSeriesComponent[] = [];\r\n\t\r\n\tprivate _container: any;\r\n\r\n\tprivate _series: IgcSeriesCollection = null;\r\n\t/**\r\n\t * A collection or manually added series for the chart.\r\n\t*/\r\n    get series(): IgcSeriesCollection {\r\n        if (this._series === null) {\r\n            let coll = new IgcSeriesCollection();\r\n            let inner: SyncableObservableCollection$2<IgcSeriesComponent, Series> = (<any>coll)._innerColl;\r\n            inner.addListener((sender, e) => {\r\n                if (!this._seriesAdapter) {\r\n                    return;\r\n                }\r\n                switch (e.action) {\r\n                    case NotifyCollectionChangedAction.Add:\r\n                        this._seriesAdapter.addManualItem(e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Remove:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Replace:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        this._seriesAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Reset:\r\n                        this._seriesAdapter.clearManualItems();\r\n                        break;\r\n                }\r\n            });\r\n            this._series = coll;\r\n        }\r\n        return this._series;\r\n    }\r\n\r\n    private _renderer: WebComponentRenderer;\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        if ((this as any)._styling) {\r\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n        }\r\n        this._renderer = new WebComponentRenderer(this,\r\n            document,\r\n            true, DataChartStylingDefaults);\r\n\r\n        //this._implementation = this.createImplementation();\r\n        this._container = this._renderer.createElement(\"div\");\r\n        this._renderer.updateRoot(this._container);\r\n        //this._renderer.rootWrapper.append(this._container);\r\n        this._container.setStyleProperty(\"display\", \"block\");\r\n        this._container.setStyleProperty(\"width\", \"100%\");\r\n        this._container.setStyleProperty(\"height\", \"100%\");\r\n\r\n        var root: any;\r\n        root = this._container;\r\n        if (this._container.nativeElement != null) {\r\n            root = this._container.nativeElement;\r\n        }\r\n\r\n        this._wrapper = this._renderer;\r\n        var chart = this.i;\r\n        this._chart = chart;\r\n\r\n        this._seriesAdapter = new CollectionAdapter<IgcSeriesComponent, Series>(\r\n            this.contentSeries,\r\n            this.i.series,\r\n            this.actualSeries,\r\n            (c) => c.i,\r\n            (i) => {\r\n                (<any>i).owner = this;\r\n                (<any>i)._provideRenderer(this._dataSource);\r\n                i.provideData(this._dataSource);\r\n                if (this.parentElement) {\r\n                    (i as any)._styling(this, this, this);\r\n                }\r\n                //i.bindAxes(this.axes);\r\n                this._ensureDefaultTooltip(i);\r\n                this._ensureTooltipCreated(i);\r\n            },\r\n            (i) => { (<any>i)._provideRenderer(null); i.provideData(null); }\r\n        );\r\n\r\n        chart.provideContainer(this._renderer);\r\n\r\n        let mut = new MutationObserver((list) => {\r\n            for (var mutation of list) {\r\n                if (mutation.type == 'childList') {\r\n                    this.updateContentChildren();\r\n                }\r\n            }\r\n        });\r\n        mut.observe(this, {\r\n            childList: true\r\n        });\r\n\r\n        this._renderer.addSizeWatcher(() => {\r\n            this.notifyContainerResized();\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this._chart.destroy();\r\n        this._wrapper.destroy();\r\n    }\r\n\r\n\tprivate _wrapper: WebComponentRenderer;\r\n\r\n\tprotected createImplementation() {\r\n\t\treturn new XamGeographicMap();\r\n\t}\r\n\r\n\tprivate _chart: any;\r\n\r\n    private _dataSource: any = null;\r\n    set dataSource(value: any) {\r\n\t\tthis._dataSource = value;\r\n\t\tthis.bindData();\r\n\t}\r\n\tget dataSource(): any {\r\n\t\treturn this._dataSource;\r\n\t}\r\n\r\n\tbindData() {\r\n\t\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tcurrSeries[i].provideData(this._dataSource);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n    private updateContentChildren() {\r\n        this.contentSeries.length = 0;\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (this.children[i] instanceof IgcSeriesComponent) {\r\n                this.contentSeries.push(<IgcSeriesComponent>this.children[i]);\r\n            }\r\n        }\r\n        \r\n        if (this._seriesAdapter != null) {\r\n            this._seriesAdapter.notifyContentChanged();\r\n        }\r\n    }\r\n\r\n    private _seriesAdapter: CollectionAdapter<IgcSeriesComponent, Series> = null;\r\n\r\n    private _disconnected = false;\r\n    disconnectedCallback() {\r\n        this._disconnected = true;\r\n        if (this.i) {\r\n            this.i.onDetachedFromUI();\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        if (this._disconnected) {\r\n            this._disconnected = false;\r\n            if (this.i) {\r\n                this.i.onAttachedToUI();\r\n            }\r\n            return;\r\n        }\r\n        this.classList.add(\"igc-geographic-map\");\r\n        this.classList.add(\"ig-geographic-map\");\r\n\r\n        this.appendChild(this._renderer.rootWrapper.getNativeElement());\r\n        this._attached = true;\r\n        this.style.display = \"block\";\r\n        this.style.height = this._height;\r\n        this.style.width = this._width;\r\n        this._flushQueuedAttributes();\r\n        // supports themes or custom properties set in CSS \r\n        this._styling(this, this);\r\n        for (let i = 0; i < this.actualSeries.length; i++) {\r\n            let s = this.actualSeries[i];\r\n            (s as any)._styling(this, this, this);\r\n        }\r\n\r\n        this.updateContentChildren();\r\n        this.afterContentInit();\r\n    }\r\n\r\n\tafterContentInit() {\r\n\t\tif (TypeRegistrar.isRegistered(\"IgcDataChartDefaultTooltipsComponent\")) {\r\n\t\t\tlet cr = TypeRegistrar.create(\"IgcDataChartDefaultTooltipsComponent\");\r\n\t\t\t//let cr = cf.create(this._injector);\r\n            this._defaultTooltips = cr;\r\n\t\t\t(<any>cr).onContentReady = () => {\r\n\t\t\t\tthis._onDefaultTooltipsReady(cr);\r\n\t\t\t};\r\n\t\t\t//this._container.appendChild(cr.location.nativeElement);\r\n\t\t}\r\n\r\n\t\t\t\r\n\t\t\r\n\t\tthis.i.notifyContainerResized();\r\n\t}\r\n\r\n    private _ensureTooltipCreated(series: any) {\r\n        (<any>series)._ensureTooltipCreated(\r\n\t\t\t() => this.createTooltip(),\r\n\t\t\t(ele) => {\r\n\t\t\t\tlet wrapper = new WebComponentWrapper(\r\n\t\t\t\t\tele,\r\n\t\t\t\t\tthis._renderer\r\n\t\t\t\t);\r\n\t\t\t\t(<any>wrapper).updateToolTip = (<any>ele).updateToolTip;\r\n\t\t\t\t(<any>wrapper).hideToolTip = (<any>ele).hideToolTip;\r\n\t\t\t\treturn wrapper;\r\n\t\t\t});\r\n    }\r\n\r\n    private _defaultTooltips: any = null;\r\n\tprivate _ensureDefaultTooltip(series: IgcSeriesComponent) {\r\n        if (this._defaultTooltips == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n        this._defaultTooltips[\"ensureDefaultTooltip\"](series);\r\n\t}\r\n\r\n\tprivate _onDefaultTooltipsReady(cr: any) {\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tif (currSeries[i].showDefaultTooltip) {\r\n\t\t\t\t\tthis._ensureDefaultTooltip(currSeries[i])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    private createTooltip(): Element {\r\n\t\tif (!TypeRegistrar.isRegistered(\"IgcTooltipContainerComponent\")) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet cr = TypeRegistrar.create(\"IgcTooltipContainerComponent\");\r\n\t\tlet ele: Element = cr;\r\n\t\tlet self = this;\r\n\r\n\t\t(<any>ele).updateToolTip = function (c, isSubContent?: boolean) {\r\n            if (c.externalObject) {\r\n                c = c.externalObject;\r\n            } else {\r\n                let ext = new IgcDataContext();\r\n                (<any>ext)._implementation = c;\r\n                c = ext;\r\n            }\r\n\r\n            if (!isSubContent) {\r\n                if (ele.parentElement != self._container.getNativeElement()) {\r\n                    if (ele.parentElement != null) {\r\n                        ele.parentElement.removeChild(ele);\r\n                    }\r\n\r\n                    self._container.getNativeElement().appendChild(ele);\r\n                }\r\n            } else {\r\n                c.isSubContent = true;\r\n            }\r\n\t\t\t(<any>cr).context = c;\r\n\t\t\t(<any>ele).style.display = \"block\";\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t(<any>ele).hideToolTip = function () {\r\n\t\t\t(<any>ele).style.display = \"none\"\r\n\t\t};\r\n\t\t(<any>ele).style.display = \"none\"\r\n\r\n\t\treturn cr;\r\n    }\r\n\r\n    /**\r\n\t * An imagery to display behind all series, inside the viewport of the IgxGeographicMapComponent control.\r\n\t*/\r\n    get backgroundContent(): IgcGeographicMapImagery {\r\n        if (this.i.backgroundContent != null) {\r\n            return (<any>this.i.backgroundContent).externalObject;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    set backgroundContent(v: IgcGeographicMapImagery) {\r\n        if (typeof (v) == \"string\" && v == \"empty\") {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n            return;\r\n        }\r\n        if (v != undefined && v != null) {\r\n            this.i.backgroundContent = v.i;\r\n        } else {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n        }\r\n    }\r\n\r\n    \t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : XamGeographicMap {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n    \r\n\r\n    \t\r\n\t                private static _observedAttributesIgcGeographicMapComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    \t\r\n\t                public static htmlTagName: string = \"igc-geographic-map\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicMapComponent._isElementRegistered) {\r\n\t                        IgcGeographicMapComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicMapComponent.htmlTagName,\r\n\t                            IgcGeographicMapComponent);\r\n\t                    }\r\n\t            }\r\n\r\n\t\t/**\r\n\t * Gets or sets zoomability of the current control\r\n\t*/\r\n\tget zoomable() : boolean {\r\n\t\treturn (this.i.ue as boolean);\r\n\t}\r\n\tset zoomable(v: boolean) {\r\n\t\tthis.i.ue = ensureBool(v);\r\n\t                                        this._a(\"zoomable\", this.i.ue);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the behavior to use during resize.\r\n\t*/\r\n\tget resizeBehavior() : MapResizeBehavior {\r\n\t\treturn this.i.t7;\r\n\t}\r\n\tset resizeBehavior(v: MapResizeBehavior) {\r\n\t\tthis.i.t7 = ensureEnum<MapResizeBehavior>(MapResizeBehavior_$type, v);\r\n\t                                        this._a(\"resizeBehavior\", enumToString<MapResizeBehavior>(MapResizeBehavior_$type, this.i.t7));\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.ub as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.ub = ensureBool(v);\r\n\t                                        this._a(\"isHorizontalWrappingEnabled\", this.i.ub);\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget backgroundTilingMode() : MapBackgroundTilingMode {\r\n\t\treturn this.i.t3;\r\n\t}\r\n\tset backgroundTilingMode(v: MapBackgroundTilingMode) {\r\n\t\tthis.i.t3 = ensureEnum<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, v);\r\n\t                                        this._a(\"backgroundTilingMode\", enumToString<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, this.i.t3));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether to use the uncoerced world rect to constrain the zoom bounds.\r\n\t*/\r\n\tget useWorldRectForZoomBounds() : boolean {\r\n\t\treturn (this.i.ud as boolean);\r\n\t}\r\n\tset useWorldRectForZoomBounds(v: boolean) {\r\n\t\tthis.i.ud = ensureBool(v);\r\n\t                                        this._a(\"useWorldRectForZoomBounds\", this.i.ud);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether skip resetting the zoom when the world rect changes.\r\n\t*/\r\n\tget suppressZoomResetOnWorldRectChange() : boolean {\r\n\t\treturn (this.i.uc as boolean);\r\n\t}\r\n\tset suppressZoomResetOnWorldRectChange(v: boolean) {\r\n\t\tthis.i.uc = ensureBool(v);\r\n\t                                        this._a(\"suppressZoomResetOnWorldRectChange\", this.i.uc);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the world bounding rectangle.\r\n\t*/\r\n\tget worldRect() : IgRect {\r\n\t\treturn fromRect(this.i.v9);\r\n\t}\r\n\tset worldRect(v: IgRect) {\r\n\t\tthis.i.v9 = toRect(v);\r\n\t                                        this._a(\"worldRect\", rectToString(this.i.v9));\r\n\t}\r\n\t/**\r\n\t * Gets the actual value of the WorldRect.\r\n\t*/\r\n\tget actualWorldRect() : IgRect {\r\n\t\treturn fromRect(this.i.vx);\r\n\t}\r\n\tset actualWorldRect(v: IgRect) {\r\n\t\tthis.i.vx = toRect(v);\r\n\t                                        this._a(\"actualWorldRect\", rectToString(this.i.vx));\r\n\t}\r\n\t/**\r\n\t * The X-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget xAxis() : IgcNumericXAxisComponent {\r\n\t                                        const r = this.i.tw;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcNumericXAxisComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset xAxis(v: IgcNumericXAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.tw = null : this.i.tw = v.i;\r\n\t}\r\n\t/**\r\n\t * The Y-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget yAxis() : IgcNumericYAxisComponent {\r\n\t                                        const r = this.i.ty;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcNumericYAxisComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset yAxis(v: IgcNumericYAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.ty = null : this.i.ty = v.i;\r\n\t}\r\n\t/**\r\n\t * Indicates if this SeriesViewer is a map.\r\n\t*/\r\n\tget isMap() : boolean {\r\n\t\treturn (this.i.ej as boolean);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the WindowRect property.\r\n\t*/\r\n\tget windowScale() : number {\r\n\t\treturn (this.i.uj as number);\r\n\t}\r\n\tset windowScale(v: number) {\r\n\t\tthis.i.uj = +v;\r\n\t                                        this._a(\"windowScale\", this.i.uj);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the ActualWindowRect property.\r\n\t*/\r\n\tget actualWindowScale() : number {\r\n\t\treturn (this.i.ui as number);\r\n\t}\r\n\tset actualWindowScale(v: number) {\r\n\t\tthis.i.ui = +v;\r\n\t                                        this._a(\"actualWindowScale\", this.i.ui);\r\n\t}\r\n\t/**\r\n\t * Gets whether or not the control is ready for zooming\r\n\t*/\r\n\tget zoomIsReady() : boolean {\r\n\t\treturn (this.i.uf as boolean);\r\n\t}\r\n\r\n    \t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.backgroundContent && (this.backgroundContent as any).name && (this.backgroundContent as any).name == name) { return this.backgroundContent; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n    \t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.xAxis && (this.xAxis as any)._styling) {\r\n\t    (this.xAxis as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.yAxis && (this.yAxis as any)._styling) {\r\n\t    (this.yAxis as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\r\n\t\t/**\r\n\t * Gets current world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic getCurrentActualWorldRect() : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.v1();\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomRectFromGeoRect(geographic: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomRectFromGeoRect(toRect(geographic));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Updates zoom window using window coordinates\r\n\t\r\n\t*/\r\n\tpublic updateZoomWindow(zoomWindow: IgRect) {\r\n\t\tthis.i.vd(toRect(zoomWindow));\r\n\t}\r\n\t/**\r\n\t * Updates world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic updateWorldRect(worldRect: IgRect) {\r\n\t\tthis.i.vc(toRect(worldRect));\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomFromGeographicRect(geographic: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomFromGeographicRect(toRect(geographic));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic convertGeographicToZoom(geographic: IgRect, extraPixelPadding: number) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.vy(toRect(geographic), extraPixelPadding);\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic getZoomFromGeographicPoints(northWest: IgPoint, southEast: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomFromGeographicPoints(toPoint(northWest), toPoint(southEast));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given a WindowRect and the current plot area, get the geographic region represented by that WindowRect.\r\n\t\r\n\t* @param windowRect  * The zoom area.\r\n\t*/\r\n\tpublic getGeographicFromZoom(windowRect: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.v3(toRect(windowRect));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a pixel-based coordinate to a geographic coordinate.\r\n\t\r\n\t* @param pixelCoordinate  * A pixel-based coordinate\r\n\t*/\r\n\tpublic getGeographicPoint(pixelCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.vp(toPoint(pixelCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getPixelPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.vq(toPoint(geographicCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getWindowPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.vr(toPoint(geographicCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Removes all cached tile images from the map imagery assigned to the map's background content.\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.u0();\r\n\t}\r\n\t/**\r\n\t * Notifies the chart that the CSS styles in effect have been updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.u8();\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for horizontal dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleHorizontal() : number {\r\n\t                        \r\n\t\tlet iv = this.i.gm();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for vertical dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleVertical() : number {\r\n\t                        \r\n\t\tlet iv = this.i.gn();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Calls for a deferred refresh to the GeographicMap's background.\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n\t/**\r\n\t * Returns the chart visuals expressed as a ChartVisualData object.\r\n\t\r\n\t*/\r\n\tpublic exportVisualData() : any {\r\n\t                        \r\n\t\tlet iv = this.i.um();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Zoom in to the geographic region specified, when possible (may need to wait for map to be initialized).\r\n\t\r\n\t* @param geographic  * The geographic region to zoom to.\r\n\t*/\r\n\tpublic zoomToGeographic(geographic: IgRect) {\r\n\t\tthis.i.vf(toRect(geographic));\r\n\t}\r\n\r\n    \t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBingMapsMapImageryModule } from './igc-bing-maps-map-imagery-module';\r\nimport { IgcOpenStreetMapImageryModule } from './igc-open-street-map-imagery-module';\r\nimport { IgcCustomMapImageryModule } from './igc-custom-map-imagery-module';\r\nimport { IgcArcGISOnlineMapImageryModule } from './igc-arc-gis-online-map-imagery-module';\r\nimport { IgcGeographicMapComponent } from './igc-geographic-map-component';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcGeographicMapCoreModule {\r\n    public static register() {\r\n                IgcBingMapsMapImageryModule.register();\r\n        IgcOpenStreetMapImageryModule.register();\r\n        IgcCustomMapImageryModule.register();\r\n        IgcArcGISOnlineMapImageryModule.register();\r\n        IgcGeographicMapComponent.register();\r\n        TypeRegistrar.registerCons('IgcGeographicMapComponent', IgcGeographicMapComponent);\r\n    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcArcGISOnlineMapImagery } from './igc-arc-gis-online-map-imagery';\r\nimport { ArcGISOnlineMapImagery } from './ArcGISOnlineMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcArcGISOnlineMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcArcGISOnlineMapImagery\", IgcArcGISOnlineMapImagery);\r\n        TypeRegistrar.register(\"ArcGISOnlineMapImagery\", (<any>ArcGISOnlineMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImagesChangedEventArgs as ImagesChangedEventArgs_internal } from \"./ImagesChangedEventArgs\";\r\n\r\nexport class IgcImagesChangedEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImagesChangedEventArgs_internal\r\n{\r\n\treturn new ImagesChangedEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImagesChangedEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapComponent } from \"./igc-geographic-map-component\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcImagesChangedEventArgs } from \"./igc-images-changed-event-args\";\r\nimport { IgcCancellingMultiScaleImageEventArgs } from \"igniteui-core/igc-cancelling-multi-scale-image-event-args\";\r\nimport { IgcDownloadingMultiScaleImageEventArgs } from \"igniteui-core/igc-downloading-multi-scale-image-event-args\";\r\nimport { GeographicMapImagery as GeographicMapImagery_internal } from \"./GeographicMapImagery\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { fromRect, toRect, ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Control class used for displaying multi-scale TileSource imagery.  Designed to be used for background imagery in the IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : GeographicMapImagery_internal\r\n{\r\n\treturn null;\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : GeographicMapImagery_internal {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcGeographicMapImagery {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\t/**\r\n\t * The deferral handler to use for deferred refreshes.\r\n\t*/\r\n\tget deferralHandler() : IMapRenderDeferralHandler {\r\n\t\treturn this.i.deferralHandler as IMapRenderDeferralHandler;\r\n\t}\r\n\tset deferralHandler(v: IMapRenderDeferralHandler) {\r\n\t                                        this.i.deferralHandler = v;\r\n\t}\r\n\t/**\r\n\t * A rectangle representing the portion of the map imagery currently in view.\r\n\t * A rectangle at X=0, Y=0 with a Height and Width of 1 implies the entire plotting area is in view.  A Height and Width of .5 would imply that the view is halfway zoomed in.\r\n\t*/\r\n\tget windowRect() : IgRect {\r\n\t\treturn fromRect(this.i.windowRect);\r\n\t}\r\n\tset windowRect(v: IgRect) {\r\n\t\tthis.i.windowRect = toRect(v);\r\n\t}\r\n\t/**\r\n\t * The IgxGeographicMapComponent which is hosting this GeographicMapImagery control.\r\n\t*/\r\n\tget geographicMap() : IgcGeographicMapComponent {\r\n\t                                        const r = this.i.geographicMap;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset geographicMap(v: IgcGeographicMapComponent) {\r\n\t\tv == null ? this.i.geographicMap = null : this.i.geographicMap = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the referer sent in the headers of the tile request.\r\n\t*/\r\n\tget referer() : string {\r\n\t\treturn (this.i.referer as string);\r\n\t}\r\n\tset referer(v: string) {\r\n\t\tthis.i.referer = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets if horizontal wrapping is enabled for the imagery.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.isHorizontalWrappingEnabled as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.isHorizontalWrappingEnabled = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserAgent sent in the headers of the tile request.\r\n\t*/\r\n\tget userAgent() : string {\r\n\t\treturn (this.i.userAgent as string);\r\n\t}\r\n\tset userAgent(v: string) {\r\n\t\tthis.i.userAgent = v;\r\n\t}\r\n\tget opacity() : number {\r\n\t\treturn (this.i.opacity as number);\r\n\t}\r\n\tset opacity(v: number) {\r\n\t\tthis.i.opacity = +v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.geographicMap && (this.geographicMap as any).name && (this.geographicMap as any).name == name) { return this.geographicMap; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.clearTileCache();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when the image tiles have been downloaded.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _imagesChanged: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void = null;\r\n\t    private _imagesChanged_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when tile images have changed.\r\n\t*/\r\n\t\r\n\tpublic get imagesChanged(): (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void {\r\n\treturn this._imagesChanged;\r\n\t}\r\n\t    public set imagesChanged(ev: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void) {\r\n\t        if (this._imagesChanged_wrapped !== null) {\r\n\t            this.i.imagesChanged = delegateRemove(this.i.imagesChanged, this._imagesChanged_wrapped);\r\n\t            this._imagesChanged_wrapped = null;\r\n\t            this._imagesChanged = null;\r\n\t        }\r\n\t\r\n\t        this._imagesChanged = ev;\r\n\t        this._imagesChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImagesChangedEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImagesChanged) {\r\n\t                        (this as any).beforeImagesChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imagesChanged) {\r\n\t    this._imagesChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imagesChanged = delegateCombine(this.i.imagesChanged, this._imagesChanged_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _cancellingImage: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void = null;\r\n\t    private _cancellingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get cancellingImage(): (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void {\r\n\treturn this._cancellingImage;\r\n\t}\r\n\t    public set cancellingImage(ev: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._cancellingImage_wrapped !== null) {\r\n\t            this.i.cancellingImage = delegateRemove(this.i.cancellingImage, this._cancellingImage_wrapped);\r\n\t            this._cancellingImage_wrapped = null;\r\n\t            this._cancellingImage = null;\r\n\t        }\r\n\t\r\n\t        this._cancellingImage = ev;\r\n\t        this._cancellingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcCancellingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeCancellingImage) {\r\n\t                        (this as any).beforeCancellingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._cancellingImage) {\r\n\t    this._cancellingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.cancellingImage = delegateCombine(this.i.cancellingImage, this._cancellingImage_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _downloadingImage: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void = null;\r\n\t    private _downloadingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get downloadingImage(): (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void {\r\n\treturn this._downloadingImage;\r\n\t}\r\n\t    public set downloadingImage(ev: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._downloadingImage_wrapped !== null) {\r\n\t            this.i.downloadingImage = delegateRemove(this.i.downloadingImage, this._downloadingImage_wrapped);\r\n\t            this._downloadingImage_wrapped = null;\r\n\t            this._downloadingImage = null;\r\n\t        }\r\n\t\r\n\t        this._downloadingImage = ev;\r\n\t        this._downloadingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcDownloadingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeDownloadingImage) {\r\n\t                        (this as any).beforeDownloadingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._downloadingImage) {\r\n\t    this._downloadingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.downloadingImage = delegateCombine(this.i.downloadingImage, this._downloadingImage_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcGeographicShapeSeriesModule } from './igc-geographic-shape-series-module';\r\nimport { IgcGeographicPolylineSeriesModule } from './igc-geographic-polyline-series-module';\r\nimport { IgcTileGeneratorMapImageryModule } from './igc-tile-generator-map-imagery-module';\r\nimport { IgcHeatTileGeneratorModule } from 'igniteui-core/igc-heat-tile-generator-module';\r\nimport { IgcGeographicTileSeriesModule } from './igc-geographic-tile-series-module';\r\nimport { IgcSizeScaleModule } from 'igniteui-charts/igc-size-scale-module';\r\nimport { IgcValueBrushScaleModule } from 'igniteui-charts/igc-value-brush-scale-module';\r\nimport { IgcCustomPaletteColorScaleModule } from 'igniteui-charts/igc-custom-palette-color-scale-module';\r\nimport { IgcGeographicProportionalSymbolSeriesModule } from './igc-geographic-proportional-symbol-series-module';\r\nimport { IgcGeographicSymbolSeriesModule } from './igc-geographic-symbol-series-module';\r\nimport { IgcGeographicScatterAreaSeriesModule } from './igc-geographic-scatter-area-series-module';\r\nimport { IgcGeographicHighDensityScatterSeriesModule } from './igc-geographic-high-density-scatter-series-module';\r\nimport { IgcGeographicContourLineSeriesModule } from './igc-geographic-contour-line-series-module';\r\nimport { IgcGeographicMapCoreModule } from './igc-geographic-map-core-module';\r\nimport { IgcShapeDataSourceModule } from 'igniteui-core/igc-shape-data-source-module';\r\n\r\n\r\nexport class IgcGeographicMapModule {\r\n    public static register() {\r\n                IgcGeographicShapeSeriesModule.register();\r\n        IgcGeographicPolylineSeriesModule.register();\r\n        IgcTileGeneratorMapImageryModule.register();\r\n        IgcHeatTileGeneratorModule.register();\r\n        IgcGeographicTileSeriesModule.register();\r\n        IgcSizeScaleModule.register();\r\n        IgcValueBrushScaleModule.register();\r\n        IgcCustomPaletteColorScaleModule.register();\r\n        IgcGeographicProportionalSymbolSeriesModule.register();\r\n        IgcGeographicSymbolSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesModule.register();\r\n        IgcGeographicContourLineSeriesModule.register();\r\n        IgcGeographicMapCoreModule.register();\r\n        IgcShapeDataSourceModule.register();\r\n\r\n    }\r\n}","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, toPoint, fromPoint, fromRect } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Base class for hosting chart series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapSeriesHostComponent extends IgcSeriesComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMapSeriesHost {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicMapSeriesHostComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapSeriesHostComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Checks if this control is geographic coordinate system\r\n\t*/\r\n\tget isGeographic() : boolean {\r\n\t\treturn (this.i.dw as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets whether this series supports markers\r\n\t*/\r\n\tget hasMarkers() : boolean {\r\n\t\treturn (this.i.hasMarkers as boolean);\r\n\t}\r\n\t/**\r\n\t * The minimum scale at which this series becomes visible.\r\n\t * The default value for this property is 1.0, which means the series will always be visible.  At a VisibleFromScale setting of 0.0, the series will never be visible.  At a VisibleFromScale setting of 0.5, the series will be visible as long as the map is zoomed in to at least 200%.\r\n\t*/\r\n\tget visibleFromScale() : number {\r\n\t\treturn (this.i.qc as number);\r\n\t}\r\n\tset visibleFromScale(v: number) {\r\n\t\tthis.i.qc = +v;\r\n\t                                        this._a(\"visibleFromScale\", this.i.qc);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the coercion methods to use when loading data from data sources.\r\n\t * Should be specified before setting any member paths, if being used. Setting it later \r\n\t * will not cause data to be reimported into the chart.\r\n\t*/\r\n\tget coercionMethods() : any {\r\n\t\treturn this.i.coercionMethods as any;\r\n\t}\r\n\tset coercionMethods(v: any) {\r\n\t                                        this.i.coercionMethods = v;\r\n\t}\r\n\t/**\r\n\t * Called to notify about changes to indexed-based properties, e.g. Brushes, Outlines, MarkerBrushes, MarkerOutlines and refresh series\r\n\t\r\n\t*/\r\n\tpublic notifyIndexedPropertiesChanged() {\r\n\t\tthis.i.ln();\r\n\t}\r\n\tpublic getItemValue(item: any, memberPathName: string) : any {\r\n\t                        \r\n\t\tlet iv = this.i.hy(item, memberPathName);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets the item that is the best match for the specified world coordinates.\r\n\t\r\n\t* @param world  * The world coordinates to use.\r\n\t*/\r\n\tpublic getItem(world: IgPoint) : any {\r\n\t                        \r\n\t\tlet iv = this.i.hv(toPoint(world));\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getPreviousOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.hl(toPoint(world), skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getNextOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.hj(toPoint(world), skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.gl(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.pq(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinate for which to get a value bounding box for\r\n\t*/\r\n\tpublic getSeriesValueBoundingBox(world: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.pz(toPoint(world));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinates for which to get a value marker bounding box for\r\n\t*/\r\n\tpublic getSeriesValueMarkerBoundingBox(world: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.p1(toPoint(world));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic getSeriesHighValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.gh(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesHighValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.pm(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesLowValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.gj(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesLowValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.po(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValuePositionFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.pr(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValueFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.gm(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\r\n\t\r\n\t*/\r\n\tpublic getItemSpan() : number {\r\n\t                        \r\n\t\tlet iv = this.i.gc();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Renders the series.\r\n\t\r\n\t* @param animate  * True if the change should be animated.\r\n\t*/\r\n\tpublic renderSeries(animate: boolean) {\r\n\t\tthis.i.ml(animate);\r\n\t}\r\n\t/**\r\n\t * Called when this series' Style is updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.mv();\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Base class for creating marker series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMarkerSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMarkerSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicMarkerSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMarkerSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.qk;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.qk = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.qk));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.ql as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.ql = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.ql);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.qj;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.qj = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.qj));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker fill is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.qi;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.qi = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.qi));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.q0 as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.q0 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.re);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.re = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.re));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.rf);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.rf = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.rf));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the maximum number of markerItems displayed by the current series.\r\n\t * If more than the specified number of markerItems are visible, the series will automatically\r\n\t * choose a representative set.\r\n\t*/\r\n\tget maximumMarkers() : number {\r\n\t\treturn (this.i.qm as number);\r\n\t}\r\n\tset maximumMarkers(v: number) {\r\n\t\tthis.i.qm = +v;\r\n\t                                        this._a(\"maximumMarkers\", this.i.qm);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.qz as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.qz = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.rc);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.rc = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.rc));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.rd);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.rd = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.rd));\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolylineSeries } from \"igniteui-charts/ScatterPolylineSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicPolylineSeriesView, 'GeographicPolylineSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicPolylineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ci = a;\r\n\t}\r\n\tprotected ci: GeographicPolylineSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ci.g1 = Defaults.n;\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\t(<ScatterPolylineSeries>this.ci.qa).sw = this.ci.rg;\r\n\t\t(<ScatterPolylineSeries>this.ci.qa).s1 = this.ci.ro;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterPolylineSeries>this.ci.qa).sw = this.ci.rg;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterPolylineSeries>this.ci.qa).s1 = this.ci.ro;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicPolylineSeries, 'GeographicPolylineSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_d9(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicPolylineSeries).$;\r\n\t}\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicPolylineSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.rh = <GeographicPolylineSeriesView>a;\r\n\t}\r\n\trh: GeographicPolylineSeriesView;\r\n\trg: StyleSelector;\r\n\tro: Style;\r\n\tprotected p9(): Series {\r\n\t\tlet a = new ScatterPolylineSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.rl));\r\n\t\treturn a;\r\n\t}\r\n\tprivate rl(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicPolylineSeries.$$p[1]:\r\n\t\t\tthis.rh.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicPolylineSeries.$$p[0]:\r\n\t\t\tthis.rh.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicPolylineSeries, 'raisePropertyChanged', [ 'ShapeStyle:ro:rm', [ (<any>Style).$, null ], 'ShapeStyleSelector:rg:rn', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicPolylineSeries } from \"./GeographicPolylineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\n\r\n/**\r\n * Series class used for displaying multiple polylines, in a geographic context, for datasources which contain multiple lists of points.\r\n*/\r\nexport class IgcGeographicPolylineSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicPolylineSeries\r\n{\r\n\treturn new GeographicPolylineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicPolylineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicPolylineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicPolylineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-polyline-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicPolylineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicPolylineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicPolylineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicPolylineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polyline shape.\r\n\t*/\r\n\tget isPolyline() : boolean {\r\n\t\treturn (this.i.d9 as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.ro ? (this.i.ro.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.ro.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.ro ? (this.i.ro.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.ro.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.ro ? (this.i.ro.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.ro.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.ro.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.ro ? (this.i.ro.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.ro.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.ro.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.ro) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.ro = new Style();\r\n\t\r\n\t                                }\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolylineSeriesModule } from 'igniteui-charts/igc-scatter-polyline-series-module';\r\n\r\nimport { IgcGeographicPolylineSeriesComponent } from './igc-geographic-polyline-series-component';\r\nimport { GeographicPolylineSeries } from './GeographicPolylineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicPolylineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolylineSeriesModule.register();\r\n        IgcGeographicPolylineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicPolylineSeriesComponent\", IgcGeographicPolylineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicPolylineSeries\", (<any>GeographicPolylineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { BubbleSeries } from \"igniteui-charts/BubbleSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, Boolean_$type, Number_$type, enumGetBox, EnumUtil, typeGetValue, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { SizeScale } from \"igniteui-charts/SizeScale\";\r\nimport { BrushScale } from \"igniteui-charts/BrushScale\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeriesView, 'GeographicProportionalSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicProportionalSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicProportionalSymbolSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tlet a = <BubbleSeries>this.ce.qa;\r\n\t\ta.ti = this.ce.r9;\r\n\t\ta.tq = this.ce.r7;\r\n\t\ta.qh = this.ce.qk;\r\n\t\ta.q3 = this.ce.q0;\r\n\t\ta.qm = this.ce.ql;\r\n\t\ta.vl = this.ce.rt;\r\n\t\ta.wb = this.ce.se;\r\n\t\ta.vb = this.ce.rl;\r\n\t\ta.v1 = this.ce.r5;\r\n\t\ta.vw = this.ce.rx;\r\n\t\ta.u8 = this.ce.ri;\r\n\t\ta.vj = this.ce.rp;\r\n\t\ta.vk = this.ce.rs;\r\n\t\ta.vq = this.ce.rv;\r\n\t\ta.vp = this.ce.ru;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).ti = this.ce.r9;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).tq = this.ce.r7;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).qh = this.ce.qk;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).q3 = this.ce.q0;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).qm = this.ce.ql;\r\n\t}\r\n\tct(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).s2 = this.ce.qm;\r\n\t}\r\n\tcv(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).xAxis = (<XamGeographicMap>this.ce.cd).tw;\r\n\t}\r\n\tcw(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).yAxis = (<XamGeographicMap>this.ce.cd).ty;\r\n\t}\r\n\tcu(): void {\r\n\t\tlet a = <BubbleSeries>this.ce.qa;\r\n\t\tif (this.ce.cd == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.ce.cd).tw;\r\n\t\ta.yAxis = (<XamGeographicMap>this.ce.cd).ty;\r\n\t}\r\n\tco(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).rj = this.ce.re;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).rk = this.ce.rf;\r\n\t}\r\n\tcx(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).wb = this.ce.se;\r\n\t}\r\n\tcy(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).vb = this.ce.rl;\r\n\t\t(<BubbleSeries>this.ce.qa).vl = this.ce.rt;\r\n\t}\r\n\tci(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).v1 = this.ce.r5;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).u8 = this.ce.ri;\r\n\t\t(<BubbleSeries>this.ce.qa).vj = this.ce.rp;\r\n\t\t(<BubbleSeries>this.ce.qa).vk = this.ce.rs;\r\n\t\t(<BubbleSeries>this.ce.qa).vq = this.ce.rv;\r\n\t\t(<BubbleSeries>this.ce.qa).vp = this.ce.ru;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).vw = this.ce.rx;\r\n\t}\r\n\tcz(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).vl = this.ce.rt;\r\n\t}\r\n\tch(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).vj = this.ce.rp;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).vk = this.ce.rs;\r\n\t}\r\n\tck(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).vq = this.ce.rv;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).vp = this.ce.ru;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeries, 'GeographicProportionalSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected get_c4(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicProportionalSymbolSeries).$;\r\n\t}\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicProportionalSymbolSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.rm = <GeographicProportionalSymbolSeriesView>a;\r\n\t}\r\n\trm: GeographicProportionalSymbolSeriesView;\r\n\tprotected gx(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected p9(): Series {\r\n\t\treturn new BubbleSeries();\r\n\t}\r\n\tprivate rj: BubbleSeries = null;\r\n\tr7: string;\r\n\tr9: string;\r\n\tse: string;\r\n\trl: SizeScale;\r\n\tr5: string;\r\n\trx: string;\r\n\tri: BrushScale;\r\n\trp: boolean;\r\n\trs: boolean;\r\n\trv: number;\r\n\tru: number;\r\n\trt: boolean;\r\n\trr: boolean;\r\n\trq: boolean;\r\n\tprotected ro: boolean = false;\r\n\tprotected rn: boolean = false;\r\n\tprotected get_dy(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\trk: ScatterItemSearchMode;\r\n\trw: number;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.rm.cu();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[9]:\r\n\t\t\tthis.rm.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[8]:\r\n\t\t\tthis.rm.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.rm.cv();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.rm.cw();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[13]:\r\n\t\t\tthis.rm.cx();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[14]:\r\n\t\t\tthis.rm.cy();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[15]:\r\n\t\t\tthis.rm.cz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[7]:\r\n\t\t\tthis.rm.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[0]:\r\n\t\t\tthis.rm.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[1]:\r\n\t\t\tthis.rm.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[2]:\r\n\t\t\tthis.rm.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[12]:\r\n\t\t\tthis.rm.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[11]:\r\n\t\t\tthis.rm.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[10]:\r\n\t\t\tthis.rm.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.qa).so = this.rr;\r\n\t\t\tthis.ro = this.rr;\r\n\t\t\tif (this.rr) {\r\n\t\t\t\tlet e = (<ScatterBase>this.qa);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.sj));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.qa);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.sj));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.qa).sn = this.rq;\r\n\t\t\tthis.rn = this.rq;\r\n\t\t\tif (this.rr) {\r\n\t\t\t\tlet g = (<ScatterBase>this.qa);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.si));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.qa);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.si));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.qa).sd = this.rk;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.qa).s1 = this.rw;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate sj(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate si(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicProportionalSymbolSeries, 'raisePropertyChanged', [ 'FillMemberPath:rx:sk', [ 2 ], 'FillScale:ri:sl', [ (<any>BrushScale).$ ], 'FillScaleUseGlobalValues:rp:sm', [ 0, false ], 'IsCustomScatterMarkerStyleAllowed:rq:sn', [ 0, false ], 'IsCustomScatterStyleAllowed:rr:so', [ 0, false ], 'ItemSearchMode:rk:sp', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:rw:sq', [ 1, 10000 ], 'LabelMemberPath:r5:sr', [ 2 ], 'LatitudeMemberPath:r7:ss', [ 2, null ], 'LongitudeMemberPath:r9:st', [ 2, null ], 'MarkerBrushBrightness:ru:su', [ 1, NaN ], 'MarkerOutlineBrightness:rv:sv', [ 1, NaN ], 'MarkerOutlineUsesFillScale:rs:sw', [ 0, false ], 'RadiusMemberPath:se:sx', [ 2, null ], 'RadiusScale:rl:sy', [ (<any>SizeScale).$ ], 'RadiusScaleUseGlobalValues:rt:sz', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcSizeScaleComponent } from \"igniteui-charts/igc-size-scale-component\";\r\nimport { IgcBrushScaleComponent } from \"igniteui-charts/igc-brush-scale-component\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicProportionalSymbolSeries } from \"./GeographicProportionalSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicProportionalSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicProportionalSymbolSeries\r\n{\r\n\treturn new GeographicProportionalSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicProportionalSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicProportionalSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicProportionalSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-proportional-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.c4 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.r7 as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.r7 = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.r9 as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.r9 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius mapping property for the current series object.\r\n\t*/\r\n\tget radiusMemberPath() : string {\r\n\t\treturn (this.i.se as string);\r\n\t}\r\n\tset radiusMemberPath(v: string) {\r\n\t\tthis.i.se = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius size scale for the bubbles.\r\n\t*/\r\n\tget radiusScale() : IgcSizeScaleComponent {\r\n\t                                        const r = this.i.rl;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSizeScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset radiusScale(v: IgcSizeScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.rl = null : this.i.rl = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Label mapping property for the current series object.\r\n\t*/\r\n\tget labelMemberPath() : string {\r\n\t\treturn (this.i.r5 as string);\r\n\t}\r\n\tset labelMemberPath(v: string) {\r\n\t\tthis.i.r5 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill mapping property for the current series object.\r\n\t*/\r\n\tget fillMemberPath() : string {\r\n\t\treturn (this.i.rx as string);\r\n\t}\r\n\tset fillMemberPath(v: string) {\r\n\t\tthis.i.rx = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush scale for the marker brush.\r\n\t*/\r\n\tget fillScale() : IgcBrushScaleComponent {\r\n\t                                        const r = this.i.ri;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.ri = null : this.i.ri = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the FillScale uses global values of FillMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same FillScale.\r\n\t*/\r\n\tget fillScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.rp as boolean);\r\n\t}\r\n\tset fillScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.rp = ensureBool(v);\r\n\t                                        this._a(\"fillScaleUseGlobalValues\", this.i.rp);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether or not the marker outline should use FillScale like the marker fill does.\r\n\t * This setting applies only if the current series has a FillScale set and it overrides MarkerOutline setting.\r\n\t*/\r\n\tget markerOutlineUsesFillScale() : boolean {\r\n\t\treturn (this.i.rs as boolean);\r\n\t}\r\n\tset markerOutlineUsesFillScale(v: boolean) {\r\n\t\tthis.i.rs = ensureBool(v);\r\n\t                                        this._a(\"markerOutlineUsesFillScale\", this.i.rs);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker outline. Using negative value will change marker outline to darker color and positive value will change marker outline to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest outline) and maximum value of 1 (brightest outline)\r\n\t*/\r\n\tget markerOutlineBrightness() : number {\r\n\t\treturn (this.i.rv as number);\r\n\t}\r\n\tset markerOutlineBrightness(v: number) {\r\n\t\tthis.i.rv = +v;\r\n\t                                        this._a(\"markerOutlineBrightness\", this.i.rv);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker fill. Using negative value will change marker fill to darker color and positive value will change marker fill to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest fill) and maximum value of 1 (brightest fill)\r\n\t*/\r\n\tget markerBrushBrightness() : number {\r\n\t\treturn (this.i.ru as number);\r\n\t}\r\n\tset markerBrushBrightness(v: number) {\r\n\t\tthis.i.ru = +v;\r\n\t                                        this._a(\"markerBrushBrightness\", this.i.ru);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the RadiusScale uses global values of RadiusMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same RadiusScale.\r\n\t*/\r\n\tget radiusScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.rt as boolean);\r\n\t}\r\n\tset radiusScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.rt = ensureBool(v);\r\n\t                                        this._a(\"radiusScaleUseGlobalValues\", this.i.rt);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.rr as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.rr = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.rr);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.rq as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.rq = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.rq);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.rk;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.rk = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.rk));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.rw as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.rw = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.rw);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.radiusScale && (this.radiusScale as any).name && (this.radiusScale as any).name == name) { return this.radiusScale; }\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.radiusScale && (this.radiusScale as any)._styling) {\r\n\t    (this.radiusScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBubbleSeriesModule } from 'igniteui-charts/igc-bubble-series-module';\r\n\r\nimport { IgcGeographicProportionalSymbolSeriesComponent } from './igc-geographic-proportional-symbol-series-component';\r\nimport { GeographicProportionalSymbolSeries } from './GeographicProportionalSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicProportionalSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcBubbleSeriesModule.register();\r\n        IgcGeographicProportionalSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicProportionalSymbolSeriesComponent\", IgcGeographicProportionalSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicProportionalSymbolSeries\", (<any>GeographicProportionalSymbolSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcColorScaleComponent } from \"igniteui-charts/igc-color-scale-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicScatterAreaSeries } from \"./GeographicScatterAreaSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class which draws a colored 2D surface, in a geographic context, based on a triangulation of XY data with numeric values assigned to each point.\r\n*/\r\nexport class IgcGeographicScatterAreaSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicScatterAreaSeries\r\n{\r\n\treturn new GeographicScatterAreaSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicScatterAreaSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicScatterAreaSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicScatterAreaSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-scatter-area-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicScatterAreaSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicScatterAreaSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicScatterAreaSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicScatterAreaSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows an area shape.\r\n\t*/\r\n\tget isArea() : boolean {\r\n\t\treturn (this.i.dd as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.\r\n\t*/\r\n\tget colorMemberPath() : string {\r\n\t\treturn (this.i.q8 as string);\r\n\t}\r\n\tset colorMemberPath(v: string) {\r\n\t\tthis.i.q8 = v;\r\n\t}\r\n\t/**\r\n\t * The ColorScale used to resolve the color values of points in the series.\r\n\t*/\r\n\tget colorScale() : IgcColorScaleComponent {\r\n\t                                        const r = this.i.q3;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset colorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q3 = null : this.i.q3 = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual color scale that is set on ColorScale property or default ColorScale\r\n\t*/\r\n\tget actualColorScale() : IgcColorScaleComponent {\r\n\t                                        const r = this.i.q2;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset actualColorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q2 = null : this.i.q2 = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.colorScale && (this.colorScale as any).name && (this.colorScale as any).name == name) { return this.colorScale; }\r\n\tif (this.actualColorScale && (this.actualColorScale as any).name && (this.actualColorScale as any).name == name) { return this.actualColorScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.colorScale && (this.colorScale as any)._styling) {\r\n\t    (this.colorScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualColorScale && (this.actualColorScale as any)._styling) {\r\n\t    (this.actualColorScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t/**\r\n\t * Updates ActualColorScale properties using HostedSeries's ColorScale properties\r\n\t\r\n\t*/\r\n\tpublic updateActualColorScale() {\r\n\t\tthis.i.rd();\r\n\t}\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterAreaSeriesModule } from 'igniteui-charts/igc-scatter-area-series-module';\r\n\r\nimport { IgcGeographicScatterAreaSeriesComponent } from './igc-geographic-scatter-area-series-component';\r\nimport { GeographicScatterAreaSeries } from './GeographicScatterAreaSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicScatterAreaSeriesModule {\r\n    public static register(): void {\r\nIgcScatterAreaSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicScatterAreaSeriesComponent\", IgcGeographicScatterAreaSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicScatterAreaSeries\", (<any>GeographicScatterAreaSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { IgcShapeDataSource } from \"igniteui-core/igc-shape-data-source\";\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcAssigningShapeStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-style-event-args';\r\nimport { IgcAssigningShapeMarkerStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-marker-style-event-args';\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from 'igniteui-charts/ShapeItemSearchMode';\r\n\r\n/**\r\n * Base class for series which render polygons on a map.\r\n*/\r\nexport abstract class IgcGeographicShapeSeriesBaseComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeriesBase {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesBaseComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesBaseComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    private _shapeDataSource: string;\r\n\t/**\r\n \t * Gets or sets the string path of the .shp portion of the Shapefile.\r\n\t*/\r\n    set shapeDataSource(value: string) {\r\n        this._shapeDataSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get shapeDataSource(): string {\r\n        return this._shapeDataSource;\r\n    }\r\n\r\n    private _databaseSource: string;\r\n\t/**\r\n\t * Gets or sets the string path of the .dbf portion of the Shapefile.\r\n\t*/\r\n    set databaseSource(value: string) {\r\n        this._databaseSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get databaseSource(): string {\r\n        return this._databaseSource;\r\n    }\r\n\r\n    private _currData: any = null;\r\n    private _onImportCompleted: any = null;\r\n    protected onUpdateDataSource(dataSource: any): any {\r\n        if (this._onImportCompleted == null) {\r\n            this._onImportCompleted = (s, e) => {\r\n                if (this._currData) {\r\n                    this._currData.i.importCompleted = delegateRemove(this._currData.i.importCompleted, this._onImportCompleted);\r\n                    var data = this._currData;\r\n                    this._currData = null;\r\n                    this.i.itemsSource = data.getPointData();\r\n                }\r\n            };\r\n        }\r\n        \r\n        if (dataSource && dataSource.getPointData) {\r\n            if (dataSource.count > 0) {\r\n                return dataSource.getPointData();\r\n            }\r\n            this._currData = dataSource;\r\n            this._currData.i.importCompleted = delegateCombine(this._currData.i.importCompleted, this._onImportCompleted);\r\n            return null;\r\n        }\r\n        return dataSource;\r\n    }\r\n\r\n    private _cachedShapeDataSource: IgcShapeDataSource;\r\n    private updateShapeDataSource() {\r\n        if (this._cachedShapeDataSource == null) {\r\n            this._cachedShapeDataSource = new IgcShapeDataSource();\r\n            this.onShapeDataSourceImportCompleted = this.onShapeDataSourceImportCompleted.bind(this);\r\n            this._cachedShapeDataSource.importCompleted = this.onShapeDataSourceImportCompleted;\r\n        }\r\n\r\n        this._cachedShapeDataSource.shapefileSource = this._shapeDataSource;\r\n       \tthis._cachedShapeDataSource.databaseSource = this._databaseSource;\r\n\r\n        if (this._shapeDataSource && this._databaseSource) {\r\n            this._cachedShapeDataSource.dataBind();\r\n        }\r\n    }\r\n\r\n    private onShapeDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedShapeDataSource.getPointData();\r\n    }\r\n\r\n\t/**\r\n\t * The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.\r\n\t * To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.\r\n\t*/\r\n\tget shapeMemberPath() : string {\r\n\t\treturn (this.i.q3 as string);\r\n\t}\r\n\tset shapeMemberPath(v: string) {\r\n\t\tthis.i.q3 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomShapeStyleAllowed() : boolean {\r\n\t\treturn (this.i.qs as boolean);\r\n\t}\r\n\tset isCustomShapeStyleAllowed(v: boolean) {\r\n\t\tthis.i.qs = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeStyleAllowed\", this.i.qs);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomShapeMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.qr as boolean);\r\n\t}\r\n\tset isCustomShapeMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.qr = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeMarkerStyleAllowed\", this.i.qr);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ShapeItemSearchMode {\r\n\t\treturn this.i.qk;\r\n\t}\r\n\tset itemSearchMode(v: ShapeItemSearchMode) {\r\n\t\tthis.i.qk = ensureEnum<ShapeItemSearchMode>(ShapeItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ShapeItemSearchMode>(ShapeItemSearchMode_$type, this.i.qk));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.qv as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.qv = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.qv);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the points threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchPointsThreshold() : number {\r\n\t\treturn (this.i.qu as number);\r\n\t}\r\n\tset itemSearchPointsThreshold(v: number) {\r\n\t\tthis.i.qu = +v;\r\n\t                                        this._a(\"itemSearchPointsThreshold\", this.i.qu);\r\n\t}\r\n\t/**\r\n\t * Set a shapefile datasource to use with the series.\r\n\t*/\r\n\tget shapefileDataSource() : IgcShapeDataSource {\r\n\t                                        const r = this.i.qn;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcShapeDataSource();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset shapefileDataSource(v: IgcShapeDataSource) {\r\n\t\tv == null ? this.i.qn = null : this.i.qn = v.i;\r\n\t}\r\n\t/**\r\n\t * The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.\r\n\t * In the case of GeographicPolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.\r\n\t*/\r\n\tget shapeFilterResolution() : number {\r\n\t\treturn (this.i.qt as number);\r\n\t}\r\n\tset shapeFilterResolution(v: number) {\r\n\t\tthis.i.qt = +v;\r\n\t                                        this._a(\"shapeFilterResolution\", this.i.qt);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.shapefileDataSource && (this.shapefileDataSource as any).name && (this.shapefileDataSource as any).name == name) { return this.shapefileDataSource; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n\r\n\t\r\n\t    private _assigningShapeStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void = null;\r\n\t    private _assigningShapeStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Style. Note, if using this event, or highlighting, its best to avoid use of ShapeStyle/StyleShape/ShapeStyleSelector.\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void {\r\n\treturn this._assigningShapeStyle;\r\n\t}\r\n\t    public set assigningShapeStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeStyle = delegateRemove(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);\r\n\t            this._assigningShapeStyle_wrapped = null;\r\n\t            this._assigningShapeStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeStyle = ev;\r\n\t        this._assigningShapeStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeStyle) {\r\n\t                        (this as any).beforeAssigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeStyle) {\r\n\t    this._assigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeStyle = delegateCombine(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningShapeMarkerStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningShapeMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeMarkerStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void {\r\n\treturn this._assigningShapeMarkerStyle;\r\n\t}\r\n\t    public set assigningShapeMarkerStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeMarkerStyle = delegateRemove(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);\r\n\t            this._assigningShapeMarkerStyle_wrapped = null;\r\n\t            this._assigningShapeMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeMarkerStyle = ev;\r\n\t        this._assigningShapeMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeMarkerStyle) {\r\n\t                        (this as any).beforeAssigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeMarkerStyle) {\r\n\t    this._assigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeMarkerStyle = delegateCombine(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);;\r\n\t    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, markDep } from \"igniteui-core/type\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesView, 'GeographicShapeSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicShapeSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ci = a;\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ci.q3 = \"points\";\r\n\t\t}\r\n\t}\r\n\tprotected ci: GeographicShapeSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ci.sn = Defaults.aj;\r\n\t\t\tthis.ci.g1 = Defaults.p;\r\n\t\t\tthis.ci.rm = Defaults.o;\r\n\t\t\tthis.ci.rj = Defaults.d;\r\n\t\t\tthis.ci.rh = Defaults.a;\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).uh = this.ci.sp;\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).ta = this.ci.rk;\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).tw = this.ci.r5;\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).td = this.ci.rm;\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).sw = this.ci.rg;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).tw = this.ci.r5;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).td = this.ci.rm;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).sw = this.ci.rg;\r\n\t}\r\n\tco(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).s5 = this.ci.rj;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).ud = this.ci.sm;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).ue = this.ci.sn;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).ug = this.ci.so;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).ta = this.ci.rk;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).uh = this.ci.sp;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicShapeSeries, 'GeographicShapeSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_d8(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicShapeSeries).$;\r\n\t}\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesView(this);\r\n\t}\r\n\trl: GeographicShapeSeriesView;\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.rl = <GeographicShapeSeriesView>a;\r\n\t}\r\n\tprotected p9(): Series {\r\n\t\tlet a = new ScatterPolygonSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.r2));\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.r3));\r\n\t\treturn a;\r\n\t}\r\n\tprivate r2(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprivate r3(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.qa);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\trk: StyleSelector;\r\n\tsp: Style;\r\n\trj: MarkerType;\r\n\tri: MarkerOutlineMode;\r\n\trh: MarkerFillMode;\r\n\tr5: DataTemplate;\r\n\tsm: Brush;\r\n\tsn: Brush;\r\n\tso: Style;\r\n\trm: number;\r\n\tf4(): number {\r\n\t\treturn this.rm;\r\n\t}\r\n\tpa(): Brush {\r\n\t\treturn this.sk;\r\n\t}\r\n\tpb(): Brush {\r\n\t\treturn this.sl;\r\n\t}\r\n\tnh(): DataTemplate {\r\n\t\treturn this.r4;\r\n\t}\r\n\ti0(): string {\r\n\t\tlet a = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.qa);\r\n\t\tif (a == null) {\r\n\t\t\treturn \"Unknown\";\r\n\t\t}\r\n\t\treturn a.i0();\r\n\t}\r\n\trg: CollisionAvoidanceType;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicShapeSeries.$$p[6]:\r\n\t\t\t(<ScatterPolygonSeries>this.qa).s3 = this.ri;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[5]:\r\n\t\t\t(<ScatterPolygonSeries>this.qa).sz = this.rh;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[9]:\r\n\t\t\tthis.rl.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[10]:\r\n\t\t\tthis.rl.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[4]:\r\n\t\t\tthis.rl.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[11]:\r\n\t\t\tthis.rl.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[3]:\r\n\t\t\tthis.rl.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[7]:\r\n\t\t\tthis.rl.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[8]:\r\n\t\t\tthis.rl.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[13]:\r\n\t\t\tthis.rl.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[12]:\r\n\t\t\tthis.rl.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected gx(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tr4: DataTemplate;\r\n\tsk: Brush;\r\n\tsl: Brush;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:sk:r6', [ (<any>Brush).$ ], 'ActualMarkerOutline:sl:r7', [ (<any>Brush).$ ], 'ActualMarkerTemplate:r4:r8', [ (<any>DataTemplate).$, null ], 'MarkerBrush:sm:r9', [ (<any>Brush).$ ], 'MarkerCollisionAvoidance:rg:sa', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'MarkerFillMode:rh:sb', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:ri:sc', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:sn:sd', [ (<any>Brush).$ ], 'MarkerStyle:so:se', [ (<any>Style).$ ], 'MarkerTemplate:r5:sf', [ (<any>DataTemplate).$, null ], 'MarkerThickness:rm:sg', [ 1, DeviceUtils.g(2) ], 'MarkerType:rj:sh', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, 2) ], 'ShapeStyle:sp:si', [ (<any>Style).$, null ], 'ShapeStyleSelector:rk:sj', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeries } from \"./GeographicShapeSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Series class which renders polygons as Paths, in a geographic context, based on lists of points in the ItemsSource.\r\n*/\r\nexport class IgcGeographicShapeSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicShapeSeries\r\n{\r\n\treturn new GeographicShapeSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-shape-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicShapeSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicShapeSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicShapeSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicShapeSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polygon shape.\r\n\t*/\r\n\tget isPolygon() : boolean {\r\n\t\treturn (this.i.d8 as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.sp ? (this.i.sp.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.sp.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.sp ? (this.i.sp.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.sp.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.sp ? (this.i.sp.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.sp.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.sp.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.sp ? (this.i.sp.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.sp.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.sp.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.sp) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.sp = new Style();\r\n\t\r\n\t                                }\r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.rj;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.rj = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.rj));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.ri;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.ri = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.ri));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker brush is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.rh;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.rh = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.rh));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.r5 as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.r5 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.sm);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.sm = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.sm));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.sn);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.sn = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.sn));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.rm as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.rm = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.rm);\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.rg;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.rg = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.rg));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.r4 as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.r4 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.sk);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.sk = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.sk));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.sl);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.sl = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.sl));\r\n\t}\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolygonSeriesModule } from 'igniteui-charts/igc-scatter-polygon-series-module';\r\n\r\nimport { IgcGeographicShapeSeriesComponent } from './igc-geographic-shape-series-component';\r\nimport { GeographicShapeSeries } from './GeographicShapeSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicShapeSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolygonSeriesModule.register();\r\n        IgcGeographicShapeSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicShapeSeriesComponent\", IgcGeographicShapeSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicShapeSeries\", (<any>GeographicShapeSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterSeries } from \"igniteui-charts/ScatterSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, enumGetBox, EnumUtil, Boolean_$type, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicSymbolSeriesView, 'GeographicSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicSymbolSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tlet a = <ScatterSeries>this.ce.qa;\r\n\t\tsuper.b2();\r\n\t\ta.ti = this.ce.ry;\r\n\t\ta.tq = this.ce.rw;\r\n\t\ta.qh = this.ce.qk;\r\n\t\ta.q3 = this.ce.q0;\r\n\t\ta.qm = this.ce.ql;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).ti = this.ce.ry;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).tq = this.ce.rw;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).qh = this.ce.qk;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).q3 = this.ce.q0;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).qm = this.ce.ql;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).s2 = this.ce.qm;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).xAxis = (<XamGeographicMap>this.ce.cd).tw;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).yAxis = (<XamGeographicMap>this.ce.cd).ty;\r\n\t}\r\n\tco(): void {\r\n\t\tlet a = <ScatterSeries>this.ce.qa;\r\n\t\tif (this.ce.cd == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.ce.cd).tw;\r\n\t\ta.yAxis = (<XamGeographicMap>this.ce.cd).ty;\r\n\t}\r\n\tci(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).rt = this.ce.ri;\r\n\t}\r\n\tch(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).rj = this.ce.re;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).rk = this.ce.rf;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicSymbolSeries, 'GeographicSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected get_c4(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicSymbolSeries).$;\r\n\t}\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicSymbolSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.rl = <GeographicSymbolSeriesView>a;\r\n\t}\r\n\trl: GeographicSymbolSeriesView;\r\n\tprotected gx(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected p9(): Series {\r\n\t\treturn new ScatterSeries();\r\n\t}\r\n\tprivate rk: ScatterSeries = null;\r\n\trw: string;\r\n\try: string;\r\n\tri: CollisionAvoidanceType;\r\n\trp: boolean;\r\n\tro: boolean;\r\n\tprotected rn: boolean = false;\r\n\tprotected rm: boolean = false;\r\n\tprotected get_dy(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\trj: ScatterItemSearchMode;\r\n\trr: number;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.rl.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[5]:\r\n\t\t\tthis.rl.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[4]:\r\n\t\t\tthis.rl.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[6]:\r\n\t\t\tthis.rl.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.rl.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.rl.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[1]:\r\n\t\t\t(<ScatterBase>this.qa).so = this.rp;\r\n\t\t\tthis.rn = this.rp;\r\n\t\t\tif (this.rp) {\r\n\t\t\t\tlet e = (<ScatterBase>this.qa);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.r3));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.qa);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.r3));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[0]:\r\n\t\t\t(<ScatterBase>this.qa).sn = this.ro;\r\n\t\t\tthis.rm = this.ro;\r\n\t\t\tif (this.rp) {\r\n\t\t\t\tlet g = (<ScatterBase>this.qa);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.r2));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.qa);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.r2));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[2]:\r\n\t\t\t(<ScatterBase>this.qa).sd = this.rj;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.qa).s1 = this.rr;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate r3(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate r2(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\trq: boolean;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicSymbolSeries, 'raisePropertyChanged', [ 'IsCustomScatterMarkerStyleAllowed:ro:r4', [ 0, false ], 'IsCustomScatterStyleAllowed:rp:r5', [ 0, false ], 'ItemSearchMode:rj:r6', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:rr:r7', [ 1, 10000 ], 'LatitudeMemberPath:rw:r8', [ 2, null ], 'LongitudeMemberPath:ry:r9', [ 2, null ], 'MarkerCollisionAvoidance:ri:sa', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'UseLightweightMarkers:rq:sb', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicSymbolSeries } from \"./GeographicSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicSymbolSeries\r\n{\r\n\treturn new GeographicSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.c4 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.rw as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.rw = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.ry as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.ry = v;\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.ri;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.ri = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.ri));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.rp as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.rp = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.rp);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.ro as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.ro = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.ro);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.rj;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.rj = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.rj));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.rr as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.rr = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.rr);\r\n\t}\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterSeriesModule } from 'igniteui-charts/igc-scatter-series-module';\r\n\r\nimport { IgcGeographicSymbolSeriesComponent } from './igc-geographic-symbol-series-component';\r\nimport { GeographicSymbolSeries } from './GeographicSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcScatterSeriesModule.register();\r\n        IgcGeographicSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicSymbolSeriesComponent\", IgcGeographicSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicSymbolSeries\", (<any>GeographicSymbolSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, EventArgs, runOn, delegateRemove, delegateCombine, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicTileSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicTileSeries, 'GeographicTileSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_ej(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicTileSeries).$;\r\n\t}\r\n\tget ri(): GeographicMapImagery {\r\n\t\treturn this.rh;\r\n\t}\r\n\tset ri(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.ri;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.ri;\r\n\t\t\tthis.rh = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate rh: GeographicMapImagery = null;\r\n\trm(): void {\r\n\t\tif (this.ri != null) {\r\n\t\t\tthis.ri.clearTileCache();\r\n\t\t}\r\n\t}\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\tif (this.qa != null) {\r\n\t\t\t\t(<TileSeries>this.qa).sz = this.ri;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate rg: TileSeries = null;\r\n\tprotected qf(): void {\r\n\t\tsuper.qf();\r\n\t\t(<TileSeries>this.qa).sz = this.ri;\r\n\t\tif (this.rg != null) {\r\n\t\t\tlet a = this.rg;\r\n\t\t\ta.imageTilesReady = delegateRemove(a.imageTilesReady, runOn(this, this.rl));\r\n\t\t}\r\n\t\tthis.rg = <TileSeries>this.qa;\r\n\t\tif (this.rg != null) {\r\n\t\t\tlet b = this.rg;\r\n\t\t\tb.imageTilesReady = delegateCombine(b.imageTilesReady, runOn(this, this.rl));\r\n\t\t}\r\n\t}\r\n\tprotected p9(): Series {\r\n\t\treturn new TileSeries();\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate rl(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicTileSeries } from \"./GeographicTileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class used for displaying a tile set, and using shapes to define the areas that should be rendered.\r\n*/\r\nexport class IgcGeographicTileSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicTileSeries\r\n{\r\n\treturn new GeographicTileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicTileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicTileSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.ej as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        const r = this.i.ri;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.ri = null : this.i.ri = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.rm();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcTileSeriesModule } from './igc-tile-series-module';\r\n\r\nimport { IgcGeographicTileSeriesComponent } from './igc-geographic-tile-series-component';\r\nimport { GeographicTileSeries } from './GeographicTileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicTileSeriesModule {\r\n    public static register(): void {\r\nIgcTileSeriesModule.register();\r\n        IgcGeographicTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicTileSeriesComponent\", IgcGeographicTileSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicTileSeries\", (<any>GeographicTileSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from \"igniteui-core/IgRect\"\r\nimport { IgSize } from \"igniteui-core/IgSize\"\r\nimport { IgPoint } from \"igniteui-core/IgPoint\"\r\nimport { IgDataTemplate } from \"igniteui-core/IgDataTemplate\"\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, initializePropertiesFromCss, NamePatcher } from \"igniteui-core/componentUtil\";\r\nimport { IgcTriangulationDataSource } from \"igniteui-core/igc-triangulation-data-source\";\r\nimport { IEnumerable } from \"igniteui-core/type\";\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\n\r\n/**\r\n * Base class for geographic series which triangulate XY data prior to rendering.\r\n*/\r\nexport abstract class IgcGeographicXYTriangulatingSeriesComponent extends IgcGeographicMapSeriesHostComponent {\r\n\r\n\r\n    public get i(): GeographicXYTriangulatingSeries {\r\n        return this._implementation;\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    private static _observedAttributesIgcGeographicXYTriangulatingSeriesComponent: string[] = null;\r\n    static get observedAttributes() {\r\n        if (IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent == null) {\r\n            let names = getAllPropertyNames(IgcGeographicXYTriangulatingSeriesComponent);\r\n            for (let i = 0; i < names.length; i++) {\r\n                names[i] = toSpinal(names[i]);\r\n            }\r\n            IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent = names;\r\n        }\r\n        return IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent;\r\n    }\r\n\r\n    private _triangulationDataSource: string;\r\n\t/**\r\n\t * Gets or sets the string path specifying the location of the Itf file.\r\n\t*/\r\n    set triangulationDataSource(value: string) {\r\n        this._triangulationDataSource = value;\r\n        this.updateTriangulationDataSource();\r\n    }\r\n    get triangulationDataSource(): string {\r\n        return this._triangulationDataSource;\r\n    }\r\n\r\n    private _cachedTriangulationDataSource: IgcTriangulationDataSource;\r\n    private updateTriangulationDataSource() {\r\n        if (this._cachedTriangulationDataSource == null) {\r\n            this._cachedTriangulationDataSource = new IgcTriangulationDataSource();\r\n            this.onTriangulationDataSourceImportCompleted = this.onTriangulationDataSourceImportCompleted.bind(this);\r\n            this._cachedTriangulationDataSource.importCompleted = this.onTriangulationDataSourceImportCompleted;\r\n        }\r\n\r\n       \tthis._cachedTriangulationDataSource.source = this._triangulationDataSource;\r\n    }\r\n\r\n    private onTriangulationDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedTriangulationDataSource.getPointData();\r\n        this.trianglesSource = <any[]><any>this._cachedTriangulationDataSource.getTriangleData();\r\n    }\r\n\r\n\t\t/**\r\n\t * The name of the property from which to extract the Longitude for each item in the ItemsSource.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.qm as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.qm = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to extract the Latitude for each item in the ItemsSource.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.qk as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.qk = v;\r\n\t}\r\n\t/**\r\n\t * The source of triangulation data.\r\n\t * This property is optional.  If it is left as null, the triangulation will be created based on the items in the ItemsSource.  Triangulation is a demanding operation, so the runtime performance will be better when specifying a TriangulationSource, especially when a large number of data items are present.\r\n\t*/\r\n\tget trianglesSource() : any[] {\r\n\t\treturn (this.i.qj as any) as any[];\r\n\t}\r\n\tset trianglesSource(v: any[]) {\r\n\t                                        this.i.qj = (v as any) as IEnumerable;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the first vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath1() : string {\r\n\t\treturn (this.i.qp as string);\r\n\t}\r\n\tset triangleVertexMemberPath1(v: string) {\r\n\t\tthis.i.qp = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the second vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath2() : string {\r\n\t\treturn (this.i.qr as string);\r\n\t}\r\n\tset triangleVertexMemberPath2(v: string) {\r\n\t\tthis.i.qr = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the third vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath3() : string {\r\n\t\treturn (this.i.qt as string);\r\n\t}\r\n\tset triangleVertexMemberPath3(v: string) {\r\n\t\tthis.i.qt = v;\r\n\t}\r\n\r\n    \r\n\r\n    \r\n\r\n\t\r\n\r\n    \r\n\r\n    //@@ZoneRunner\r\n    \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImageTilesReadyEventArgs as ImageTilesReadyEventArgs_internal } from \"./ImageTilesReadyEventArgs\";\r\n\r\nexport class IgcImageTilesReadyEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImageTilesReadyEventArgs_internal\r\n{\r\n\treturn new ImageTilesReadyEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImageTilesReadyEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { OpenStreetMapImagery as OpenStreetMapImagery_internal } from \"./OpenStreetMapImagery\";\r\n\r\n/**\r\n * UI element class used to display OpenStreetMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcOpenStreetMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : OpenStreetMapImagery_internal\r\n{\r\n\treturn new OpenStreetMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : OpenStreetMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the tile path URL.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcOpenStreetMapImagery } from './igc-open-street-map-imagery';\r\nimport { OpenStreetMapImagery } from './OpenStreetMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcOpenStreetMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcOpenStreetMapImagery\", IgcOpenStreetMapImagery);\r\n        TypeRegistrar.register(\"OpenStreetMapImagery\", (<any>OpenStreetMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { ITileGenerator, ITileGenerator_$type } from \"igniteui-core/ITileGenerator\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { TileGeneratorTileSource } from \"igniteui-core/TileGeneratorTileSource\";\r\nimport { Base, Type, runOn, delegateCombine, markType, markDep } from \"igniteui-core/type\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { TileImageCreatedEventArgs } from \"igniteui-core/TileImageCreatedEventArgs\";\r\nimport { TileImageZoomChangingEventArgs } from \"igniteui-core/TileImageZoomChangingEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { stringReplace } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileGeneratorMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(TileGeneratorMapImagery, 'TileGeneratorMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new TileGeneratorTileSource());\r\n\t\tthis.downloadingImage = delegateCombine(this.downloadingImage, runOn(this, this.br));\r\n\t\tthis.cancellingImage = delegateCombine(this.cancellingImage, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.cancelTile(d, e, f);\r\n\t\t}\r\n\t}\r\n\tprivate br(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tb.uri = null;\r\n\t\tlet img_ = b.image;\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.getTile(d, e, f, (g: any, h: TileImageCreatedEventArgs) => this.deferralHandler.deferAction(() => img_.src = h.url), (g: any, h: TileImageCreatedEventArgs) => {\r\n\t\t\t}, (g: any, h: TileImageZoomChangingEventArgs) => {\r\n\t\t\t}, img_);\r\n\t\t}\r\n\t}\r\n\ttileGenerator: ITileGenerator;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, TileGeneratorMapImagery, 'ba', [ 'TileGenerator', [ ITileGenerator_$type, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { TileGeneratorMapImagery as TileGeneratorMapImagery_internal } from \"./TileGeneratorMapImagery\";\r\nimport { ITileGenerator } from \"igniteui-core/ITileGenerator\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcTileGeneratorMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : TileGeneratorMapImagery_internal\r\n{\r\n\treturn new TileGeneratorMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileGeneratorMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget tileGenerator() : ITileGenerator {\r\n\t\treturn this.i.tileGenerator as ITileGenerator;\r\n\t}\r\n\tset tileGenerator(v: ITileGenerator) {\r\n\t                                        this.i.tileGenerator = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileGeneratorMapImagery } from './igc-tile-generator-map-imagery';\r\nimport { TileGeneratorMapImagery } from './TileGeneratorMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileGeneratorMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcTileGeneratorMapImagery\", IgcTileGeneratorMapImagery);\r\n        TypeRegistrar.register(\"TileGeneratorMapImagery\", (<any>TileGeneratorMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcShapeSeriesBaseComponent } from \"igniteui-charts/igc-shape-series-base-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a tile series class that can render imagery tiles\r\n*/\r\nexport class IgcTileSeriesComponent extends IgcShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : TileSeries\r\n{\r\n\treturn new TileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcTileSeriesComponent.htmlTagName,\r\n\t                            IgcTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.ej as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        const r = this.i.sz;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.sz = null : this.i.sz = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Defers rendering of the series\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileSeriesComponent } from './igc-tile-series-component';\r\nimport { TileSeries } from './TileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileSeriesModule {\r\n    public static register(): void {\r\n        IgcTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcTileSeriesComponent\", IgcTileSeriesComponent);\r\n        TypeRegistrar.register(\"TileSeries\", (<any>TileSeries).$type);\r\n    }\r\n}\r\n"],"names":["GeographicMapSeriesHost","ln","super","this","qa","constructor","p8","p9","get_dw","hy","a","b","c","js","c1","d","ag","be","qf","get_hasMarkers","hasMarkers","hostedSeries_","externalObject","_implementation","k5","qb","b2","aw","ay","ax","az","hv","h0","hl","hj","gl","pq","pz","ak","p0","al","p1","p2","gh","pm","gj","po","pr","gm","pn","gi","pp","gk","hg","gc","f8","hw","bx","HostSeriesView","l2","$","qc","qh","h","l7","cd","op","lk","ma","p3","index","lb","hq","e","S","actualWindowRectChanged","qg","f","qe","b8","b3","ca","b7","hs_","v_","_visibility","visibility","em","expectFunctions","cc","b1","b9","by","bz","gs","b6","f1","b0","cb","title","b4","b5","legend","at","s9","width","v2_","ml","mk","mv","get_coercionMethods","_coercionMethods","set_coercionMethods","coercionMethods","la","hu","k2","$t","raisePropertyChanged","oldValue","newValue","ar","p7","itemsSource","o7","pc","bt","gv","ho","_opacity","g1","et","legendItemBadgeShape","a9","o3","o6","GeographicMarkerSeries","propertyUpdated","qy","nh","qz","pa","rc","pb","rd","f4","ql","i0","propertyName","q1","ri","rh","$$p","rj","re","rk","rf","qj","qi","qk","q3","q0","qm","s2","B","GeographicShapeSeriesBase","qq","qp","assigningShapeStyle","assigningShapeMarkerStyle","qo","GeographicShapeSeriesBaseView","get_dy","get_c2","cf","ch","cg","q9","qs","q6","q8","qr","g","q5","qv","rq","qu","rr","i","importCompleted","q7","j","count","ext_","qn","getPointData","get_e5","set_e5","ce","r1","tw","ty","rn","qt","ImageTilesReadyEventArgs","ImagesChangedEventArgs","MapBackgroundTilingMode","MapBackgroundTilingMode_$type","MapResizeBehavior","MapResizeBehavior_$type","TileSeries","ShapeSeriesBase","get_ej","sx","sw","imageTilesReady","s0","s1","ab","TileSeriesView","sv","get_rb","sz","sy","propertyChanged","s4","de","ls","s5","deferralHandler","dd","type","XamGeographicMap","geographicMap","s7","da","dh","w","lu","df","register","unRegister","deferredRefresh","deferAction","hb","setTimeout","window","m8","dg","mm","s6","getViewInfo","fe","item","a1","cx","sf","ao","isEmpty","height","k0","db","IMapRenderDeferralHandler","ShapeSeriesViewBase","c7","di","GeometryGroup","c9","c8","as","q","Defaults","add","c2","c3","cl","cj","cr","clear","cq","aq","windowRect","createElement","get2DCanvasContext","RenderingContext","CanvasViewRenderer","setAttribute","bu","toString","bd","imagesChanged","dc","bf","a6","k","aa","r","clip","Math","round","left","top","o","getNativeElement","z","SphericalMercatorVerticalScaler","VerticalLinearScaler","getMercatorUnscaledValue","au","p","getMercatorScaledValue1","af","values_","Array","isArray","v","x","y","m","n","s","t","u","ac","ah","sin","log","ai","aj","l3","p4","am","Rect","getMercatorScaledValue3","getMercatorScaledValue2","static","exp","asin","SphericalMercatorHorizontalScaler","HorizontalLinearScaler","l","SeriesViewer","ul","ua","t2","uh","vs","tz","tv","tx","t1","vo","$type","NaN","vv","ug","t9","vu","vt","bottom","backgroundContent","OpenStreetMapImagery","$ret","NumericXAxis","bh","nj","NumericYAxis","u3","va","provideContainer","provideRenderer","t8","fv","er","ue","es","t5","t3","t4","vx","n8","v1","v9","v7","right","getZoomRectFromGeoRect","getZoomFromGeographicRect","vd","tp","vc","vz","vy","ScalerParams","vw","to","td","ei","intersect","getZoomFromGeographicPoints","v3","tc","el","vp","l6","vq","e3","vr","u0","GeographicMapImagery","clearTileCache","u6","fg","u8","ee","series","vb","t7","u7","ph","ta","tk","ud","floor","ceil","abs","v0","d6","lh","Tuple$2","gg","MathUtil","tb","v2","ct","XamGeographicMapView","u2","ns","n3","o4","ve","ui","gn","min","e8","ub","n4","isHorizontalWrappingEnabled","u4","fu","fr","u9","uc","fs","uj","ff","pf","gf","getFontInfo","fo","se","fw","getFontBrush","fx","ow","ItfConverter","triangulationSource","points","triangles","om","o2","lr","u1","um","ChartVisualData","axes","add1","_inner","name","contentArea","RectData","centralArea","plotArea","tg","u5","v8","vf","uf","t6","DependencyProperty","PropertyMetadata","Control","an","ap","cancellingImage","downloadingImage","bb","GeographicMapImageryView","a5","a4","a3","a2","referer","bj","userAgent","av","bg","ba","geographicMapProperty","a7","bs","bn","cm","bc","a8","XamMultiScaleImage","Size","GeographicXYTriangulatingSeriesView","ra","trianglesSource","q2","ci","ck","GeographicScatterAreaSeriesView","q4","sh","r5","cn","co","SeriesViewerView","fn","fz","fp","r9","bk","bv","get_ap","d4","BrushCollection","du","ae","dv","fy","remove","ft","d1","fd","_stroke","fq","OpenStreetMapTileSource","tilePath","tilePathProperty","bq","setTilePathUrl","br","GeographicXYTriangulatingSeries","GeographicScatterAreaSeries","get_dd","triangulationStatusChanged","rb","r4","mz","ScatterAreaSeries","ColorScale","BingMapsImageryStyle","IgcSubDomainsCollection","IgCollection","list","length","_createInnerColl","coll","SyncableObservableCollection$2","compare","ext","int","comp","equals","createTo","createFrom","BingMapsImageryStyle_$type","SubDomainsCollection","ObservableCollection$1","_rest","BingMapsMapImageryView","subDomains","actualTilePath","actualSubDomains","cultureName","BingMapsMapImagery","BingMapsTileSource","_pendingBingRequest_","_isInitialized","getResponseCompleted","bind","bp","actualBingImageryRestUri","isInitialized","bingImageryRestUri","requestMapSettings","bw","isDeferredLoad","cp","string","apiKey","Uri","imageryStyle","url_","data_","resourceSets_","JSON","parse","resourceSets","resources_","resources","imageUrl_","subDomains_","List$1","imageUrlSubdomains","collectionChanged","IgcBingMapsMapImagery","createImplementation","_subDomains","_actualSubDomains","innerColl","_fromInner","_setSyncTarget","_fromOuter","syncColl","SyncableObservableCollection$1","IgcBingMapsMapImageryModule","IgcCustomMapImagery","_getTileImageUri","_getTileImageUri_wrapped","getTileImageUri","ev","outerArgs","_provideImplementation","beforeGetTileImageUri","CustomMapImagery","IgcCustomMapImageryModule","GeographicContourLineSeriesView","GeographicContourLineSeries","get_d1","ScatterContourSeries","r2","pg","gt","ValueBrushScale","ContourValueResolver","C","IgcGeographicContourLineSeriesComponent","_triangulationStatusChanged","_triangulationStatusChanged_wrapped","connectedCallback","_attached","_flushQueuedAttributes","disconnectedCallback","observedAttributes","_observedAttributesIgcGeographicContourLineSeriesComponent","names","_isElementRegistered","htmlTagName","isLineContour","valueMemberPath","fillScale","_stylingContainer","_styling","actualFillScale","valueResolver","I","findByName","container","component","parent","_inStyling","beforeTriangulationStatusChanged","IgcGeographicContourLineSeriesModule","IgcScatterContourSeriesModule","GeographicHighDensityScatterSeriesView","HighDensityScatterSeries","si","sq","qx","rp","tn","GeographicHighDensityScatterSeries","gw","get_d6","progressiveLoadStatusChanged","currentStatus","Color","IgcGeographicHighDensityScatterSeriesComponent","_progressiveLoadStatusChanged","_progressiveLoadStatusChanged_wrapped","_observedAttributesIgcGeographicHighDensityScatterSeriesComponent","isPixel","latitudeMemberPath","longitudeMemberPath","useBruteForce","_a","progressiveLoad","mouseOverEnabled","heatMinimum","heatMaximum","heatMinimumColor","heatMaximumColor","pointExtent","progressiveStatus","beforeProgressiveLoadStatusChanged","IgcGeographicHighDensityScatterSeriesModule","IgcHighDensityScatterSeriesModule","ArcGISOnlineMapImagery","ArcGISOnlineTileSource","_pendingTokenRequest_","_pendingMapServerRequest_","userToken","getResponseCompleted_MapServerResponse","getResponseCompleted_TokenResponse","mapServerUri","mapServerUriProperty","userName","userNameProperty","password","passwordProperty","userTokenProperty","isMapPublic","isMapPublicProperty","defaultTokenTimeout","tokenGenerationEndPoint","refererUri","acquireNewToken","substr","token","tileInfo","levelOfDetail","lods","IgcArcGISOnlineMapImagery","IgcGeographicMapComponent","value","_height","style","notifyContainerResized","_width","_chart","undefined","_series","_innerColl","addListener","sender","_seriesAdapter","action","NotifyCollectionChangedAction","addManualItem","newItems","removeManualItemAt","oldStartingIndex","insertManualItem","newStartingIndex","clearManualItems","contentSeries","actualSeries","_dataSource","_disconnected","_defaultTooltips","_imageTilesReady","_imageTilesReady_wrapped","Object","getPrototypeOf","_renderer","document","DataChartStylingDefaults","_container","updateRoot","setStyleProperty","nativeElement","_wrapper","chart","owner","_provideRenderer","provideData","parentElement","_ensureDefaultTooltip","_ensureTooltipCreated","MutationObserver","mutation","updateContentChildren","observe","childList","addSizeWatcher","destroy","dataSource","bindData","currSeries","children","push","notifyContentChanged","onDetachedFromUI","onAttachedToUI","classList","appendChild","rootWrapper","display","afterContentInit","onContentReady","_onDefaultTooltipsReady","createTooltip","ele","wrapper","updateToolTip","hideToolTip","showDefaultTooltip","self","isSubContent","removeChild","context","_observedAttributesIgcGeographicMapComponent","zoomable","resizeBehavior","backgroundTilingMode","useWorldRectForZoomBounds","suppressZoomResetOnWorldRectChange","worldRect","actualWorldRect","xAxis","yAxis","isMap","ej","windowScale","actualWindowScale","zoomIsReady","getCurrentActualWorldRect","iv","geographic","updateZoomWindow","zoomWindow","updateWorldRect","convertGeographicToZoom","extraPixelPadding","northWest","southEast","getGeographicFromZoom","getGeographicPoint","pixelCoordinate","getPixelPoint","geographicCoordinate","getWindowPoint","styleUpdated","getActualWindowScaleHorizontal","getActualWindowScaleVertical","exportVisualData","zoomToGeographic","beforeImageTilesReady","IgcGeographicMapCoreModule","IgcOpenStreetMapImageryModule","IgcImagesChangedEventArgs","onImplementationCreated","IgcGeographicMapImagery","internal","externalName","_imagesChanged","_imagesChanged_wrapped","_cancellingImage","_cancellingImage_wrapped","_downloadingImage","_downloadingImage_wrapped","opacity","findEphemera","indexOf","beforeImagesChanged","beforeCancellingImage","beforeDownloadingImage","IgcGeographicMapModule","IgcGeographicShapeSeriesModule","IgcGeographicPolylineSeriesModule","IgcTileGeneratorMapImageryModule","IgcHeatTileGeneratorModule","IgcGeographicTileSeriesModule","IgcSizeScaleModule","IgcValueBrushScaleModule","IgcCustomPaletteColorScaleModule","IgcGeographicProportionalSymbolSeriesModule","IgcGeographicSymbolSeriesModule","IgcGeographicScatterAreaSeriesModule","IgcShapeDataSourceModule","IgcGeographicMapSeriesHostComponent","_observedAttributesIgcGeographicMapSeriesHostComponent","isGeographic","dw","visibleFromScale","notifyIndexedPropertiesChanged","getItemValue","memberPathName","getItem","world","getPreviousOrExactIndex","skipUnknowns","getNextOrExactIndex","getSeriesValue","useInterpolation","getSeriesValuePosition","getSeriesValueBoundingBox","getSeriesValueMarkerBoundingBox","getSeriesHighValue","getSeriesHighValuePosition","getSeriesLowValue","getSeriesLowValuePosition","getSeriesValuePositionFromSeriesPixel","mouse","getSeriesValueFromSeriesPixel","getItemSpan","renderSeries","animate","IgcGeographicMarkerSeriesComponent","_observedAttributesIgcGeographicMarkerSeriesComponent","markerType","markerThickness","markerOutlineMode","markerFillMode","markerTemplate","markerBrush","markerOutline","maximumMarkers","actualMarkerTemplate","actualMarkerBrush","actualMarkerOutline","GeographicPolylineSeriesView","rg","ro","GeographicPolylineSeries","get_d9","styleShape","ScatterPolylineSeries","rl","Style","StyleSelector","IgcGeographicPolylineSeriesComponent","_styleShape","_styleShape_wrapped","_observedAttributesIgcGeographicPolylineSeriesComponent","isPolyline","d9","shapeFill","fill","ensureShapeStyle","shapeStroke","stroke","shapeStrokeThickness","strokeThickness","shapeOpacity","beforeStyleShape","IgcScatterPolylineSeriesModule","GeographicProportionalSymbolSeriesView","ti","tq","r7","vl","rt","wb","rx","vj","vk","rs","rv","ru","cs","cv","cw","cu","cy","cz","GeographicProportionalSymbolSeries","get_c4","assigningScatterStyle","assigningScatterMarkerStyle","rm","gx","BubbleSeries","so","sj","sn","sd","rw","BrushScale","ScatterItemSearchMode","SizeScale","IgcGeographicProportionalSymbolSeriesComponent","_assigningScatterStyle","_assigningScatterStyle_wrapped","_assigningScatterMarkerStyle","_assigningScatterMarkerStyle_wrapped","_observedAttributesIgcGeographicProportionalSymbolSeriesComponent","hasOnlyMarkers","c4","radiusMemberPath","radiusScale","labelMemberPath","fillMemberPath","fillScaleUseGlobalValues","markerOutlineUsesFillScale","markerOutlineBrightness","markerBrushBrightness","radiusScaleUseGlobalValues","isCustomScatterStyleAllowed","isCustomScatterMarkerStyleAllowed","itemSearchMode","itemSearchThreshold","beforeAssigningScatterStyle","beforeAssigningScatterMarkerStyle","IgcBubbleSeriesModule","IgcGeographicScatterAreaSeriesComponent","_observedAttributesIgcGeographicScatterAreaSeriesComponent","isArea","colorMemberPath","colorScale","actualColorScale","updateActualColorScale","IgcScatterAreaSeriesModule","IgcGeographicShapeSeriesBaseComponent","_currData","_onImportCompleted","_assigningShapeStyle","_assigningShapeStyle_wrapped","_assigningShapeMarkerStyle","_assigningShapeMarkerStyle_wrapped","_observedAttributesIgcGeographicShapeSeriesBaseComponent","shapeDataSource","_shapeDataSource","updateShapeDataSource","databaseSource","_databaseSource","onUpdateDataSource","data","_cachedShapeDataSource","onShapeDataSourceImportCompleted","shapefileSource","dataBind","shapeMemberPath","isCustomShapeStyleAllowed","isCustomShapeMarkerStyleAllowed","itemSearchPointsThreshold","shapefileDataSource","setNativeElement","shapeFilterResolution","beforeAssigningShapeStyle","beforeAssigningShapeMarkerStyle","GeographicShapeSeriesView","sp","sm","GeographicShapeSeries","get_d8","ScatterPolygonSeries","r3","sk","sl","s3","Brush","DataTemplate","CollisionAvoidanceType","MarkerFillMode","MarkerOutlineMode","DeviceUtils","MarkerType","IgcGeographicShapeSeriesComponent","_observedAttributesIgcGeographicShapeSeriesComponent","isPolygon","d8","markerCollisionAvoidance","IgcScatterPolygonSeriesModule","GeographicSymbolSeriesView","ry","GeographicSymbolSeries","ScatterSeries","IgcGeographicSymbolSeriesComponent","_observedAttributesIgcGeographicSymbolSeriesComponent","IgcScatterSeriesModule","GeographicTileSeries","IgcGeographicTileSeriesComponent","_observedAttributesIgcGeographicTileSeriesComponent","isTile","tileImagery","IgcTileSeriesModule","IgcGeographicXYTriangulatingSeriesComponent","_observedAttributesIgcGeographicXYTriangulatingSeriesComponent","triangulationDataSource","_triangulationDataSource","updateTriangulationDataSource","_cachedTriangulationDataSource","onTriangulationDataSourceImportCompleted","source","getTriangleData","triangleVertexMemberPath1","triangleVertexMemberPath2","triangleVertexMemberPath3","IgcImageTilesReadyEventArgs","IgcOpenStreetMapImagery","TileGeneratorMapImagery","TileGeneratorTileSource","uri","split","parseInt","tileGenerator","cancelTile","img_","image","getTile","src","url","ITileGenerator","IgcTileGeneratorMapImagery","IgcTileSeriesComponent","_observedAttributesIgcTileSeriesComponent"],"sourceRoot":""}