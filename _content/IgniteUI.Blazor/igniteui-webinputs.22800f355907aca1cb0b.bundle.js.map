{"version":3,"file":"igniteui-webinputs.22800f355907aca1cb0b.bundle.js","mappings":"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","sources":["webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerPaneType.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/SplitPaneOrientation.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/UnpinnedLocation.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerPoint.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerPane_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-pane-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-point.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-split-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-content-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-document-host-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-content-pane-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-group-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DragService.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-drag-service.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerShowHeaderIconOnHover.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/TabHeaderElement.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-header-element.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-split-pane-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/SplitPaneCollection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerLayout.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-layout.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerResourceStrings.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-resource-strings.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/LayoutChangeEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-layout-change-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManager.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-split-pane-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-content-pane-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-document-host-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-group-pane-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-header-element-module.ts"],"sourcesContent":["/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum DockManagerPaneType {\r\n\tSplitPane = 0,\r\n\tContentPane = 1,\r\n\tTabGroupPane = 2,\r\n\tDocumentHost = 3\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let DockManagerPaneType_$type = markEnum('DockManagerPaneType', 'SplitPane,0|ContentPane,1|TabGroupPane,2|DocumentHost,3');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum SplitPaneOrientation {\r\n\tHorizontal = 0,\r\n\tVertical = 1\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let SplitPaneOrientation_$type = markEnum('SplitPaneOrientation', 'Horizontal,0|Vertical,1');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum UnpinnedLocation {\r\n\tTop = 0,\r\n\tBottom = 1,\r\n\tLeft = 2,\r\n\tRight = 3\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let UnpinnedLocation_$type = markEnum('UnpinnedLocation', 'Top,0|Bottom,1|Left,2|Right,3');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerPoint extends Base {\r\n\tstatic $t: Type = markType(DockManagerPoint, 'DockManagerPoint');\r\n\tprivate a: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get b(): WCNativeHelper {\r\n\t\treturn this.a;\r\n\t}\r\n\tprivate e: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.e;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.e = a;\r\n\t\tthis.a.l = this.e;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget c(): number {\r\n\t\tlet ret_ = this.b.k(\"x\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset c(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"x\", value_);\r\n\t}\r\n\tget d(): number {\r\n\t\tlet ret_ = this.b.k(\"y\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset d(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"y\", value_);\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType, enumGetBox, EnumUtil } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { UnpinnedLocation, UnpinnedLocation_$type } from \"./UnpinnedLocation\";\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { SplitPaneOrientation, SplitPaneOrientation_$type } from \"./SplitPaneOrientation\";\r\nimport { DockManagerPoint } from \"./DockManagerPoint\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class DockManagerPane extends Base {\r\n\tstatic $t: Type = markType(DockManagerPane, 'DockManagerPane');\r\n\tprivate ___mustPassByValue: boolean = true;\r\n\tprotected abstract b(): WCNativeHelper;\r\n\tget d(): string {\r\n\t\tlet ret_ = this.b().k(\"name\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset d(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b().s(\"name\", value_);\r\n\t}\r\n\tstatic createFromNative(native_: any): DockManagerPane {\r\n\t\tif (native_ == null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet a: string = <string>(native_.type);\r\n\t\tif (a == null || a == undefined) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tswitch (a.toLowerCase()) {\r\n\t\t\tcase \"splitpane\":\r\n\t\t\t{\r\n\t\t\t\tlet b = new SplitPane();\r\n\t\t\t\tb.setNativeElement(native_);\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"contentpane\":\r\n\t\t\t{\r\n\t\t\t\tlet c = new ContentPane();\r\n\t\t\t\tc.setNativeElement(native_);\r\n\t\t\t\treturn c;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"tabgrouppane\":\r\n\t\t\t{\r\n\t\t\t\tlet d = new TabGroupPane();\r\n\t\t\t\td.setNativeElement(native_);\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"documenthost\":\r\n\t\t\t{\r\n\t\t\t\tlet e = new DocumentHost();\r\n\t\t\t\te.setNativeElement(native_);\r\n\t\t\t\treturn e;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DocumentHost extends DockManagerPane {\r\n\tstatic $t: Type = markType(DocumentHost, 'DocumentHost', (<any>DockManagerPane).$);\r\n\tprivate g: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get h(): WCNativeHelper {\r\n\t\treturn this.g;\r\n\t}\r\n\tprivate j: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.j;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.j = a;\r\n\t\tthis.g.l = this.j;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget l(): string {\r\n\t\tlet ret_ = this.h.k(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset l(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"id\", value_);\r\n\t}\r\n\tget e(): DockManagerPaneType {\r\n\t\tlet ret_ = this.h.k(\"type\");\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.h.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset e(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.m(value_.toString());\r\n\t\tthis.h.s(\"type\", value_);\r\n\t}\r\n\tget f(): SplitPane {\r\n\t\tlet ret_ = this.h.j(\"rootPane\", (a: any) => new SplitPane());\r\n\t\treturn <SplitPane>ret_;\r\n\t}\r\n\tset f(a: SplitPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"rootPane\", value_);\r\n\t}\r\n\tget i(): number {\r\n\t\tlet ret_ = this.h.k(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset i(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"size\", value_);\r\n\t}\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.h;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TabGroupPane extends DockManagerPane {\r\n\tstatic $t: Type = markType(TabGroupPane, 'TabGroupPane', (<any>DockManagerPane).$);\r\n\tprivate g: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get h(): WCNativeHelper {\r\n\t\treturn this.g;\r\n\t}\r\n\tprivate l: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.l;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.l = a;\r\n\t\tthis.g.l = this.l;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget n(): string {\r\n\t\tlet ret_ = this.h.k(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset n(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"id\", value_);\r\n\t}\r\n\tget f(): DockManagerPaneType {\r\n\t\tlet ret_ = this.h.k(\"type\");\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.h.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset f(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.m(value_.toString());\r\n\t\tthis.h.s(\"type\", value_);\r\n\t}\r\n\tget e(): ContentPaneCollection {\r\n\t\tlet ret_ = this.h.i(\"panes\", (a: any) => new ContentPaneCollection(), (a: any) => new ContentPane());\r\n\t\treturn <ContentPaneCollection>ret_;\r\n\t}\r\n\tget k(): number {\r\n\t\tlet ret_ = this.h.k(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset k(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"size\", value_);\r\n\t}\r\n\tget j(): number {\r\n\t\tlet ret_ = this.h.k(\"selectedIndex\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset j(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"selectedIndex\", value_);\r\n\t}\r\n\tget i(): boolean {\r\n\t\tlet ret_ = this.h.k(\"allowEmpty\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset i(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"allowEmpty\", value_);\r\n\t}\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.h;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ContentPane extends DockManagerPane {\r\n\tstatic $t: Type = markType(ContentPane, 'ContentPane', (<any>DockManagerPane).$);\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.h;\r\n\t}\r\n\tprivate g: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get h(): WCNativeHelper {\r\n\t\treturn this.g;\r\n\t}\r\n\tprivate t: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.t;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.t = a;\r\n\t\tthis.g.l = this.t;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget z(): string {\r\n\t\tlet ret_ = this.h.k(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset z(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"id\", value_);\r\n\t}\r\n\tget e(): DockManagerPaneType {\r\n\t\tlet ret_ = this.h.k(\"type\");\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.h.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset e(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.m(value_.toString());\r\n\t\tthis.h.s(\"type\", value_);\r\n\t}\r\n\tget v(): string {\r\n\t\tlet ret_ = this.h.k(\"contentId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset v(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"contentId\", value_);\r\n\t}\r\n\tget x(): string {\r\n\t\tlet ret_ = this.h.k(\"header\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset x(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"header\", value_);\r\n\t}\r\n\tget y(): string {\r\n\t\tlet ret_ = this.h.k(\"headerId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset y(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"headerId\", value_);\r\n\t}\r\n\tget aa(): string {\r\n\t\tlet ret_ = this.h.k(\"tabHeaderId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset aa(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"tabHeaderId\", value_);\r\n\t}\r\n\tget ab(): string {\r\n\t\tlet ret_ = this.h.k(\"unpinnedHeaderId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset ab(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"unpinnedHeaderId\", value_);\r\n\t}\r\n\tget w(): string {\r\n\t\tlet ret_ = this.h.k(\"floatingHeaderId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset w(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"floatingHeaderId\", value_);\r\n\t}\r\n\tget r(): number {\r\n\t\tlet ret_ = this.h.k(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset r(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"size\", value_);\r\n\t}\r\n\tget i(): boolean {\r\n\t\tlet ret_ = this.h.k(\"allowClose\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset i(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"allowClose\", value_);\r\n\t}\r\n\tget l(): boolean {\r\n\t\tlet ret_ = this.h.k(\"allowMaximize\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset l(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"allowMaximize\", value_);\r\n\t}\r\n\tget m(): boolean {\r\n\t\tlet ret_ = this.h.k(\"allowPinning\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset m(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"allowPinning\", value_);\r\n\t}\r\n\tget j(): boolean {\r\n\t\tlet ret_ = this.h.k(\"allowDocking\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset j(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"allowDocking\", value_);\r\n\t}\r\n\tget k(): boolean {\r\n\t\tlet ret_ = this.h.k(\"allowFloating\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset k(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"allowFloating\", value_);\r\n\t}\r\n\tget s(): number {\r\n\t\tlet ret_ = this.h.k(\"unpinnedSize\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset s(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"unpinnedSize\", value_);\r\n\t}\r\n\tget q(): boolean {\r\n\t\tlet ret_ = this.h.k(\"isPinned\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset q(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"isPinned\", value_);\r\n\t}\r\n\tget f(): UnpinnedLocation {\r\n\t\tlet ret_ = this.h.k(\"unpinnedLocation\");\r\n\t\tret_ = enumGetBox<UnpinnedLocation>(UnpinnedLocation_$type, EnumUtil.getEnumValue<UnpinnedLocation>(UnpinnedLocation_$type, this.h.f<UnpinnedLocation>(UnpinnedLocation_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<UnpinnedLocation>(UnpinnedLocation_$type, ret_);\r\n\t}\r\n\tset f(a: UnpinnedLocation) {\r\n\t\tlet value_ = <any>enumGetBox<UnpinnedLocation>(UnpinnedLocation_$type, a);\r\n\t\tvalue_ = WCNativeHelper.m(value_.toString());\r\n\t\tthis.h.s(\"unpinnedLocation\", value_);\r\n\t}\r\n\tget p(): boolean {\r\n\t\tlet ret_ = this.h.k(\"hidden\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset p(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"hidden\", value_);\r\n\t}\r\n\tget n(): boolean {\r\n\t\tlet ret_ = this.h.k(\"disabled\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset n(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"disabled\", value_);\r\n\t}\r\n\tget o(): boolean {\r\n\t\tlet ret_ = this.h.k(\"documentOnly\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset o(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.s(\"documentOnly\", value_);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ContentPaneCollection extends ObservableCollection$1<ContentPane> {\r\n\tstatic $t: Type = markType(ContentPaneCollection, 'ContentPaneCollection', (<any>ObservableCollection$1).$.specialize((<any>ContentPane).$));\r\n\tconstructor() {\r\n\t\tsuper((<any>ContentPane).$, 0);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SplitPane extends DockManagerPane {\r\n\tstatic $t: Type = markType(SplitPane, 'SplitPane', (<any>DockManagerPane).$);\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.j;\r\n\t}\r\n\tprivate i: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get j(): WCNativeHelper {\r\n\t\treturn this.i;\r\n\t}\r\n\tprivate p: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.p;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.p = a;\r\n\t\tthis.i.l = this.p;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget r(): string {\r\n\t\tlet ret_ = this.j.k(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset r(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"id\", value_);\r\n\t}\r\n\tget f(): DockManagerPaneType {\r\n\t\tlet ret_ = this.j.k(\"type\");\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.j.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset f(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.m(value_.toString());\r\n\t\tthis.j.s(\"type\", value_);\r\n\t}\r\n\tget h(): SplitPaneOrientation {\r\n\t\tlet ret_ = this.j.k(\"orientation\");\r\n\t\tret_ = enumGetBox<SplitPaneOrientation>(SplitPaneOrientation_$type, EnumUtil.getEnumValue<SplitPaneOrientation>(SplitPaneOrientation_$type, this.j.f<SplitPaneOrientation>(SplitPaneOrientation_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<SplitPaneOrientation>(SplitPaneOrientation_$type, ret_);\r\n\t}\r\n\tset h(a: SplitPaneOrientation) {\r\n\t\tlet value_ = <any>enumGetBox<SplitPaneOrientation>(SplitPaneOrientation_$type, a);\r\n\t\tvalue_ = WCNativeHelper.m(value_.toString());\r\n\t\tthis.j.s(\"orientation\", value_);\r\n\t}\r\n\tget e(): DockManagerPaneCollection {\r\n\t\tlet ret_ = this.j.i(\"panes\", (a: any) => new DockManagerPaneCollection(), (a: any) => DockManagerPane.createFromNative(a));\r\n\t\treturn <DockManagerPaneCollection>ret_;\r\n\t}\r\n\tget o(): number {\r\n\t\tlet ret_ = this.j.k(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset o(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"size\", value_);\r\n\t}\r\n\tget g(): DockManagerPoint {\r\n\t\tlet ret_ = this.j.j(\"floatingLocation\", (a: any) => new DockManagerPoint());\r\n\t\treturn <DockManagerPoint>ret_;\r\n\t}\r\n\tset g(a: DockManagerPoint) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"floatingLocation\", value_);\r\n\t}\r\n\tget n(): number {\r\n\t\tlet ret_ = this.j.k(\"floatingWidth\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset n(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"floatingWidth\", value_);\r\n\t}\r\n\tget m(): number {\r\n\t\tlet ret_ = this.j.k(\"floatingHeight\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset m(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"floatingHeight\", value_);\r\n\t}\r\n\tget l(): boolean {\r\n\t\tlet ret_ = this.j.k(\"floatingResizable\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset l(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"floatingResizable\", value_);\r\n\t}\r\n\tget k(): boolean {\r\n\t\tlet ret_ = this.j.k(\"allowEmpty\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset k(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"allowEmpty\", value_);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerPaneCollection extends ObservableCollection$1<DockManagerPane> {\r\n\tstatic $t: Type = markType(DockManagerPaneCollection, 'DockManagerPaneCollection', (<any>ObservableCollection$1).$.specialize((<any>DockManagerPane).$));\r\n\tconstructor() {\r\n\t\tsuper((<any>DockManagerPane).$, 0);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPane } from \"./DockManagerPane\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { NamePatcher, getAllPropertyNames, fromSpinal, toSpinal, initializePropertiesFromCss } from \"igniteui-core/componentUtil\";\r\n\r\nexport abstract class IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : DockManagerPane\r\n{\r\n\treturn null;\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerPane {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcDockManagerPaneComponent {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\t                                    \r\n\t                                    if ((this as any)._styling) {\r\n\t                                        NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n\t                                    }\r\n\t\tthis._implementation = this.createImplementation();\r\n\t\t(<any>this._implementation).externalObject = this;\r\n\t\tthis.onImplementationCreated();\r\n\t}\r\n\tprivate _settingAttributes: boolean = false;\r\n\t                                protected _attached: boolean = false;\r\n\t                                    \r\n\t                                private _queuedSetAttributes: { attrName: string, attrValue: string }[] = [];\r\n\t                                protected _enqueueSetAttribute(attrName: string, attrValue: string) {\r\n\t                                     this._queuedSetAttributes.push({ attrName: attrName, attrValue: attrValue });\r\n\t                                }\r\n\t\r\n\t                                protected _flushQueuedAttributes() {\r\n\t                                    this._settingAttributes = true;\r\n\t                                    for (let i = 0; i < this._queuedSetAttributes.length; i++) {\r\n\t                                        this.setAttribute(\r\n\t                                            this._queuedSetAttributes[i].attrName,\r\n\t                                            this._queuedSetAttributes[i].attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t                                    this._queuedSetAttributes.length = 0;\r\n\t                                }\r\n\t                                protected _a(attrName: string, attrValue: any) {\r\n\t                                    if (this._updatingFromAttribute) {\r\n\treturn;\r\n\t    }\r\n\t                                    if (attrValue) {\r\n\t                                        attrValue = attrValue.toString();\r\n\t                                    }\r\n\t                                    this._settingAttributes = true;\r\n\t                                    attrName = toSpinal(attrName);\r\n\t                                    if (this._attached) {\r\n\t                                        this.setAttribute(attrName, attrValue);\r\n\t                                    } else { \r\n\t                                        this._enqueueSetAttribute(attrName, attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t    }\r\n\t\r\n\t                                protected setAttribute(attrName: string, attrValue: string) {\r\n\t\r\n\t                                }\r\n\t\r\n\t                \r\n\t                private _updatingFromAttribute: boolean = false;\r\n\t                attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n\t                    if (this._settingAttributes) {\r\n\t                        return;\r\n\t                    }\r\n\t                    let setName = fromSpinal(name);\r\n\t                    this._updatingFromAttribute = true;\r\n\t                    (<any>this)[setName] = newValue;\r\n\t                    this._updatingFromAttribute = false;\r\n\t                }\r\n\tget name() : string {\r\n\t\treturn (this.i.d as string);\r\n\t}\r\n\tset name(v: string) {\r\n\t\tthis.i.d = v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\tprotected __p: string = null;\r\n\tprotected _hasUserValues: Set<string> = new Set<string>();\r\n\tprotected get hasUserValues(): Set<string> {\r\n\t    return this._hasUserValues;\r\n\t}\r\n\tprotected __m(propertyName: string) {\r\n\t    if (!this._inStyling) {\r\n\t        this._hasUserValues.add(propertyName);\r\n\t    }\r\n\t}\r\n\t\r\n\tprotected _stylingContainer: any = null;\r\n\tprotected _stylingParent: any = null;\r\n\tprotected _inStyling: boolean = false;\r\n\tprotected _styling(container: any, component: any, parent?: any) {\r\n\t        if (this._inStyling) {\r\n\t            return;\r\n\t        }\r\n\t        this._inStyling = true;\r\n\t        this._stylingContainer = container;\r\n\t        this._stylingParent = component;\r\n\t\t\r\n\t        let genericPrefix = \"\";\r\n\t        let typeName = (this.i as any).$type.name;\r\n\t        if (typeName.indexOf(\"Xam\") === 0) {\r\n\t            typeName = typeName.substring(3);\r\n\t        }\r\n\t        genericPrefix = toSpinal(\"DockManagerPaneComponent\");\r\n\t\t\r\n\t\tlet additionalPrefixes = [];\r\n\t\t\r\n\t\tlet prefix = toSpinal(typeName);\r\n\t\tadditionalPrefixes.push(prefix + \"-\");\r\n\t\r\n\t        let b = (this.i as any).$type.baseType;\r\n\t        while (b && b.name != \"Object\" && \r\n\t            b.name != \"Base\" && \r\n\t            b.name != \"Control\" && \r\n\t            b.Name != \"DependencyObject\" &&\r\n\t            b.Name != \"FrameworkElement\") {\r\n\t            typeName = b.name;\r\n\t            if (typeName.indexOf(\"Xam\") === 0) {\r\n\t                typeName = typeName.substring(3);\r\n\t            }\r\n\t            let basePrefix = toSpinal(typeName);\r\n\t            additionalPrefixes.push(basePrefix + \"-\");\r\n\t            b = b.baseType;\r\n\t        }\r\n\t\t\r\n\t\tif (parent) {\r\n\t\t\tlet parentTypeName = (parent.i as any).$type.name;\r\n\t            if (parentTypeName.indexOf(\"Xam\") === 0) {\r\n\t                parentTypeName = parentTypeName.substring(3);\r\n\t            }\r\n\t            let parentPrefix = toSpinal(parentTypeName);\r\n\t\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\r\n\t\t}\r\n\t\r\n\t\tinitializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\r\n\t\r\n\t        \r\n\t\r\n\t        if ((this as any)._otherStyling) {\r\n\t            (this as any)._otherStyling(container, component, parent);\r\n\t        }\r\n\t        this._inStyling = false;\r\n\t}\r\n}\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { markType } from 'igniteui-core/type';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\n\r\nimport { DockManagerPane as DockManagerPane_internal } from './DockManagerPane';\r\nimport { IgcDockManagerPaneComponent as IgcDockManagerPaneComponent } from './igc-dock-manager-pane-component';\r\n\r\nexport class IgcDockManagerPaneCollection extends IgCollection<IgcDockManagerPaneComponent, DockManagerPane_internal> {\r\n    constructor(list?: IgcDockManagerPaneComponent[]) {\r\n        super();\r\n        if (!(IgcDockManagerPaneComponent as any).$type) {\r\n            (IgcDockManagerPaneComponent as any).$type = markType(IgcDockManagerPaneComponent, \"IgcDockManagerPaneComponent\");\r\n        }\r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<IgcDockManagerPaneComponent, DockManagerPane_internal> {\r\n        if (!(IgcDockManagerPaneComponent as any).$type) {\r\n            (IgcDockManagerPaneComponent as any).$type = markType(IgcDockManagerPaneComponent, \"IgcDockManagerPaneComponent\");\r\n        }\r\n        let coll = new SyncableObservableCollection$2<IgcDockManagerPaneComponent, DockManagerPane_internal>((IgcDockManagerPaneComponent as any).$type, (DockManagerPane_internal as any).$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp._implementation) {\r\n                comp = comp._implementation;\r\n            }\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return (ext as any)._implementation;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            let ext = (int as any).externalObject;\r\n            if (!ext) {\r\n                ext = IgcDockManagerPaneComponent._createFromInternal(int);\r\n\r\n                if (ext) {\r\n                    (ext as any)._implementation = int;\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPoint as DockManagerPoint_internal } from \"./DockManagerPoint\";\r\n\r\nexport class IgcDockManagerPoint\r\n{\r\n\r\nprotected createImplementation() : DockManagerPoint_internal\r\n{\r\n\treturn new DockManagerPoint_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerPoint_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tget x() : number {\r\n\t\treturn (this.i.c as number);\r\n\t}\r\n\tset x(v: number) {\r\n\t\tthis.i.c = +v;\r\n\t}\r\n\tget y() : number {\r\n\t\treturn (this.i.d as number);\r\n\t}\r\n\tset y(v: number) {\r\n\t\tthis.i.d = +v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { SplitPaneOrientation, SplitPaneOrientation_$type } from \"./SplitPaneOrientation\";\r\nimport { IgcDockManagerPaneCollection } from \"./igc-dock-manager-pane-collection\";\r\nimport { IgcDockManagerPoint } from \"./igc-dock-manager-point\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { DockManagerPaneCollection as DockManagerPaneCollection_internal } from \"./DockManagerPaneCollection\";\r\nimport { DockManagerPane } from \"./DockManagerPane\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\nexport class IgcSplitPaneComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : SplitPane\r\n{\r\n\treturn new SplitPane();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : SplitPane {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.r as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.r = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget Type() : DockManagerPaneType {\r\n\t\treturn this.i.f;\r\n\t}\r\n\tset Type(v: DockManagerPaneType) {\r\n\t\tthis.i.f = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.f));\r\n\t}\r\n\t/**\r\n\t * The orientation of the split pane.\r\n\t*/\r\n\tget orientation() : SplitPaneOrientation {\r\n\t\treturn this.i.h;\r\n\t}\r\n\tset orientation(v: SplitPaneOrientation) {\r\n\t\tthis.i.h = ensureEnum<SplitPaneOrientation>(SplitPaneOrientation_$type, v);\r\n\t                                        this._a(\"orientation\", enumToString<SplitPaneOrientation>(SplitPaneOrientation_$type, this.i.h));\r\n\t}\r\n\tprivate _panes: IgcDockManagerPaneCollection = null;\r\n\t                                \r\n\t/**\r\n\t * The child panes of the split pane.\r\n\t*/\r\n\tget panes() : IgcDockManagerPaneCollection {\r\n\t                                        if (this._panes === null) {\r\n\t                                            let coll = new IgcDockManagerPaneCollection();\r\n\t                                            let innerColl = this.i.e;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new DockManagerPaneCollection_internal();\r\n\t\t\t}\r\n\t                                            this._panes = (coll as any)._fromInner(innerColl);\r\n\t                                            \r\n\t                                        }\r\n\t\treturn this._panes;\r\n\t}\r\n\tset panes(v: IgcDockManagerPaneCollection) {\r\n\t                                        if (this._panes !== null) {\r\n\t                                            (this._panes as any)._setSyncTarget(null);\r\n\t                                            this._panes = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcDockManagerPaneCollection();\r\n\t                                        this._panes = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<DockManagerPane>((DockManagerPane as any).$type);\r\n\t                                        let innerColl = this.i.e;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new DockManagerPaneCollection_internal();\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._panes as any)._setSyncTarget(syncColl);\r\n\t                                        \r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.o as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.o = +v;\r\n\t                                        this._a(\"size\", this.i.o);\r\n\t}\r\n\t/**\r\n\t * The absolute location point of the pane. Applies only for floating panes.\r\n\t*/\r\n\tget floatingLocation() : IgcDockManagerPoint {\r\n\t                                        const r = this.i.g;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerPoint();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset floatingLocation(v: IgcDockManagerPoint) {\r\n\t\tv == null ? this.i.g = null : this.i.g = v.i;\r\n\t}\r\n\t/**\r\n\t * The absolute width of the pane. Applies only for floating panes. Defaults to 100.\r\n\t*/\r\n\tget floatingWidth() : number {\r\n\t\treturn (this.i.n as number);\r\n\t}\r\n\tset floatingWidth(v: number) {\r\n\t\tthis.i.n = +v;\r\n\t                                        this._a(\"floatingWidth\", this.i.n);\r\n\t}\r\n\t/**\r\n\t * The absolute height of the pane. Applies only for floating panes. Defaults to 100.\r\n\t*/\r\n\tget floatingHeight() : number {\r\n\t\treturn (this.i.m as number);\r\n\t}\r\n\tset floatingHeight(v: number) {\r\n\t\tthis.i.m = +v;\r\n\t                                        this._a(\"floatingHeight\", this.i.m);\r\n\t}\r\n\t/**\r\n\t * Determines whether floating pane resizing is allowed. Applies only for floating panes.\r\n\t*/\r\n\tget floatingResizable() : boolean {\r\n\t\treturn (this.i.l as boolean);\r\n\t}\r\n\tset floatingResizable(v: boolean) {\r\n\t\tthis.i.l = ensureBool(v);\r\n\t                                        this._a(\"floatingResizable\", this.i.l);\r\n\t}\r\n\t/**\r\n\t * Determines whether the pane should present in the UI when empty.\r\n\t*/\r\n\tget allowEmpty() : boolean {\r\n\t\treturn (this.i.k as boolean);\r\n\t}\r\n\tset allowEmpty(v: boolean) {\r\n\t\tthis.i.k = ensureBool(v);\r\n\t                                        this._a(\"allowEmpty\", this.i.k);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.panes != null && this.panes.findByName && this.panes.findByName(name)) { return this.panes.findByName(name); }\r\n\tif (this.floatingLocation && (this.floatingLocation as any).name && (this.floatingLocation as any).name == name) { return this.floatingLocation; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { UnpinnedLocation, UnpinnedLocation_$type } from \"./UnpinnedLocation\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { ContentPane } from \"./ContentPane\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\nexport class IgcContentPaneComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : ContentPane\r\n{\r\n\treturn new ContentPane();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : ContentPane {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.z as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.z = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget Type() : DockManagerPaneType {\r\n\t\treturn this.i.e;\r\n\t}\r\n\tset Type(v: DockManagerPaneType) {\r\n\t\tthis.i.e = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.e));\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the content element.\r\n\t*/\r\n\tget contentId() : string {\r\n\t\treturn (this.i.v as string);\r\n\t}\r\n\tset contentId(v: string) {\r\n\t\tthis.i.v = v;\r\n\t}\r\n\t/**\r\n\t * The text header of the content pane. Even if header slot templates are used, the text header is used for aria label.\r\n\t*/\r\n\tget header() : string {\r\n\t\treturn (this.i.x as string);\r\n\t}\r\n\tset header(v: string) {\r\n\t\tthis.i.x = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the content pane header element. If not set, the `header` property value is used.\r\n\t*/\r\n\tget headerId() : string {\r\n\t\treturn (this.i.y as string);\r\n\t}\r\n\tset headerId(v: string) {\r\n\t\tthis.i.y = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the tab header element. If not set, the `header` property value is used.\r\n\t*/\r\n\tget tabHeaderId() : string {\r\n\t\treturn (this.i.aa as string);\r\n\t}\r\n\tset tabHeaderId(v: string) {\r\n\t\tthis.i.aa = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the unpinned header element. If not set, the `header` property value is used.\r\n\t*/\r\n\tget unpinnedHeaderId() : string {\r\n\t\treturn (this.i.ab as string);\r\n\t}\r\n\tset unpinnedHeaderId(v: string) {\r\n\t\tthis.i.ab = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the floating header element. If not set, the `headerId` property value is used.\r\n\t*/\r\n\tget floatingHeaderId() : string {\r\n\t\treturn (this.i.w as string);\r\n\t}\r\n\tset floatingHeaderId(v: string) {\r\n\t\tthis.i.w = v;\r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.r as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.r = +v;\r\n\t                                        this._a(\"size\", this.i.r);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to close the pane. Defaults to true.\r\n\t*/\r\n\tget allowClose() : boolean {\r\n\t\treturn (this.i.i as boolean);\r\n\t}\r\n\tset allowClose(v: boolean) {\r\n\t\tthis.i.i = ensureBool(v);\r\n\t                                        this._a(\"allowClose\", this.i.i);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to maximize the pane.\r\n\t*/\r\n\tget allowMaximize() : boolean {\r\n\t\treturn (this.i.l as boolean);\r\n\t}\r\n\tset allowMaximize(v: boolean) {\r\n\t\tthis.i.l = ensureBool(v);\r\n\t                                        this._a(\"allowMaximize\", this.i.l);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to pin/unpin the pane. Defaults to true.\r\n\t*/\r\n\tget allowPinning() : boolean {\r\n\t\treturn (this.i.m as boolean);\r\n\t}\r\n\tset allowPinning(v: boolean) {\r\n\t\tthis.i.m = ensureBool(v);\r\n\t                                        this._a(\"allowPinning\", this.i.m);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to dock the pane. Defaults to true.\r\n\t*/\r\n\tget allowDocking() : boolean {\r\n\t\treturn (this.i.j as boolean);\r\n\t}\r\n\tset allowDocking(v: boolean) {\r\n\t\tthis.i.j = ensureBool(v);\r\n\t                                        this._a(\"allowDocking\", this.i.j);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to make the pane floating. Defaults to true.\r\n\t*/\r\n\tget allowFloating() : boolean {\r\n\t\treturn (this.i.k as boolean);\r\n\t}\r\n\tset allowFloating(v: boolean) {\r\n\t\tthis.i.k = ensureBool(v);\r\n\t                                        this._a(\"allowFloating\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * The absolute size of the pane in an unpinned state. Defaults to 200.\r\n\t*/\r\n\tget unpinnedSize() : number {\r\n\t\treturn (this.i.s as number);\r\n\t}\r\n\tset unpinnedSize(v: number) {\r\n\t\tthis.i.s = +v;\r\n\t                                        this._a(\"unpinnedSize\", this.i.s);\r\n\t}\r\n\t/**\r\n\t * Determines whether a content pane is pinned or not. Defaults to true.\r\n\t*/\r\n\tget isPinned() : boolean {\r\n\t\treturn (this.i.q as boolean);\r\n\t}\r\n\tset isPinned(v: boolean) {\r\n\t\tthis.i.q = ensureBool(v);\r\n\t                                        this._a(\"isPinned\", this.i.q);\r\n\t}\r\n\t/**\r\n\t * The desired unpinned location of the content pane.\r\n\t * If not set the Dock Manager automatically calculates it based on the location of the pane relatively to the document host.\r\n\t * If more than one document host is presented, the closest one in the pane hierarchy will be used for the calculation.\r\n\t * If there is no document host, the default location is left.\r\n\t*/\r\n\tget unpinnedLocation() : UnpinnedLocation {\r\n\t\treturn this.i.f;\r\n\t}\r\n\tset unpinnedLocation(v: UnpinnedLocation) {\r\n\t\tthis.i.f = ensureEnum<UnpinnedLocation>(UnpinnedLocation_$type, v);\r\n\t                                        this._a(\"unpinnedLocation\", enumToString<UnpinnedLocation>(UnpinnedLocation_$type, this.i.f));\r\n\t}\r\n\t/**\r\n\t * Determines whether a pane is hidden in the UI. Defaults to false.\r\n\t*/\r\n\tget hidden() : boolean {\r\n\t\treturn (this.i.p as boolean);\r\n\t}\r\n\tset hidden(v: boolean) {\r\n\t\tthis.i.p = ensureBool(v);\r\n\t                                        this._a(\"hidden\", this.i.p);\r\n\t}\r\n\t/**\r\n\t * Determines whether a pane is disabled. Defaults to false.\r\n\t*/\r\n\tget disabled() : boolean {\r\n\t\treturn (this.i.n as boolean);\r\n\t}\r\n\tset disabled(v: boolean) {\r\n\t\tthis.i.n = ensureBool(v);\r\n\t                                        this._a(\"disabled\", this.i.n);\r\n\t}\r\n\t/**\r\n\t * Marks that a content pane can be docked only inside a document host.\r\n\t*/\r\n\tget documentOnly() : boolean {\r\n\t\treturn (this.i.o as boolean);\r\n\t}\r\n\tset documentOnly(v: boolean) {\r\n\t\tthis.i.o = ensureBool(v);\r\n\t                                        this._a(\"documentOnly\", this.i.o);\r\n\t}\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { IgcSplitPaneComponent } from \"./igc-split-pane-component\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { DocumentHost } from \"./DocumentHost\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\nexport class IgcDocumentHostComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : DocumentHost\r\n{\r\n\treturn new DocumentHost();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : DocumentHost {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.l as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.l = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget Type() : DockManagerPaneType {\r\n\t\treturn this.i.e;\r\n\t}\r\n\tset Type(v: DockManagerPaneType) {\r\n\t\tthis.i.e = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.e));\r\n\t}\r\n\t/**\r\n\t * The root split pane of the document host.\r\n\t*/\r\n\tget rootPane() : IgcSplitPaneComponent {\r\n\t                                        const r = this.i.f;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSplitPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset rootPane(v: IgcSplitPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.f = null : this.i.f = v.i;\r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.i as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.i = +v;\r\n\t                                        this._a(\"size\", this.i.i);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.rootPane && (this.rootPane as any).name && (this.rootPane as any).name == name) { return this.rootPane; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.rootPane && (this.rootPane as any)._styling) {\r\n\t    (this.rootPane as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { markType } from 'igniteui-core/type';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\n\r\nimport { ContentPane as ContentPane_internal } from './ContentPane';\r\nimport { IgcContentPaneComponent as IgcContentPaneComponent } from './igc-content-pane-component';\r\n\r\nexport class IgcContentPaneCollection extends IgCollection<IgcContentPaneComponent, ContentPane_internal> {\r\n    constructor(list?: IgcContentPaneComponent[]) {\r\n        super();\r\n        if (!(IgcContentPaneComponent as any).$type) {\r\n            (IgcContentPaneComponent as any).$type = markType(IgcContentPaneComponent, \"IgcContentPaneComponent\");\r\n        }\r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<IgcContentPaneComponent, ContentPane_internal> {\r\n        if (!(IgcContentPaneComponent as any).$type) {\r\n            (IgcContentPaneComponent as any).$type = markType(IgcContentPaneComponent, \"IgcContentPaneComponent\");\r\n        }\r\n        let coll = new SyncableObservableCollection$2<IgcContentPaneComponent, ContentPane_internal>((IgcContentPaneComponent as any).$type, (ContentPane_internal as any).$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp._implementation) {\r\n                comp = comp._implementation;\r\n            }\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return (ext as any)._implementation;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            let ext = (int as any).externalObject;\r\n            if (!ext) {\r\n                ext = new IgcContentPaneComponent();\r\n\r\n                if (ext) {\r\n                    (ext as any)._implementation = int;\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { IgcContentPaneCollection } from \"./igc-content-pane-collection\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { TabGroupPane } from \"./TabGroupPane\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { ContentPaneCollection as ContentPaneCollection_internal } from \"./ContentPaneCollection\";\r\nimport { ContentPane } from \"./ContentPane\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\nexport class IgcTabGroupPaneComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : TabGroupPane\r\n{\r\n\treturn new TabGroupPane();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TabGroupPane {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.n as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.n = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget Type() : DockManagerPaneType {\r\n\t\treturn this.i.f;\r\n\t}\r\n\tset Type(v: DockManagerPaneType) {\r\n\t\tthis.i.f = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.f));\r\n\t}\r\n\tprivate _panes: IgcContentPaneCollection = null;\r\n\t                                \r\n\t/**\r\n\t * The child content panes of the tab group.\r\n\t*/\r\n\tget panes() : IgcContentPaneCollection {\r\n\t                                        if (this._panes === null) {\r\n\t                                            let coll = new IgcContentPaneCollection();\r\n\t                                            let innerColl = this.i.e;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new ContentPaneCollection_internal();\r\n\t\t\t}\r\n\t                                            this._panes = (coll as any)._fromInner(innerColl);\r\n\t                                            \r\n\t                                        }\r\n\t\treturn this._panes;\r\n\t}\r\n\tset panes(v: IgcContentPaneCollection) {\r\n\t                                        if (this._panes !== null) {\r\n\t                                            (this._panes as any)._setSyncTarget(null);\r\n\t                                            this._panes = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcContentPaneCollection();\r\n\t                                        this._panes = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<ContentPane>((ContentPane as any).$type);\r\n\t                                        let innerColl = this.i.e;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new ContentPaneCollection_internal();\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._panes as any)._setSyncTarget(syncColl);\r\n\t                                        \r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.k as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.k = +v;\r\n\t                                        this._a(\"size\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * The index of the selected tab.\r\n\t*/\r\n\tget selectedIndex() : number {\r\n\t\treturn (this.i.j as number);\r\n\t}\r\n\tset selectedIndex(v: number) {\r\n\t\tthis.i.j = +v;\r\n\t                                        this._a(\"selectedIndex\", this.i.j);\r\n\t}\r\n\t/**\r\n\t * Determines whether the pane should present in the UI when empty.\r\n\t*/\r\n\tget allowEmpty() : boolean {\r\n\t\treturn (this.i.i as boolean);\r\n\t}\r\n\tset allowEmpty(v: boolean) {\r\n\t\tthis.i.i = ensureBool(v);\r\n\t                                        this._a(\"allowEmpty\", this.i.i);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.panes != null && this.panes.findByName && this.panes.findByName(name)) { return this.panes.findByName(name); }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DragService extends Base {\r\n\tstatic $t: Type = markType(DragService, 'DragService');\r\n\tprivate a: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get b(): WCNativeHelper {\r\n\t\treturn this.a;\r\n\t}\r\n\tprivate c: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.c;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.c = a;\r\n\t\tthis.a.l = this.c;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DragService as DragService_internal } from \"./DragService\";\r\n\r\nexport class IgcDragService\r\n{\r\n\r\nprotected createImplementation() : DragService_internal\r\n{\r\n\treturn new DragService_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DragService_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum DockManagerShowHeaderIconOnHover {\r\n\tCloseOnly = 0,\r\n\tMoreOptionsOnly = 1,\r\n\tAll = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let DockManagerShowHeaderIconOnHover_$type = markEnum('DockManagerShowHeaderIconOnHover', 'CloseOnly,0|MoreOptionsOnly,1|All,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { BaseElement } from \"./BaseElement\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { DragService } from \"./DragService\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TabHeaderElement extends BaseElement {\r\n\tstatic $t: Type = markType(TabHeaderElement, 'TabHeaderElement', (<any>BaseElement).$);\r\n\tprivate b: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get c(): WCNativeHelper {\r\n\t\treturn this.b;\r\n\t}\r\n\tprivate d: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.d;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.d = a;\r\n\t\tthis.b.l = this.d;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget a(): DragService {\r\n\t\tlet ret_ = this.c.j(\"dragService\", (a: any) => new DragService());\r\n\t\treturn <DragService>ret_;\r\n\t}\r\n\tset a(a: DragService) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.c.s(\"dragService\", value_);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcDragService } from \"./igc-drag-service\";\r\nimport { TabHeaderElement as TabHeaderElement_internal } from \"./TabHeaderElement\";\r\n\r\n/**\r\n * Describes a tab header element.\r\n*/\r\nexport class IgcTabHeaderElement\r\n{\r\n\r\nprotected createImplementation() : TabHeaderElement_internal\r\n{\r\n\treturn new TabHeaderElement_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : TabHeaderElement_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\t/**\r\n\t * Gets/sets the drag service.\r\n\t*/\r\n\tget dragService() : IgcDragService {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDragService();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset dragService(v: IgcDragService) {\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.dragService && (this.dragService as any).name && (this.dragService as any).name == name) { return this.dragService; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { markType } from 'igniteui-core/type';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\n\r\nimport { SplitPane as SplitPane_internal } from './SplitPane';\r\nimport { IgcSplitPaneComponent as IgcSplitPaneComponent } from './igc-split-pane-component';\r\n\r\nexport class IgcSplitPaneCollection extends IgCollection<IgcSplitPaneComponent, SplitPane_internal> {\r\n    constructor(list?: IgcSplitPaneComponent[]) {\r\n        super();\r\n        if (!(IgcSplitPaneComponent as any).$type) {\r\n            (IgcSplitPaneComponent as any).$type = markType(IgcSplitPaneComponent, \"IgcSplitPaneComponent\");\r\n        }\r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<IgcSplitPaneComponent, SplitPane_internal> {\r\n        if (!(IgcSplitPaneComponent as any).$type) {\r\n            (IgcSplitPaneComponent as any).$type = markType(IgcSplitPaneComponent, \"IgcSplitPaneComponent\");\r\n        }\r\n        let coll = new SyncableObservableCollection$2<IgcSplitPaneComponent, SplitPane_internal>((IgcSplitPaneComponent as any).$type, (SplitPane_internal as any).$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp._implementation) {\r\n                comp = comp._implementation;\r\n            }\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return (ext as any)._implementation;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            let ext = (int as any).externalObject;\r\n            if (!ext) {\r\n                ext = new IgcSplitPaneComponent();\r\n\r\n                if (ext) {\r\n                    (ext as any)._implementation = int;\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SplitPaneCollection extends ObservableCollection$1<SplitPane> {\r\n\tstatic $t: Type = markType(SplitPaneCollection, 'SplitPaneCollection', (<any>ObservableCollection$1).$.specialize((<any>SplitPane).$));\r\n\tconstructor() {\r\n\t\tsuper((<any>SplitPane).$, 0);\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { SplitPaneCollection } from \"./SplitPaneCollection\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerLayout extends Base {\r\n\tstatic $t: Type = markType(DockManagerLayout, 'DockManagerLayout');\r\n\tget h(): string {\r\n\t\tlet ret_ = this.d.k(\"name\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset h(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.d.s(\"name\", value_);\r\n\t}\r\n\tprivate ___mustPassByValue: boolean = true;\r\n\tprivate c: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get d(): WCNativeHelper {\r\n\t\treturn this.c;\r\n\t}\r\n\tprivate f: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.f;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.f = a;\r\n\t\tthis.c.l = this.f;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget a(): SplitPane {\r\n\t\tlet ret_ = this.d.j(\"rootPane\", (a: any) => new SplitPane());\r\n\t\treturn <SplitPane>ret_;\r\n\t}\r\n\tset a(a: SplitPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.d.s(\"rootPane\", value_);\r\n\t}\r\n\tget b(): SplitPaneCollection {\r\n\t\tlet ret_ = this.d.i(\"floatingPanes\", (a: any) => new SplitPaneCollection(), (a: any) => new SplitPane());\r\n\t\treturn <SplitPaneCollection>ret_;\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSplitPaneComponent } from \"./igc-split-pane-component\";\r\nimport { IgcSplitPaneCollection } from \"./igc-split-pane-collection\";\r\nimport { DockManagerLayout as DockManagerLayout_internal } from \"./DockManagerLayout\";\r\nimport { SplitPaneCollection as SplitPaneCollection_internal } from \"./SplitPaneCollection\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\n/**\r\n * Describes a Dock Manager layout.\r\n*/\r\nexport class IgcDockManagerLayout\r\n{\r\n\r\nprotected createImplementation() : DockManagerLayout_internal\r\n{\r\n\treturn new DockManagerLayout_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerLayout_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tget name() : string {\r\n\t\treturn (this.i.h as string);\r\n\t}\r\n\tset name(v: string) {\r\n\t\tthis.i.h = v;\r\n\t}\r\n\t/**\r\n\t * The root split pane of the layout.\r\n\t*/\r\n\tget rootPane() : IgcSplitPaneComponent {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSplitPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset rootPane(v: IgcSplitPaneComponent) {\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n\tprivate _floatingPanes: IgcSplitPaneCollection = null;\r\n\t                                \r\n\t/**\r\n\t * The floating panes of the layout.\r\n\t*/\r\n\tget floatingPanes() : IgcSplitPaneCollection {\r\n\t                                        if (this._floatingPanes === null) {\r\n\t                                            let coll = new IgcSplitPaneCollection();\r\n\t                                            let innerColl = this.i.b;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SplitPaneCollection_internal();\r\n\t\t\t}\r\n\t                                            this._floatingPanes = (coll as any)._fromInner(innerColl);\r\n\t                                            \r\n\t                                        }\r\n\t\treturn this._floatingPanes;\r\n\t}\r\n\tset floatingPanes(v: IgcSplitPaneCollection) {\r\n\t                                        if (this._floatingPanes !== null) {\r\n\t                                            (this._floatingPanes as any)._setSyncTarget(null);\r\n\t                                            this._floatingPanes = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSplitPaneCollection();\r\n\t                                        this._floatingPanes = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<SplitPane>((SplitPane as any).$type);\r\n\t                                        let innerColl = this.i.b;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SplitPaneCollection_internal();\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._floatingPanes as any)._setSyncTarget(syncColl);\r\n\t                                        \r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.rootPane && (this.rootPane as any).name && (this.rootPane as any).name == name) { return this.rootPane; }\r\n\tif (this.floatingPanes != null && this.floatingPanes.findByName && this.floatingPanes.findByName(name)) { return this.floatingPanes.findByName(name); }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerResourceStrings extends Base {\r\n\tstatic $t: Type = markType(DockManagerResourceStrings, 'DockManagerResourceStrings');\r\n\tprivate a: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get b(): WCNativeHelper {\r\n\t\treturn this.a;\r\n\t}\r\n\tprivate c: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.c;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.c = a;\r\n\t\tthis.a.l = this.c;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget e(): string {\r\n\t\tlet ret_ = this.b.k(\"close\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset e(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"close\", value_);\r\n\t}\r\n\tget l(): string {\r\n\t\tlet ret_ = this.b.k(\"pin\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset l(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"pin\", value_);\r\n\t}\r\n\tget m(): string {\r\n\t\tlet ret_ = this.b.k(\"unpin\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset m(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"unpin\", value_);\r\n\t}\r\n\tget g(): string {\r\n\t\tlet ret_ = this.b.k(\"maximize\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset g(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"maximize\", value_);\r\n\t}\r\n\tget h(): string {\r\n\t\tlet ret_ = this.b.k(\"minimize\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset h(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"minimize\", value_);\r\n\t}\r\n\tget i(): string {\r\n\t\tlet ret_ = this.b.k(\"moreOptions\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset i(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"moreOptions\", value_);\r\n\t}\r\n\tget j(): string {\r\n\t\tlet ret_ = this.b.k(\"moreTabs\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset j(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"moreTabs\", value_);\r\n\t}\r\n\tget k(): string {\r\n\t\tlet ret_ = this.b.k(\"panes\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset k(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"panes\", value_);\r\n\t}\r\n\tget f(): string {\r\n\t\tlet ret_ = this.b.k(\"documents\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset f(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.s(\"documents\", value_);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerResourceStrings as DockManagerResourceStrings_internal } from \"./DockManagerResourceStrings\";\r\n\r\n/**\r\n * Describes dock manager resource strings.\r\n*/\r\nexport class IgcDockManagerResourceStrings\r\n{\r\n\r\nprotected createImplementation() : DockManagerResourceStrings_internal\r\n{\r\n\treturn new DockManagerResourceStrings_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerResourceStrings_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tget close() : string {\r\n\t\treturn (this.i.e as string);\r\n\t}\r\n\tset close(v: string) {\r\n\t\tthis.i.e = v;\r\n\t}\r\n\tget pin() : string {\r\n\t\treturn (this.i.l as string);\r\n\t}\r\n\tset pin(v: string) {\r\n\t\tthis.i.l = v;\r\n\t}\r\n\tget unpin() : string {\r\n\t\treturn (this.i.m as string);\r\n\t}\r\n\tset unpin(v: string) {\r\n\t\tthis.i.m = v;\r\n\t}\r\n\tget maximize() : string {\r\n\t\treturn (this.i.g as string);\r\n\t}\r\n\tset maximize(v: string) {\r\n\t\tthis.i.g = v;\r\n\t}\r\n\tget minimize() : string {\r\n\t\treturn (this.i.h as string);\r\n\t}\r\n\tset minimize(v: string) {\r\n\t\tthis.i.h = v;\r\n\t}\r\n\tget moreOptions() : string {\r\n\t\treturn (this.i.i as string);\r\n\t}\r\n\tset moreOptions(v: string) {\r\n\t\tthis.i.i = v;\r\n\t}\r\n\tget moreTabs() : string {\r\n\t\treturn (this.i.j as string);\r\n\t}\r\n\tset moreTabs(v: string) {\r\n\t\tthis.i.j = v;\r\n\t}\r\n\tget panes() : string {\r\n\t\treturn (this.i.k as string);\r\n\t}\r\n\tset panes(v: string) {\r\n\t\tthis.i.k = v;\r\n\t}\r\n\tget documents() : string {\r\n\t\treturn (this.i.f as string);\r\n\t}\r\n\tset documents(v: string) {\r\n\t\tthis.i.f = v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { DockManagerLayout } from \"./DockManagerLayout\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class LayoutChangeEventArgs extends Base {\r\n\tstatic $t: Type = markType(LayoutChangeEventArgs, 'LayoutChangeEventArgs');\r\n\ta: DockManagerLayout = null;\r\n\tstatic b(a: any): LayoutChangeEventArgs {\r\n\t\treturn ((() => {\r\n\t\t\tlet $ret = new LayoutChangeEventArgs();\r\n\t\t\t$ret.a = <DockManagerLayout>a;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcDockManagerLayout } from \"./igc-dock-manager-layout\";\r\nimport { LayoutChangeEventArgs as LayoutChangeEventArgs_internal } from \"./LayoutChangeEventArgs\";\r\n\r\nexport class IgcLayoutChangeEventArgs\r\n{\r\n\r\nprotected createImplementation() : LayoutChangeEventArgs_internal\r\n{\r\n\treturn new LayoutChangeEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : LayoutChangeEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tget detail() : IgcDockManagerLayout {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerLayout();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset detail(v: IgcDockManagerLayout) {\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { BaseElement } from \"./BaseElement\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { Base, enumGetBox, EnumUtil, Type, markType } from \"igniteui-core/type\";\r\nimport { DockManagerLayout } from \"./DockManagerLayout\";\r\nimport { DockManagerPane } from \"./DockManagerPane\";\r\nimport { DockManagerPoint } from \"./DockManagerPoint\";\r\nimport { ContentPane } from \"./ContentPane\";\r\nimport { DockManagerShowHeaderIconOnHover, DockManagerShowHeaderIconOnHover_$type } from \"./DockManagerShowHeaderIconOnHover\";\r\nimport { DockManagerResourceStrings } from \"./DockManagerResourceStrings\";\r\nimport { LayoutChangeEventArgs } from \"./LayoutChangeEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManager extends BaseElement {\r\n\tstatic $t: Type = markType(DockManager, 'DockManager', (<any>BaseElement).$);\r\n\tlayoutChange: (sender: any, args: LayoutChangeEventArgs) => void = null;\r\n\tlayoutChangeChanged(): void {\r\n\t\tif (this.layoutChange != null) {\r\n\t\t\tthis.j.o(\"layoutChange\", (a: any) => this.layoutChange(this, LayoutChangeEventArgs.b(this.b)), false);\r\n\t\t} else {\r\n\t\t\tthis.j.r(\"layoutChange\");\r\n\t\t}\r\n\t}\r\n\tprivate i: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get j(): WCNativeHelper {\r\n\t\treturn this.i;\r\n\t}\r\n\tprivate n: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.n;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.n = a;\r\n\t\tthis.i.l = this.n;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget b(): DockManagerLayout {\r\n\t\tlet ret_ = this.j.j(\"layout\", (a: any) => new DockManagerLayout());\r\n\t\treturn <DockManagerLayout>ret_;\r\n\t}\r\n\tset b(a: DockManagerLayout) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"layout\", value_);\r\n\t}\r\n\tget c(): DockManagerPane {\r\n\t\tlet ret_ = this.j.j(\"draggedPane\", (a: any) => DockManagerPane.createFromNative(a));\r\n\t\treturn <DockManagerPane>ret_;\r\n\t}\r\n\tset c(a: DockManagerPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"draggedPane\", value_);\r\n\t}\r\n\tget e(): DockManagerPoint {\r\n\t\tlet ret_ = this.j.j(\"dropPosition\", (a: any) => new DockManagerPoint());\r\n\t\treturn <DockManagerPoint>ret_;\r\n\t}\r\n\tset e(a: DockManagerPoint) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"dropPosition\", value_);\r\n\t}\r\n\tget a(): ContentPane {\r\n\t\tlet ret_ = this.j.j(\"activePane\", (a: any) => new ContentPane());\r\n\t\treturn <ContentPane>ret_;\r\n\t}\r\n\tset a(a: ContentPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"activePane\", value_);\r\n\t}\r\n\tget l(): boolean {\r\n\t\tlet ret_ = this.j.k(\"allowMaximize\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset l(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"allowMaximize\", value_);\r\n\t}\r\n\tget g(): DockManagerShowHeaderIconOnHover {\r\n\t\tlet ret_ = this.j.k(\"showHeaderIconOnHover\");\r\n\t\tret_ = enumGetBox<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, EnumUtil.getEnumValue<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, this.j.f<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, ret_);\r\n\t}\r\n\tset g(a: DockManagerShowHeaderIconOnHover) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, a);\r\n\t\tvalue_ = WCNativeHelper.m(value_.toString());\r\n\t\tthis.j.s(\"showHeaderIconOnHover\", value_);\r\n\t}\r\n\tget d(): DockManagerPane {\r\n\t\tlet ret_ = this.j.j(\"maximizedPane\", (a: any) => DockManagerPane.createFromNative(a));\r\n\t\treturn <DockManagerPane>ret_;\r\n\t}\r\n\tset d(a: DockManagerPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"maximizedPane\", value_);\r\n\t}\r\n\tget f(): DockManagerResourceStrings {\r\n\t\tlet ret_ = this.j.j(\"resourceStrings\", (a: any) => new DockManagerResourceStrings());\r\n\t\treturn <DockManagerResourceStrings>ret_;\r\n\t}\r\n\tset f(a: DockManagerResourceStrings) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"resourceStrings\", value_);\r\n\t}\r\n\tget k(): boolean {\r\n\t\tlet ret_ = this.j.k(\"allowFloatingPanesResize\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset k(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"allowFloatingPanesResize\", value_);\r\n\t}\r\n\tget m(): boolean {\r\n\t\tlet ret_ = this.j.k(\"disableKeyboardNavigation\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset m(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.s(\"disableKeyboardNavigation\", value_);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcDockManagerLayout } from \"./igc-dock-manager-layout\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { IgcDockManagerPoint } from \"./igc-dock-manager-point\";\r\nimport { IgcContentPaneComponent } from \"./igc-content-pane-component\";\r\nimport { DockManagerShowHeaderIconOnHover, DockManagerShowHeaderIconOnHover_$type } from \"./DockManagerShowHeaderIconOnHover\";\r\nimport { IgcDockManagerResourceStrings } from \"./igc-dock-manager-resource-strings\";\r\nimport { IgcLayoutChangeEventArgs } from \"./igc-layout-change-event-args\";\r\nimport { DockManager } from \"./DockManager\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { NamePatcher, getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString, initializePropertiesFromCss } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Describes a Dock Manager component.\r\n*/\r\nexport class IgcDockManagerComponent\r\n{\r\n\r\nprotected createImplementation() : DockManager\r\n{\r\n\treturn new DockManager();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManager {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcDockManagerComponent {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\t                                    \r\n\t                                    if ((this as any)._styling) {\r\n\t                                        NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n\t                                    }\r\n\t\tthis._implementation = this.createImplementation();\r\n\t\t(<any>this._implementation).externalObject = this;\r\n\t\tthis.onImplementationCreated();\r\n\t}\r\n\tprivate _settingAttributes: boolean = false;\r\n\t                                protected _attached: boolean = false;\r\n\t                                    \r\n\t                                private _queuedSetAttributes: { attrName: string, attrValue: string }[] = [];\r\n\t                                protected _enqueueSetAttribute(attrName: string, attrValue: string) {\r\n\t                                     this._queuedSetAttributes.push({ attrName: attrName, attrValue: attrValue });\r\n\t                                }\r\n\t\r\n\t                                protected _flushQueuedAttributes() {\r\n\t                                    this._settingAttributes = true;\r\n\t                                    for (let i = 0; i < this._queuedSetAttributes.length; i++) {\r\n\t                                        this.setAttribute(\r\n\t                                            this._queuedSetAttributes[i].attrName,\r\n\t                                            this._queuedSetAttributes[i].attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t                                    this._queuedSetAttributes.length = 0;\r\n\t                                }\r\n\t                                protected _a(attrName: string, attrValue: any) {\r\n\t                                    if (this._updatingFromAttribute) {\r\n\treturn;\r\n\t    }\r\n\t                                    if (attrValue) {\r\n\t                                        attrValue = attrValue.toString();\r\n\t                                    }\r\n\t                                    this._settingAttributes = true;\r\n\t                                    attrName = toSpinal(attrName);\r\n\t                                    if (this._attached) {\r\n\t                                        this.setAttribute(attrName, attrValue);\r\n\t                                    } else { \r\n\t                                        this._enqueueSetAttribute(attrName, attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t    }\r\n\t\r\n\t                                protected setAttribute(attrName: string, attrValue: string) {\r\n\t\r\n\t                                }\r\n\t\r\n\t                \r\n\t                private _updatingFromAttribute: boolean = false;\r\n\t                attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n\t                    if (this._settingAttributes) {\r\n\t                        return;\r\n\t                    }\r\n\t                    let setName = fromSpinal(name);\r\n\t                    this._updatingFromAttribute = true;\r\n\t                    (<any>this)[setName] = newValue;\r\n\t                    this._updatingFromAttribute = false;\r\n\t                }\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * Gets/sets the layout configuration of the Dock Manager.\r\n\t*/\r\n\tget layout() : IgcDockManagerLayout {\r\n\t                                        const r = this.i.b;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerLayout();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset layout(v: IgcDockManagerLayout) {\r\n\t\tv == null ? this.i.b = null : this.i.b = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the currently dragged pane.\r\n\t*/\r\n\tget draggedPane() : IgcDockManagerPaneComponent {\r\n\t                                        const r = this.i.c;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcDockManagerPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset draggedPane(v: IgcDockManagerPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.c = null : this.i.c = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the current drop position when performing custom drag/drop.\r\n\t*/\r\n\tget dropPosition() : IgcDockManagerPoint {\r\n\t                                        const r = this.i.e;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerPoint();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset dropPosition(v: IgcDockManagerPoint) {\r\n\t\tv == null ? this.i.e = null : this.i.e = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the active pane of the Dock Manager.\r\n\t*/\r\n\tget activePane() : IgcContentPaneComponent {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcContentPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset activePane(v: IgcContentPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to maximize panes. Defaults to true.\r\n\t*/\r\n\tget allowMaximize() : boolean {\r\n\t\treturn (this.i.l as boolean);\r\n\t}\r\n\tset allowMaximize(v: boolean) {\r\n\t\tthis.i.l = ensureBool(v);\r\n\t                                        this._a(\"allowMaximize\", this.i.l);\r\n\t}\r\n\t/**\r\n\t * Determines which tab header icons should show when hovering over the tab with the mouse. Defaults to undefined.\r\n\t*/\r\n\tget showHeaderIconOnHover() : DockManagerShowHeaderIconOnHover {\r\n\t\treturn this.i.g;\r\n\t}\r\n\tset showHeaderIconOnHover(v: DockManagerShowHeaderIconOnHover) {\r\n\t\tthis.i.g = ensureEnum<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, v);\r\n\t                                        this._a(\"showHeaderIconOnHover\", enumToString<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, this.i.g));\r\n\t}\r\n\t/**\r\n\t * Gets/sets the maximized pane.\r\n\t*/\r\n\tget maximizedPane() : IgcDockManagerPaneComponent {\r\n\t                                        const r = this.i.d;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcDockManagerPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset maximizedPane(v: IgcDockManagerPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.d = null : this.i.d = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the resource strings.\r\n\t*/\r\n\tget resourceStrings() : IgcDockManagerResourceStrings {\r\n\t                                        const r = this.i.f;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerResourceStrings();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset resourceStrings(v: IgcDockManagerResourceStrings) {\r\n\t\tv == null ? this.i.f = null : this.i.f = v.i;\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to resize floating panes. Defaults to true.\r\n\t*/\r\n\tget allowFloatingPanesResize() : boolean {\r\n\t\treturn (this.i.k as boolean);\r\n\t}\r\n\tset allowFloatingPanesResize(v: boolean) {\r\n\t\tthis.i.k = ensureBool(v);\r\n\t                                        this._a(\"allowFloatingPanesResize\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * Disables the built-in keyboard shortcuts for pane navigation. Defaults to false.\r\n\t*/\r\n\tget disableKeyboardNavigation() : boolean {\r\n\t\treturn (this.i.m as boolean);\r\n\t}\r\n\tset disableKeyboardNavigation(v: boolean) {\r\n\t\tthis.i.m = ensureBool(v);\r\n\t                                        this._a(\"disableKeyboardNavigation\", this.i.m);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.layout && (this.layout as any).name && (this.layout as any).name == name) { return this.layout; }\r\n\tif (this.draggedPane && (this.draggedPane as any).name && (this.draggedPane as any).name == name) { return this.draggedPane; }\r\n\tif (this.dropPosition && (this.dropPosition as any).name && (this.dropPosition as any).name == name) { return this.dropPosition; }\r\n\tif (this.activePane && (this.activePane as any).name && (this.activePane as any).name == name) { return this.activePane; }\r\n\tif (this.maximizedPane && (this.maximizedPane as any).name && (this.maximizedPane as any).name == name) { return this.maximizedPane; }\r\n\tif (this.resourceStrings && (this.resourceStrings as any).name && (this.resourceStrings as any).name == name) { return this.resourceStrings; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\tprotected __p: string = null;\r\n\tprotected _hasUserValues: Set<string> = new Set<string>();\r\n\tprotected get hasUserValues(): Set<string> {\r\n\t    return this._hasUserValues;\r\n\t}\r\n\tprotected __m(propertyName: string) {\r\n\t    if (!this._inStyling) {\r\n\t        this._hasUserValues.add(propertyName);\r\n\t    }\r\n\t}\r\n\t\r\n\tprotected _stylingContainer: any = null;\r\n\tprotected _stylingParent: any = null;\r\n\tprotected _inStyling: boolean = false;\r\n\tprotected _styling(container: any, component: any, parent?: any) {\r\n\t        if (this._inStyling) {\r\n\t            return;\r\n\t        }\r\n\t        this._inStyling = true;\r\n\t        this._stylingContainer = container;\r\n\t        this._stylingParent = component;\r\n\t\t\r\n\t        let genericPrefix = \"\";\r\n\t        let typeName = (this.i as any).$type.name;\r\n\t        if (typeName.indexOf(\"Xam\") === 0) {\r\n\t            typeName = typeName.substring(3);\r\n\t        }\r\n\t        genericPrefix = toSpinal(\"DockManagerComponent\");\r\n\t\t\r\n\t\tlet additionalPrefixes = [];\r\n\t\t\r\n\t\tlet prefix = toSpinal(typeName);\r\n\t\tadditionalPrefixes.push(prefix + \"-\");\r\n\t\r\n\t        let b = (this.i as any).$type.baseType;\r\n\t        while (b && b.name != \"Object\" && \r\n\t            b.name != \"Base\" && \r\n\t            b.name != \"Control\" && \r\n\t            b.Name != \"DependencyObject\" &&\r\n\t            b.Name != \"FrameworkElement\") {\r\n\t            typeName = b.name;\r\n\t            if (typeName.indexOf(\"Xam\") === 0) {\r\n\t                typeName = typeName.substring(3);\r\n\t            }\r\n\t            let basePrefix = toSpinal(typeName);\r\n\t            additionalPrefixes.push(basePrefix + \"-\");\r\n\t            b = b.baseType;\r\n\t        }\r\n\t\t\r\n\t\tif (parent) {\r\n\t\t\tlet parentTypeName = (parent.i as any).$type.name;\r\n\t            if (parentTypeName.indexOf(\"Xam\") === 0) {\r\n\t                parentTypeName = parentTypeName.substring(3);\r\n\t            }\r\n\t            let parentPrefix = toSpinal(parentTypeName);\r\n\t\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\r\n\t\t}\r\n\t\r\n\t\tinitializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\r\n\t\r\n\t        if (this.draggedPane && (this.draggedPane as any)._styling) {\r\n\t    (this.draggedPane as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.activePane && (this.activePane as any)._styling) {\r\n\t    (this.activePane as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.maximizedPane && (this.maximizedPane as any)._styling) {\r\n\t    (this.maximizedPane as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t\r\n\t        if ((this as any)._otherStyling) {\r\n\t            (this as any)._otherStyling(container, component, parent);\r\n\t        }\r\n\t        this._inStyling = false;\r\n\t}\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n\t\r\n\t    private _layoutChange: (s: IgcDockManagerComponent, e: IgcLayoutChangeEventArgs) => void = null;\r\n\t    private _layoutChange_wrapped: any = null;\r\n\t\r\n\tpublic get layoutChange(): (s: IgcDockManagerComponent, e: IgcLayoutChangeEventArgs) => void {\r\n\treturn this._layoutChange;\r\n\t}\r\n\t    public set layoutChange(ev: (s: IgcDockManagerComponent, e: IgcLayoutChangeEventArgs) => void) {\r\n\t        if (this._layoutChange_wrapped !== null) {\r\n\t            this.i.layoutChange = delegateRemove(this.i.layoutChange, this._layoutChange_wrapped);\r\n\t            this._layoutChange_wrapped = null;\r\n\t            this._layoutChange = null;\r\n\t        }\r\n\t\r\n\t        this._layoutChange = ev;\r\n\t        this._layoutChange_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcLayoutChangeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeLayoutChange) {\r\n\t                        (this as any).beforeLayoutChange(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._layoutChange) {\r\n\t    this._layoutChange(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.layoutChange = delegateCombine(this.i.layoutChange, this._layoutChange_wrapped);\r\n\t        if (this.i.layoutChangeChanged) {\r\n\t            this.i.layoutChangeChanged();\r\n\t        }\r\n\t;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcSplitPaneModule } from './igc-split-pane-module';\r\nimport { IgcContentPaneModule } from './igc-content-pane-module';\r\nimport { IgcDocumentHostModule } from './igc-document-host-module';\r\nimport { IgcTabGroupPaneModule } from './igc-tab-group-pane-module';\r\nimport { IgcTabHeaderElementModule } from './igc-tab-header-element-module';\r\nimport { IgcDockManagerComponent } from './igc-dock-manager-component';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcDockManagerModule {\r\n    public static register() {\r\n                IgcSplitPaneModule.register();\r\n        IgcContentPaneModule.register();\r\n        IgcDocumentHostModule.register();\r\n        IgcTabGroupPaneModule.register();\r\n        IgcTabHeaderElementModule.register();\r\n        IgcDockManagerComponent.register();\r\n        TypeRegistrar.registerCons('IgcDockManagerComponent', IgcDockManagerComponent);        TypeRegistrar.registerCons('IgcDockManagerComponent', IgcDockManagerComponent);\r\n\r\n    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcSplitPaneComponent } from './igc-split-pane-component';\r\nimport { SplitPane } from './SplitPane';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcSplitPaneModule {\r\n    public static register(): void {\r\n        IgcSplitPaneComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcSplitPaneComponent\", IgcSplitPaneComponent);\r\n        TypeRegistrar.register(\"SplitPane\", (<any>SplitPane).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcContentPaneComponent } from './igc-content-pane-component';\r\nimport { ContentPane } from './ContentPane';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcContentPaneModule {\r\n    public static register(): void {\r\n        IgcContentPaneComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcContentPaneComponent\", IgcContentPaneComponent);\r\n        TypeRegistrar.register(\"ContentPane\", (<any>ContentPane).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcDocumentHostComponent } from './igc-document-host-component';\r\nimport { DocumentHost } from './DocumentHost';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcDocumentHostModule {\r\n    public static register(): void {\r\n        IgcDocumentHostComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcDocumentHostComponent\", IgcDocumentHostComponent);\r\n        TypeRegistrar.register(\"DocumentHost\", (<any>DocumentHost).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTabGroupPaneComponent } from './igc-tab-group-pane-component';\r\nimport { TabGroupPane } from './TabGroupPane';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTabGroupPaneModule {\r\n    public static register(): void {\r\n        IgcTabGroupPaneComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcTabGroupPaneComponent\", IgcTabGroupPaneComponent);\r\n        TypeRegistrar.register(\"TabGroupPane\", (<any>TabGroupPane).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTabHeaderElement } from './igc-tab-header-element';\r\nimport { TabHeaderElement } from './TabHeaderElement';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTabHeaderElementModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcTabHeaderElement\", IgcTabHeaderElement);\r\n        TypeRegistrar.register(\"TabHeaderElement\", (<any>TabHeaderElement).$type);\r\n    }\r\n}\r\n"],"names":["DockManagerPaneType","DockManagerPaneType_$type","SplitPaneOrientation","SplitPaneOrientation_$type","UnpinnedLocation","UnpinnedLocation_$type","DockManagerPoint","a","WCNativeHelper","e","b","this","nativeElement","l","setNativeElement","c","k","value_","s","d","$t","DockManagerPane","___mustPassByValue","static","native_","undefined","toLowerCase","SplitPane","ContentPane","TabGroupPane","DocumentHost","g","j","h","ret_","f","toString","i","$","n","ContentPaneCollection","t","z","v","x","y","aa","ab","w","r","m","q","p","o","ObservableCollection$1","constructor","super","DockManagerPaneCollection","createFromNative","IgcDockManagerPaneComponent","createImplementation","_implementation","internal","$type","externalName","name","onImplementationCreated","_settingAttributes","_attached","_queuedSetAttributes","_updatingFromAttribute","__p","_hasUserValues","Set","_stylingContainer","_stylingParent","_inStyling","_styling","Object","getPrototypeOf","externalObject","_enqueueSetAttribute","attrName","attrValue","push","_flushQueuedAttributes","length","setAttribute","_a","attributeChangedCallback","oldValue","newValue","setName","findByName","findEphemera","indexOf","hasUserValues","__m","propertyName","add","container","component","parent","genericPrefix","typeName","substring","additionalPrefixes","prefix","baseType","Name","basePrefix","parentTypeName","parentPrefix","_otherStyling","IgcDockManagerPaneCollection","IgCollection","list","_createInnerColl","coll","SyncableObservableCollection$2","compare","ext","int","comp","equals","createTo","createFrom","_createFromInternal","IgcDockManagerPoint","_provideImplementation","element","IgcSplitPaneComponent","_panes","id","Type","orientation","panes","innerColl","_fromInner","_setSyncTarget","_fromOuter","syncColl","SyncableObservableCollection$1","_inner","clear","size","floatingLocation","floatingWidth","floatingHeight","floatingResizable","allowEmpty","IgcContentPaneComponent","contentId","header","headerId","tabHeaderId","unpinnedHeaderId","floatingHeaderId","allowClose","allowMaximize","allowPinning","allowDocking","allowFloating","unpinnedSize","isPinned","unpinnedLocation","hidden","disabled","documentOnly","IgcDocumentHostComponent","rootPane","IgcContentPaneCollection","IgcTabGroupPaneComponent","selectedIndex","DragService","IgcDragService","DockManagerShowHeaderIconOnHover","TabHeaderElement","BaseElement","IgcTabHeaderElement","dragService","IgcSplitPaneCollection","SplitPaneCollection","DockManagerLayout","IgcDockManagerLayout","_floatingPanes","floatingPanes","DockManagerShowHeaderIconOnHover_$type","DockManagerResourceStrings","IgcDockManagerResourceStrings","close","pin","unpin","maximize","minimize","moreOptions","moreTabs","documents","LayoutChangeEventArgs","$ret","IgcLayoutChangeEventArgs","detail","DockManager","layoutChange","layoutChangeChanged","IgcDockManagerComponent","_layoutChange","_layoutChange_wrapped","layout","draggedPane","dropPosition","activePane","showHeaderIconOnHover","maximizedPane","resourceStrings","allowFloatingPanesResize","disableKeyboardNavigation","ev","outerArgs","beforeLayoutChange","IgcDockManagerModule","register"],"sourceRoot":""}